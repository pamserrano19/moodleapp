{"version":3,"sources":["./src/addons/messages/pages/search/search.html","./src/addons/messages/pages/search/search.module.ts","./src/addons/messages/pages/search/search.page.ts"],"names":[],"mappings":"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","file":"pages-search-search-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>{{ 'addon.messages.searchcombined' | translate }}</h1>\\r\\n        </ion-title>\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <core-split-view>\\r\\n        <core-search-box (onSubmit)=\\\"search($event)\\\" (onClear)=\\\"clearSearch()\\\" [disabled]=\\\"disableSearch\\\" autocorrect=\\\"off\\\"\\r\\n            [spellcheck]=\\\"false\\\" [autoFocus]=\\\"true\\\" [lengthCheck]=\\\"1\\\" searchArea=\\\"AddonMessagesSearch\\\"></core-search-box>\\r\\n\\r\\n        <core-loading [hideUntil]=\\\"!displaySearching\\\" [message]=\\\"'core.searching' | translate\\\">\\r\\n            <ion-list *ngIf=\\\"displayResults\\\">\\r\\n                <ng-container *ngTemplateOutlet=\\\"resultsTemplate; context: {item: contacts}\\\"></ng-container>\\r\\n                <ng-container *ngTemplateOutlet=\\\"resultsTemplate; context: {item: nonContacts}\\\"></ng-container>\\r\\n                <ng-container *ngTemplateOutlet=\\\"resultsTemplate; context: {item: messages}\\\"></ng-container>\\r\\n                <!-- The infinite loading cannot be inside the ng-template, it fails because it doesn't find ion-content. -->\\r\\n                <core-infinite-loading [enabled]=\\\"messages.canLoadMore\\\" (action)=\\\"search(query, 'messages', $event)\\\"\\r\\n                    [error]=\\\"messages.loadMoreError\\\"></core-infinite-loading>\\r\\n            </ion-list>\\r\\n\\r\\n            <core-empty-box *ngIf=\\\"displayResults && !contacts.results.length && !nonContacts.results.length && !messages.results.length\\\"\\r\\n                icon=\\\"fas-search\\\" [message]=\\\"'core.noresults' | translate\\\">\\r\\n            </core-empty-box>\\r\\n        </core-loading>\\r\\n    </core-split-view>\\r\\n</ion-content>\\r\\n\\r\\n<!-- Template to render a list of results -->\\r\\n<ng-template #resultsTemplate let-item=\\\"item\\\">\\r\\n    <ng-container *ngIf=\\\"item.results.length > 0\\\">\\r\\n        <ion-item-divider class=\\\"ion-text-wrap\\\">\\r\\n            <ion-label>\\r\\n                <h2>{{ item.titleString | translate }}</h2>\\r\\n            </ion-label>\\r\\n        </ion-item-divider>\\r\\n\\r\\n        <!-- List of results -->\\r\\n        <ion-item class=\\\"addon-message-discussion ion-text-wrap\\\" *ngFor=\\\"let result of item.results\\\" [attr.aria-label]=\\\"result.fullname\\\"\\r\\n            (click)=\\\"openConversation(result)\\\" [attr.aria-current]=\\\"result == selectedResult ? 'page' : 'false'\\\" detail=\\\"true\\\" button>\\r\\n            <core-user-avatar slot=\\\"start\\\" [user]=\\\"result\\\" [checkOnline]=\\\"true\\\" [linkProfile]=\\\"false\\\"></core-user-avatar>\\r\\n            <ion-label>\\r\\n                <p class=\\\"item-heading\\\">\\r\\n                    <core-format-text [text]=\\\"result.fullname\\\" [highlight]=\\\"result.highlightName\\\" [filter]=\\\"false\\\">\\r\\n                    </core-format-text>\\r\\n                    <ion-icon name=\\\"fas-ban\\\" *ngIf=\\\"result.isblocked\\\" [attr.aria-label]=\\\"'addon.messages.contactblocked' | translate\\\">\\r\\n                    </ion-icon>\\r\\n                </p>\\r\\n                <ion-note *ngIf=\\\"result.lastmessagedate > 0\\\">\\r\\n                    {{result.lastmessagedate | coreDateDayOrTime}}\\r\\n                </ion-note>\\r\\n                <p class=\\\"addon-message-last-message\\\">\\r\\n                    <span *ngIf=\\\"result.sentfromcurrentuser\\\" class=\\\"addon-message-last-message-user\\\">\\r\\n                        {{ 'addon.messages.you' | translate }}\\r\\n                    </span>\\r\\n                    <core-format-text clean=\\\"true\\\" singleLine=\\\"true\\\" [text]=\\\"result.lastmessage\\\" [highlight]=\\\"result.highlightMessage\\\"\\r\\n                        contextLevel=\\\"system\\\" [contextInstanceId]=\\\"0\\\" class=\\\"addon-message-last-message-text\\\"></core-format-text>\\r\\n                </p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n\\r\\n        <!-- Load more button for contacts and non-contacts -->\\r\\n        <ng-container *ngIf=\\\"item.type != 'messages'\\\">\\r\\n            <div class=\\\"ion-padding-horizontal\\\" *ngIf=\\\"item.canLoadMore && !item.loadingMore\\\">\\r\\n                <ion-button expand=\\\"block\\\" fill=\\\"outline\\\" (click)=\\\"search(query, item.type)\\\">\\r\\n                    {{ 'core.loadmore' | translate }}\\r\\n                </ion-button>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"item.loadingMore\\\" class=\\\"ion-padding ion-text-center\\\">\\r\\n                <ion-spinner [attr.aria-label]=\\\"'core.loading' | translate\\\"></ion-spinner>\\r\\n            </div>\\r\\n        </ng-container>\\r\\n    </ng-container>\\r\\n</ng-template>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CoreScreen } from '@services/screen';\r\nimport { conditionalRoutes } from '@/app/app-routing.module';\r\nimport { AddonMessagesDiscussionRoute } from '@addons/messages/messages-lazy.module';\r\n\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\nimport { CoreSearchComponentsModule } from '@features/search/components/components.module';\r\n\r\nimport { AddonMessagesSearchPage } from './search.page';\r\n\r\nconst mobileRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AddonMessagesSearchPage,\r\n    },\r\n    AddonMessagesDiscussionRoute,\r\n];\r\n\r\nconst tabletRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AddonMessagesSearchPage,\r\n        children: [\r\n            AddonMessagesDiscussionRoute,\r\n        ],\r\n    },\r\n];\r\n\r\nconst routes: Routes = [\r\n    ...conditionalRoutes(mobileRoutes, () => CoreScreen.isMobile),\r\n    ...conditionalRoutes(tabletRoutes, () => CoreScreen.isTablet),\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n        CoreSearchComponentsModule,\r\n    ],\r\n    declarations: [\r\n        AddonMessagesSearchPage,\r\n    ],\r\n    exports: [RouterModule],\r\n})\r\nexport class AddonMessagesSearchPageModule {}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnDestroy } from '@angular/core';\r\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\r\nimport { CoreSites } from '@services/sites';\r\nimport {\r\n    AddonMessagesProvider,\r\n    AddonMessagesConversationMember,\r\n    AddonMessagesMessageAreaContact,\r\n    AddonMessages,\r\n} from '../../services/messages';\r\nimport { CoreDomUtils } from '@services/utils/dom';\r\nimport { CoreApp } from '@services/app';\r\nimport { CoreNavigator } from '@services/navigator';\r\nimport { Params } from '@angular/router';\r\nimport { CoreScreen } from '@services/screen';\r\n\r\n/**\r\n * Page for searching users.\r\n */\r\n@Component({\r\n    selector: 'page-addon-messages-search',\r\n    templateUrl: 'search.html',\r\n})\r\nexport class AddonMessagesSearchPage implements OnDestroy {\r\n\r\n    disableSearch = false;\r\n    displaySearching = false;\r\n    displayResults = false;\r\n    query = '';\r\n    contacts: AddonMessagesSearchResults = {\r\n        type: 'contacts',\r\n        titleString: 'addon.messages.contacts',\r\n        results: [],\r\n        canLoadMore: false,\r\n        loadingMore: false,\r\n    };\r\n\r\n    nonContacts: AddonMessagesSearchResults = {\r\n        type: 'noncontacts',\r\n        titleString: 'addon.messages.noncontacts',\r\n        results: [],\r\n        canLoadMore: false,\r\n        loadingMore: false,\r\n    };\r\n\r\n    messages: AddonMessagesSearchMessageResults = {\r\n        type: 'messages',\r\n        titleString: 'addon.messages.messages',\r\n        results: [],\r\n        canLoadMore: false,\r\n        loadingMore: false,\r\n        loadMoreError: false,\r\n    };\r\n\r\n    selectedResult?: AddonMessagesConversationMember | AddonMessagesMessageAreaContact;\r\n\r\n    protected memberInfoObserver: CoreEventObserver;\r\n\r\n    constructor() {\r\n        // Update block status of a user.\r\n        this.memberInfoObserver = CoreEvents.on(\r\n            AddonMessagesProvider.MEMBER_INFO_CHANGED_EVENT,\r\n            (data) => {\r\n                if (!data.userBlocked && !data.userUnblocked) {\r\n                    // The block status has not changed, ignore.\r\n                    return;\r\n                }\r\n\r\n                const contact = this.contacts.results.find((user) => user.id == data.userId);\r\n                if (contact) {\r\n                    contact.isblocked = !!data.userBlocked;\r\n                } else {\r\n                    const nonContact = this.nonContacts.results.find((user) => user.id == data.userId);\r\n                    if (nonContact) {\r\n                        nonContact.isblocked = !!data.userBlocked;\r\n                    }\r\n                }\r\n\r\n                this.messages.results.forEach((message: AddonMessagesMessageAreaContact): void => {\r\n                    if (message.userid == data.userId) {\r\n                        message.isblocked = !!data.userBlocked;\r\n                    }\r\n                });\r\n            },\r\n            CoreSites.getCurrentSiteId(),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Clear search.\r\n     */\r\n    clearSearch(): void {\r\n        this.query = '';\r\n        this.displayResults = false;\r\n\r\n        // Empty details.\r\n        const splitViewLoaded = CoreNavigator.isCurrentPathInTablet('**/messages/search/discussion');\r\n        if (splitViewLoaded) {\r\n            CoreNavigator.navigate('../');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Start a new search or load more results.\r\n     *\r\n     * @param query Text to search for.\r\n     * @param loadMore Load more contacts, noncontacts or messages. If undefined, start a new search.\r\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\r\n     * @return Resolved when done.\r\n     */\r\n    async search(query: string, loadMore?: 'contacts' | 'noncontacts' | 'messages', infiniteComplete?: () => void): Promise<void> {\r\n        CoreApp.closeKeyboard();\r\n\r\n        this.query = query;\r\n        this.disableSearch = true;\r\n        this.displaySearching = !loadMore;\r\n\r\n        const promises: Promise<void>[] = [];\r\n        let newContacts: AddonMessagesConversationMember[] = [];\r\n        let newNonContacts: AddonMessagesConversationMember[] = [];\r\n        let newMessages: AddonMessagesMessageAreaContact[] = [];\r\n        let canLoadMoreContacts = false;\r\n        let canLoadMoreNonContacts = false;\r\n        let canLoadMoreMessages = false;\r\n\r\n        if (!loadMore || loadMore == 'contacts' || loadMore == 'noncontacts') {\r\n            const limitNum = loadMore ? AddonMessagesProvider.LIMIT_SEARCH : AddonMessagesProvider.LIMIT_INITIAL_USER_SEARCH;\r\n            let limitFrom = 0;\r\n            if (loadMore == 'contacts') {\r\n                limitFrom = this.contacts.results.length;\r\n                this.contacts.loadingMore = true;\r\n            } else if (loadMore == 'noncontacts') {\r\n                limitFrom = this.nonContacts.results.length;\r\n                this.nonContacts.loadingMore = true;\r\n            }\r\n\r\n            promises.push(\r\n                AddonMessages.searchUsers(query, limitFrom, limitNum).then((result) => {\r\n                    if (!loadMore || loadMore == 'contacts') {\r\n                        newContacts = result.contacts;\r\n                        canLoadMoreContacts = result.canLoadMoreContacts;\r\n                    }\r\n                    if (!loadMore || loadMore == 'noncontacts') {\r\n                        newNonContacts = result.nonContacts;\r\n                        canLoadMoreNonContacts = result.canLoadMoreNonContacts;\r\n                    }\r\n\r\n                    return;\r\n                }),\r\n            );\r\n        }\r\n\r\n        if (!loadMore || loadMore == 'messages') {\r\n            let limitFrom = 0;\r\n            if (loadMore == 'messages') {\r\n                limitFrom = this.messages.results.length;\r\n                this.messages.loadingMore = true;\r\n            }\r\n\r\n            promises.push(\r\n                AddonMessages.searchMessages(query, undefined, limitFrom).then((result) => {\r\n                    newMessages = result.messages;\r\n                    canLoadMoreMessages = result.canLoadMore;\r\n\r\n                    return;\r\n                }),\r\n            );\r\n        }\r\n\r\n        try {\r\n            await Promise.all(promises);\r\n            if (!loadMore) {\r\n                this.contacts.results = [];\r\n                this.nonContacts.results = [];\r\n                this.messages.results = [];\r\n            }\r\n\r\n            this.displayResults = true;\r\n\r\n            if (!loadMore || loadMore == 'contacts') {\r\n                this.contacts.results.push(...newContacts);\r\n                this.contacts.canLoadMore = canLoadMoreContacts;\r\n                this.setHighlight(newContacts, true);\r\n            }\r\n\r\n            if (!loadMore || loadMore == 'noncontacts') {\r\n                this.nonContacts.results.push(...newNonContacts);\r\n                this.nonContacts.canLoadMore = canLoadMoreNonContacts;\r\n                this.setHighlight(newNonContacts, true);\r\n            }\r\n\r\n            if (!loadMore || loadMore == 'messages') {\r\n                this.messages.results.push(...newMessages);\r\n                this.messages.canLoadMore = canLoadMoreMessages;\r\n                this.messages.loadMoreError = false;\r\n                this.setHighlight(newMessages, false);\r\n            }\r\n\r\n            if (!loadMore) {\r\n                if (this.contacts.results.length > 0) {\r\n                    this.openConversation(this.contacts.results[0], true);\r\n                } else if (this.nonContacts.results.length > 0) {\r\n                    this.openConversation(this.nonContacts.results[0], true);\r\n                } else if (this.messages.results.length > 0) {\r\n                    this.openConversation(this.messages.results[0], true);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'addon.messages.errorwhileretrievingusers', true);\r\n\r\n            if (loadMore == 'messages') {\r\n                this.messages.loadMoreError = true;\r\n            }\r\n        } finally {\r\n            this.disableSearch = false;\r\n            this.displaySearching = false;\r\n\r\n            if (loadMore == 'contacts') {\r\n                this.contacts.loadingMore = false;\r\n            } else if (loadMore == 'noncontacts') {\r\n                this.nonContacts.loadingMore = false;\r\n            } else if (loadMore == 'messages') {\r\n                this.messages.loadingMore = false;\r\n            }\r\n\r\n            infiniteComplete && infiniteComplete();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Open a conversation in the split view.\r\n     *\r\n     * @param result User or message.\r\n     * @param onInit Whether the tser was selected on initial load.\r\n     */\r\n    openConversation(result: AddonMessagesConversationMember | AddonMessagesMessageAreaContact, onInit: boolean = false): void {\r\n        if (!onInit || CoreScreen.isTablet) {\r\n            this.selectedResult = result;\r\n\r\n            const params: Params = {};\r\n            if ('conversationid' in result) {\r\n                params.conversationId = result.conversationid;\r\n            } else {\r\n                params.userId = result.id;\r\n            }\r\n\r\n            const splitViewLoaded = CoreNavigator.isCurrentPathInTablet('**/messages/search/discussion');\r\n            const path = (splitViewLoaded ? '../' : '') + 'discussion';\r\n            CoreNavigator.navigate(path, { params });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the highlight values for each entry.\r\n     *\r\n     * @param results Results to highlight.\r\n     * @param isUser Whether the results are from a user search or from a message search.\r\n     */\r\n    setHighlight(\r\n        results: (AddonMessagesConversationMemberWithHighlight | AddonMessagesMessageAreaContactWithHighlight)[],\r\n        isUser = false,\r\n    ): void {\r\n        results.forEach((result) => {\r\n            result.highlightName = isUser ? this.query : undefined;\r\n            result.highlightMessage = !isUser ? this.query : undefined;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Component destroyed.\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.memberInfoObserver?.off();\r\n    }\r\n\r\n}\r\n\r\ntype AddonMessagesSearchResults = {\r\n    type: string;\r\n    titleString: string;\r\n    results: AddonMessagesConversationMemberWithHighlight[];\r\n    canLoadMore: boolean;\r\n    loadingMore: boolean;\r\n};\r\n\r\ntype AddonMessagesSearchMessageResults = {\r\n    type: string;\r\n    titleString: string;\r\n    results: AddonMessagesMessageAreaContactWithHighlight[];\r\n    canLoadMore: boolean;\r\n    loadingMore: boolean;\r\n    loadMoreError: boolean;\r\n};\r\n\r\ntype AddonMessagesSearchResultHighlight = {\r\n    highlightName?: string;\r\n    highlightMessage?: string;\r\n};\r\n\r\ntype AddonMessagesConversationMemberWithHighlight = AddonMessagesConversationMember & AddonMessagesSearchResultHighlight;\r\ntype AddonMessagesMessageAreaContactWithHighlight = AddonMessagesMessageAreaContact & AddonMessagesSearchResultHighlight;\r\n"],"sourceRoot":"webpack:///"}