{"version":3,"sources":["./src/addons/mod/assign/pages/edit/edit.html","./src/addons/mod/assign/pages/index/index.html","./src/addons/mod/assign/pages/submission-list/submission-list.html","./src/addons/mod/assign/pages/submission-review/submission-review.html","./src/addons/mod/assign/assign-lazy.module.ts","./src/addons/mod/assign/pages/edit/edit.scss","./src/addons/mod/assign/pages/edit/edit.ts","./src/addons/mod/assign/pages/index/index.page.ts","./src/addons/mod/assign/pages/submission-list/submission-list.page.ts","./src/addons/mod/assign/pages/submission-review/submission-review.ts","./src/core/classes/items-management/swipe-navigation-items-manager.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,0nBAA2jB,2BAA2B,mtFAAmtF,E;;;;;;;;;;;;ACAxzG;AAAe,07BAA23B,oCAAoC,0NAA0N,E;;;;;;;;;;;;ACAxoC;AAAe,6zBAA8vB,oCAAoC,8oBAA8oB,oCAAoC,6FAA6F,mCAAmC,8RAA8R,iCAAiC,wJAAwJ,eAAe,mtBAAmtB,yBAAyB,uIAAuI,+CAA+C,oBAAoB,8PAA8P,sBAAsB,iTAAiT,yCAAyC,mTAAmT,gDAAgD,uMAAuM,8CAA8C,4TAA4T,+BAA+B,4UAA4U,qDAAqD,ySAAyS,E;;;;;;;;;;;;ACA1sK;AAAe,2uBAA4qB,2BAA2B,mSAAmS,oCAAoC,gVAAgV,E;;;;;;;;;;;;ACA72C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAE4B;AACL;AACf;AACc;AACL;AACJ;AACkC;AACrB;AACQ;AAC6B;AACC;AAEjG,MAAM,YAAY,GAAW;IACzB;QACI,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,+EAAuB;KACrC;IACD;QACI,IAAI,EAAE,sBAAsB;QAC5B,SAAS,EAAE,uEAAsB;QACjC,aAAa,EAAE,CAAC,+DAAa,CAAC;KACjC;CACJ,CAAC;AAEF,MAAM,YAAY,GAAW;IACzB,GAAG,YAAY;IACf;QACI,IAAI,EAAE,4BAA4B;QAClC,SAAS,EAAE,6GAAgC;KAC9C;IACD;QACI,IAAI,EAAE,sCAAsC;QAC5C,SAAS,EAAE,8GAAkC;QAC7C,aAAa,EAAE,CAAC,+DAAa,CAAC;KACjC;CACJ,CAAC;AAEF,MAAM,YAAY,GAAW;IACzB,GAAG,YAAY;IACf;QACI,IAAI,EAAE,4BAA4B;QAClC,SAAS,EAAE,6GAAgC;QAC3C,QAAQ,EAAE;YACN;gBACI,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,8GAAkC;gBAC7C,aAAa,EAAE,CAAC,+DAAa,CAAC;aACjC;SACJ;KACJ;CACJ,CAAC;AAEF,MAAM,MAAM,GAAW;IACnB,GAAG,iFAAiB,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,2DAAU,CAAC,QAAQ,CAAC;IAC7D,GAAG,iFAAiB,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,2DAAU,CAAC,QAAQ,CAAC;CAChE,CAAC;IAeW,wBAAwB,SAAxB,wBAAwB;CAAG;AAA3B,wBAAwB;IAbpC,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,oEAAgB;YAChB,4FAA8B;SACjC;QACD,YAAY,EAAE;YACV,+EAAuB;YACvB,6GAAgC;YAChC,8GAAkC;YAClC,uEAAsB;SACzB;KACJ,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;;;;;ACpFrC;AAAe,4FAA6B,mBAAmB,GAAG,+DAA+D,yCAAyC,+BAA+B,GAAG,+DAA+D,0CAA0C,gCAAgC,GAAG,6CAA6C,27BAA27B,E;;;;;;;;;;;;ACAh0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEmD;AACnC;AACC;AAC2C;AAEzC;AACkB;AAC5B;AACS;AACU;AACrB;AACQ;AAUjB;AACqC;AACE;AACN;AACd;AAGlD;;GAEG;IAMU,sBAAsB,SAAtB,sBAAsB;IA2B/B,YACc,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;QAnBnC,iBAAY,GAAG,KAAK,CAAC,CAAC,8BAA8B;QAEpD,gCAA2B,GAAG,KAAK,CAAC,CAAC,4CAA4C;QACjF,WAAM,GAAG,KAAK,CAAC,CAAC,gCAAgC;QAChD,qBAAgB,GAAG,CAAC,CAAC,CAAC,wDAAwD;QAG9E,cAAS,GAAG,wEAAsB,CAAC,SAAS,CAAC;QAGnC,YAAO,GAAG,KAAK,CAAC,CAAC,yBAAyB;QAE1C,gBAAW,GAAG,KAAK,CAAC,CAAC,mCAAmC;QACxD,eAAU,GAAG,KAAK,CAAC,CAAC,2CAA2C;QAC/D,gBAAW,GAAG,KAAK,CAAC,CAAC,4CAA4C;QACjE,eAAU,GAAG,KAAK,CAAC,CAAC,0DAA0D;QAMpF,IAAI,CAAC,MAAM,GAAG,yDAAS,CAAC,oBAAoB,EAAE,CAAC,CAAC,yDAAyD;QACzG,IAAI,CAAC,QAAQ,GAAG,sDAAS,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;QACrE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC/B,CAAC;IAED;;OAEG;IACH,QAAQ;QACJ,IAAI;YACA,IAAI,CAAC,QAAQ,GAAG,iEAAa,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC;YAClE,IAAI,CAAC,QAAQ,GAAG,iEAAa,CAAC,2BAA2B,CAAC,UAAU,CAAC,CAAC;YACtE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,iEAAa,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;SACjE;QAAC,OAAO,KAAK,EAAE;YACZ,gEAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAEnC,iEAAa,CAAC,IAAI,EAAE,CAAC;YAErB,OAAO;SACV;QAED,IAAI,CAAC,eAAe,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE;YAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACG,QAAQ;;YACV,IAAI,IAAI,CAAC,UAAU,EAAE;gBACjB,OAAO,IAAI,CAAC;aACf;YAED,6BAA6B;YAC7B,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5C,IAAI,OAAO,EAAE;gBACT,MAAM,gEAAY,CAAC,WAAW,CAAC,sDAAS,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC;aAC/E;YAED,qFAAqF;YACrF,6EAAoB,CAAC,4BAA4B,CAAC,IAAI,CAAC,MAAO,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;YAE1G,0DAAS,CAAC,yBAAyB,CAAC,IAAI,CAAC,WAAW,EAAE,yDAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;YAEpF,OAAO,IAAI,CAAC;QAChB,CAAC;KAAA;IAED;;;;OAIG;IACa,eAAe;;;YAC3B,MAAM,aAAa,GAAG,yDAAS,CAAC,oBAAoB,EAAE,CAAC;YAEvD,IAAI;gBACA,uBAAuB;gBACvB,IAAI,CAAC,MAAM,GAAG,MAAM,gEAAc,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC/E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC;gBAE5C,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;oBACnB,wBAAwB;oBACxB,uDAAQ,CAAC,cAAc,CAAC,wEAAsB,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;iBAC7E;gBAED,qCAAqC;gBACrC,MAAM,yEAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;gBAErD,8DAA8D;gBAC9D,MAAM,OAAO,GAA0C;oBACnD,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,OAAO,EAAE,IAAI,CAAC,OAAO;oBACrB,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI;oBACtB,MAAM,EAAE,KAAK;oBACb,eAAe,sBAAuC;iBACzD,CAAC;gBAEF,IAAI,gBAA6D,CAAC;gBAClE,IAAI;oBACA,gBAAgB,GAAG,MAAM,gEAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;oBACrF,IAAI,CAAC,cAAc;wBACf,gEAAc,CAAC,8BAA8B,CAAC,IAAI,CAAC,MAAM,EAAE,gBAAgB,CAAC,WAAW,CAAC,CAAC;iBAChG;gBAAC,OAAO,KAAK,EAAE;oBACZ,mCAAmC;oBACnC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;oBACtB,OAAO,CAAC,eAAe,uBAAwC,CAAC;oBAEhE,gBAAgB,GAAG,MAAM,gEAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;oBACrF,IAAI,CAAC,cAAc;wBACf,gEAAc,CAAC,8BAA8B,CAAC,IAAI,CAAC,MAAM,EAAE,gBAAgB,CAAC,WAAW,CAAC,CAAC;oBAE7F,4CAA4C;oBAC5C,MAAM,cAAc,GAChB,MAAM,6EAAoB,CAAC,wBAAwB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;oBAC1F,IAAI,CAAC,cAAc,EAAE;wBACjB,kDAAkD;wBAClD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;wBAC1B,MAAM,KAAK,CAAC;qBACf;iBACJ;gBAED,IAAI,QAAC,gBAAgB,CAAC,WAAW,0CAAE,OAAO,GAAE;oBACxC,sBAAsB;oBACtB,MAAM,IAAI,+DAAS,CAAC,sDAAS,CAAC,OAAO,CAAC,oBAAoB,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;iBACvF;gBAED,gBAAgB,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;gBAEjF,UAAI,gBAAgB,CAAC,cAAc,0CAAE,QAAQ,EAAE;oBAC3C,iFAAiF;oBACjF,MAAM,wBAAwB,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;wBAC7C,gBAAgB,CAAC,CAAC;wBAClB,MAAM,gEAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,kCAChD,OAAO,KACV,MAAM,EAAE,IAAI,IACd,CAAC;oBAEP,IAAI,CAAC,oBAAoB,SAAG,wBAAwB,CAAC,cAAc,0CAAE,QAAQ,CAAC;iBACjF;gBAED,IAAI,CAAC,gBAAgB,qBAAG,gBAAgB,CAAC,cAAc,0CAAE,WAAW,0CAAE,KAAK,mCAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC;gBAE5G,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,iEAAiE;gBAC3F,uEAAuE;gBACvE,IAAI,IAAI,CAAC,MAAM,CAAC,0BAA0B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,IAAI,IAAI,CAAC,MAAM,IAAI,aAAa,EAAE;oBACzG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC;iBAC9D;qBAAM;oBACH,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;iBACxC;gBAED,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,WAAI,IAAI,CAAC,cAAc,0CAAE,WAAW,GAAE;oBAC3D,IAAI,CAAC,gBAAgB,GAAG,6EAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;iBACnG;qBAAM;oBACH,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;iBAC7B;gBAED,IAAI;oBACA,yDAAyD;oBACzD,MAAM,WAAW,GAAG,MAAM,+EAAqB,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;oBAE3F,IAAI,CAAC,UAAU,GAAG,YAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,UAAU,KAAI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;iBAC/F;gBAAC,WAAM;oBACJ,yBAAyB;oBACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;iBAC3B;aACJ;YAAC,OAAO,KAAK,EAAE;gBACZ,gEAAY,CAAC,qBAAqB,CAAC,KAAK,EAAE,+BAA+B,CAAC,CAAC;gBAE3E,oBAAoB;gBACpB,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC5B;;KACJ;IAED;;;;;;OAMG;IACa,uBAAuB,CACnC,gBAA6D,EAC7D,OAA8C;;YAE9C,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;gBACxC,8DAA8D;gBAC9D,OAAO,gBAAgB,CAAC;aAC3B;YAED,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,sFAAoC,CAAC,GAAG;gBAC9F,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,sFAAoC,CAAC,QAAQ,EAAE;gBAC9E,uDAAuD;gBACvD,OAAO,gBAAgB,CAAC;aAC3B;YAED,MAAM,gEAAc,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAErD,8DAAU,CAAC,OAAO,CAAC,wEAAsB,CAAC,aAAa,EAAE;gBACrD,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE;aAC/B,EAAE,yDAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;YAEjC,oDAAoD;YACpD,MAAM,mBAAmB,GAAG,MAAM,gEAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,kCAC5E,OAAO,KACV,eAAe,0BACjB,CAAC;YAEH,IAAI,CAAC,cAAc,GAAG,gEAAc,CAAC,8BAA8B,CAAC,IAAI,CAAC,MAAM,EAAE,mBAAmB,CAAC,WAAW,CAAC,CAAC;YAElH,OAAO,mBAAmB,CAAC;QAC/B,CAAC;KAAA;IAED;;;;OAIG;IACO,YAAY;QAClB,OAAO,0DAAS,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC,CAAC;IACnF,CAAC;IAED;;;;OAIG;IACa,cAAc;;YAC1B,yHAAyH;YACzH,8DAA8D;YAC9D,MAAM,KAAK,GAAG,MAAM,gEAAY,CAAC,gBAAgB,EAAE,CAAC;YAEpD,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YAEjC,OAAO,6EAAoB,CAAC,wBAAwB,CAAC,IAAI,CAAC,MAAO,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE;gBACvG,KAAK,CAAC,OAAO,EAAE,CAAC;YACpB,CAAC,CAAC,CAAC;QACP,CAAC;KAAA;IAED;;OAEG;IACO,iBAAiB;QACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,iEAAa,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED;;;;;OAKG;IACa,qBAAqB,CAAC,SAAyB;;YAC3D,sDAAsD;YACtD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;YAEnC,IAAI;gBACA,OAAO,MAAM,6EAAoB,CAAC,2BAA2B,CACzD,IAAI,CAAC,MAAO,EACZ,IAAI,CAAC,cAAc,EACnB,SAAS,EACT,IAAI,CAAC,UAAU,CAClB,CAAC;aACL;YAAC,OAAO,KAAK,EAAE;gBACZ,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,gEAAS,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;oBAC/E,sDAAsD;oBACtD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBAExB,OAAO,MAAM,6EAAoB,CAAC,2BAA2B,CACzD,IAAI,CAAC,MAAO,EACZ,IAAI,CAAC,cAAc,EACnB,SAAS,EACT,IAAI,CACP,CAAC;iBACL;gBAED,MAAM,KAAK,CAAC;aACf;QACL,CAAC;KAAA;IAED;;OAEG;IACG,IAAI;;YACN,6BAA6B;YAC7B,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5C,IAAI,CAAC,OAAO,EAAE;gBACV,iCAAiC;gBACjC,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAEzB,OAAO;aACV;YACD,IAAI;gBACA,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;gBAC5B,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC5B;YAAC,OAAO,KAAK,EAAE;gBACZ,gEAAY,CAAC,qBAAqB,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;aACzE;QACL,CAAC;KAAA;IAED;;;;OAIG;IACa,cAAc;;YAC1B,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YAEtC,IAAI,IAAI,CAAC,mBAAmB,IAAI,CAAC,CAAC,SAAS,CAAC,mBAAmB,IAAI,SAAS,CAAC,mBAAmB,KAAK,OAAO,CAAC,EAAE;gBAC3G,MAAM,sDAAS,CAAC,OAAO,CAAC,4CAA4C,CAAC,CAAC;aACzE;YAED,IAAI,KAAK,GAAG,MAAM,gEAAY,CAAC,gBAAgB,EAAE,CAAC;YAClD,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;YAEd,oCAAoC;YACpC,IAAI;gBACA,IAAI,GAAG,MAAM,6EAAoB,CAAC,wBAAwB,CAAC,IAAI,CAAC,MAAO,EAAE,IAAI,CAAC,cAAe,EAAE,SAAS,CAAC,CAAC;aAC7G;YAAC,OAAO,KAAK,EAAE;gBACZ,qCAAqC;gBACrC,IAAI,GAAG,CAAC,CAAC,CAAC;aACb;YAED,KAAK,CAAC,OAAO,EAAE,CAAC;YAEhB,IAAI;gBACA,kBAAkB;gBAClB,MAAM,0GAAsB,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;gBAE9E,KAAK,GAAG,MAAM,gEAAY,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;gBAElE,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;gBAC/D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE;oBACjC,mBAAmB;oBACnB,OAAO;iBACV;gBAED,IAAI,IAAa,CAAC;gBAElB,IAAI,IAAI,CAAC,WAAW,EAAE;oBAClB,8BAA8B;oBAC9B,IAAI,GAAG,KAAK,CAAC;oBACb,MAAM,+EAAqB,CAAC,cAAc,CACtC,IAAI,CAAC,MAAO,CAAC,EAAE,EACf,IAAI,CAAC,QAAQ,EACb,UAAU,EACV,IAAI,CAAC,cAAe,CAAC,YAAY,EACjC,CAAC,IAAI,CAAC,MAAO,CAAC,gBAAgB,EAC9B,IAAI,CAAC,MAAM,CACd,CAAC;iBACL;qBAAM;oBACH,4BAA4B;oBAC5B,IAAI,GAAG,MAAM,gEAAc,CAAC,cAAc,CACtC,IAAI,CAAC,MAAO,CAAC,EAAE,EACf,IAAI,CAAC,QAAQ,EACb,UAAU,EACV,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,cAAe,CAAC,YAAY,EACjC,CAAC,CAAC,IAAI,CAAC,MAAO,CAAC,gBAAgB,EAC/B,IAAI,CAAC,MAAM,CACd,CAAC;iBACL;gBAED,qCAAqC;gBACrC,6EAAoB,CAAC,4BAA4B,CAAC,IAAI,CAAC,MAAO,EAAE,IAAI,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;gBAEhG,IAAI,IAAI,EAAE;oBACN,8DAAU,CAAC,OAAO,CAAC,8DAAU,CAAC,kBAAkB,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC;iBAC3E;gBAED,oCAAoC;gBACpC,0DAAS,CAAC,yBAAyB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,yDAAS,CAAC,gBAAgB,EAAE,CAAC,CAAC;gBAE1F,8DAAU,CAAC,OAAO,CACd,wEAAsB,CAAC,sBAAsB,EAC7C;oBACI,YAAY,EAAE,IAAI,CAAC,MAAO,CAAC,EAAE;oBAC7B,YAAY,EAAE,IAAI,CAAC,cAAe,CAAC,EAAE;oBACrC,MAAM,EAAE,IAAI,CAAC,MAAM;iBACtB,EACD,yDAAS,CAAC,gBAAgB,EAAE,CAC/B,CAAC;gBAEF,IAAI,CAAC,IAAI,CAAC,MAAO,CAAC,gBAAgB,EAAE;oBAChC,yDAAyD;oBACzD,8DAAU,CAAC,OAAO,CACd,wEAAsB,CAAC,2BAA2B,EAClD;wBACI,YAAY,EAAE,IAAI,CAAC,MAAO,CAAC,EAAE;wBAC7B,YAAY,EAAE,IAAI,CAAC,cAAe,CAAC,EAAE;wBACrC,MAAM,EAAE,IAAI,CAAC,MAAM;qBACtB,EACD,yDAAS,CAAC,gBAAgB,EAAE,CAC/B,CAAC;iBACL;aACJ;oBAAS;gBACN,KAAK,CAAC,OAAO,EAAE,CAAC;aACnB;QACL,CAAC;KAAA;IAED;;OAEG;IACG,MAAM;;YACR,IAAI,CAAC,WAAW,GAAG,MAAM,gEAAY,CAAC,oBAAoB,CAAC;gBACvD,OAAO,EAAE,sDAAS,CAAC,OAAO,CAAC,oCAAoC,CAAC;gBAChE,QAAQ,EAAE,CAAC;gBACX,OAAO,EAAE,CAAC,sDAAS,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;gBAC5C,QAAQ,EAAE,mBAAmB;aAChC,CAAC,CAAC;QACP,CAAC;KAAA;IAED;;OAEG;IACH,WAAW;;QACP,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,UAAI,CAAC,WAAW,0CAAE,OAAO,GAAG;QAE5B,0BAA0B;QAC1B,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,uDAAQ,CAAC,gBAAgB,CAAC,wEAAsB,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;SAC/E;IACL,CAAC;CAEJ;;YAzdQ,8DAAc;;;0BAqClB,uDAAS,SAAC,oBAAoB;;AAFtB,sBAAsB;IALlC,+DAAS,CAAC;QACP,QAAQ,EAAE,4BAA4B;QACtC,wNAAwB;;KAE3B,CAAC;GACW,sBAAsB,CAsblC;AAtbkC;;;;;;;;;;;;;AClDnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEoB;AAC0C;AACnB;AAE5E;;GAEG;IAKU,uBAAuB,SAAvB,uBAAwB,SAAQ,4GAA8D;CAI1G;;gCAFI,uDAAS,SAAC,oFAA4B;;AAF9B,uBAAuB;IAJnC,+DAAS,CAAC;QACP,QAAQ,EAAE,6BAA6B;QACvC,2NAAyB;KAC5B,CAAC;GACW,uBAAuB,CAInC;AAJmC;;;;;;;;;;;;;ACzBpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;AAE8C;AACK;AACkC;AAC3C;AAGvB;AACR;AACO;AACX;AAC2B;AAKzB;AAC2C;AAKjD;AAEpC;;GAEG;IAKU,gCAAgC,8CAAhC,gCAAgC;IAWzC;QAPA,UAAK,GAAG,EAAE,CAAC;QAQP,qCAAqC;QACrC,IAAI,CAAC,cAAc,GAAG,6DAAU,CAAC,EAAE,CAC/B,wEAAsB,CAAC,YAAY,EACnC,CAAC,IAAI,EAAE,EAAE;;YACL,IACI,IAAI,CAAC,WAAW,CAAC,MAAM;gBACvB,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,MAAM;gBACnC,IAAI,CAAC,YAAY,WAAI,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,MAAM,0CAAE,EAAE;gBAC5D,IAAI,CAAC,MAAM,IAAI,yDAAS,CAAC,oBAAoB,EAAE,EACjD;gBACE,mCAAmC;gBACnC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;aAC7B;QACL,CAAC,EACD,yDAAS,CAAC,gBAAgB,EAAE,CAC/B,CAAC;QAEF,+CAA+C;QAC/C,MAAM,MAAM,GAAG,CAAC,iFAA0B,CAAC,WAAW,EAAE,iFAA0B,CAAC,aAAa,CAAC,CAAC;QAClG,IAAI,CAAC,YAAY,GAAG,6DAAU,CAAC,UAAU,CACrC,MAAM,EACN,CAAC,IAAI,EAAE,EAAE;YACL,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,iBAAiB,CAAC,EAAE;gBACtF,OAAO;aACV;YAED,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC,EACD,yDAAS,CAAC,gBAAgB,EAAE,CAC/B,CAAC;QAEF,IAAI;YACA,MAAM,QAAQ,GAAG,iEAAa,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC;YACnE,MAAM,QAAQ,GAAG,iEAAa,CAAC,2BAA2B,CAAC,UAAU,CAAC,CAAC;YACvE,MAAM,OAAO,GAAG,iEAAa,CAAC,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAClE,MAAM,cAAc,GAAG,iEAAa,CAAC,aAAa,CAA+B,QAAQ,CAAC,CAAC;YAC3F,MAAM,iBAAiB,GAAG,mIAAoC,CAAC,iBAAiB,CAC5E,4FAA+B,EAC/B,CAAC,QAAQ,EAAE,QAAQ,EAAE,cAAc,CAAC,CACvC,CAAC;YAEF,iBAAiB,CAAC,OAAO,GAAG,OAAO,CAAC;YACpC,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC,WAAW,CAAC;gBACnD,cAAc,EAAE,GAAG,EAAE;;oBACjB,IAAI,CAAC,KAAK,GAAG,WAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,MAAM,0CAAE,IAAI,KAAI,IAAI,CAAC,KAAK,CAAC;gBACzE,CAAC;aACJ,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,GAAG,IAAI,iGAAoB,CACvC,iBAAiB,EACjB,kCAAgC,CACnC,CAAC;SACL;QAAC,OAAO,KAAK,EAAE;YACZ,gEAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAEnC,iEAAa,CAAC,IAAI,EAAE,CAAC;YAErB,OAAO;SACV;IACL,CAAC;IAED,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC;IAC/C,CAAC;IAED,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC;IAClD,CAAC;IAED,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC;IAClD,CAAC;IAED,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC;IAClD,CAAC;IAED,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC;IAChD,CAAC;IAED,IAAI,OAAO,CAAC,KAAa;QACrB,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,OAAO,GAAG,KAAK,CAAC;IACjD,CAAC;IAED;;OAEG;IACH,eAAe;QACX,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,eAAe,CAAC;QACpE,IAAI,CAAC,KAAK,GAAG,qDAAS,CAAC,OAAO,CAC1B,cAAc;YACV,CAAC,CAAC,CACE,cAAc,KAAK,yFAA4B,CAAC,YAAY;gBACxD,CAAC,CAAC,iDAAiD;gBACnD,CAAC,CAAC,qCAAqC,cAAc,EAAE,CAC9D;YACD,CAAC,CAAC,uCAAuC,CAChD,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE;YACpC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;;OAKG;IACa,eAAe,CAAC,IAAI,GAAG,KAAK;;YACxC,IAAI;gBACA,MAAM,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;aAC3D;YAAC,OAAO,KAAK,EAAE;gBACZ,gEAAY,CAAC,qBAAqB,CAAC,KAAK,EAAE,+BAA+B,CAAC,CAAC;aAC9E;QACL,CAAC;KAAA;IAED;;;;;OAKG;IACa,cAAc,CAAC,IAAc;;YACzC,IAAI;gBACA,MAAM,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,eAAe,EAAE,CAAC;aACxD;oBAAS;gBACN,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;aAC9B;QACL,CAAC;KAAA;IAED;;;;OAIG;IACH,WAAW,CAAC,SAAwB;QAChC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE;YACnC,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,QAAQ,GAAG;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACG,iBAAiB;;YACnB,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QACpC,CAAC;KAAA;IAED;;OAEG;IACH,WAAW;;QACP,UAAI,CAAC,cAAc,0CAAE,GAAG,GAAG;QAC3B,UAAI,CAAC,YAAY,0CAAE,GAAG,GAAG;QACzB,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAC3B,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;IACvD,CAAC;CAEJ;;;wBA3KI,uDAAS,SAAC,wFAAsB;;AAFxB,gCAAgC;IAJ5C,+DAAS,CAAC;QACP,QAAQ,EAAE,uCAAuC;QACjD,yPAAmC;KACtC,CAAC;GACW,gCAAgC,CA6K5C;AA7K4C;;;;;;;;;;;;;AC5C7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEuC;AACC;AAC6C;AACX;AAC7C;AAGV;AACN;AACK;AAC8D;AACtB;AACd;AAE7E;;GAEG;IAKU,kCAAkC,SAAlC,kCAAkC;IAiB3C,YAAsB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;QAb3C,UAAK,GAAG,EAAE,CAAC,CAAC,oBAAoB;QAMhC,WAAM,GAAG,KAAK,CAAC,CAAC,gCAAgC;QAChD,kBAAa,GAAG,KAAK,CAAC,CAAC,oCAAoC;QAGjD,iBAAY,GAAG,KAAK,CAAC,CAAC,iCAAiC;QACvD,eAAU,GAAG,KAAK,CAAC,CAAC,0DAA0D;IAEzC,CAAC;IAEhD;;OAEG;IACH,QAAQ;QACJ,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;;YACxC,IAAI;gBACA,IAAI,CAAC,QAAQ,GAAG,iEAAa,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC;gBAClE,IAAI,CAAC,QAAQ,GAAG,iEAAa,CAAC,2BAA2B,CAAC,UAAU,CAAC,CAAC;gBACtE,IAAI,CAAC,QAAQ,GAAG,iEAAa,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACnE,IAAI,CAAC,OAAO,GAAG,iEAAa,CAAC,mBAAmB,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;gBACxE,MAAM,OAAO,GAAG,iEAAa,CAAC,2BAA2B,CAAC,SAAS,CAAC,CAAC;gBACrE,MAAM,cAAc,GAAG,iEAAa,CAAC,aAAa,CAA+B,gBAAgB,CAAC,CAAC;gBACnG,MAAM,iBAAiB,GAAG,mIAAoC,CAAC,iBAAiB,CAC5E,2FAA+B,EAC/B,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,cAAc,CAAC,CACjD,CAAC;gBAEF,UAAI,CAAC,WAAW,0CAAE,OAAO,GAAG;gBAE5B,iBAAiB,CAAC,OAAO,GAAG,OAAO,CAAC;gBACpC,IAAI,CAAC,WAAW,GAAG,IAAI,yCAAyC,CAAC,iBAAiB,CAAC,CAAC;gBAEpF,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;aAC5B;YAAC,OAAO,KAAK,EAAE;gBACZ,gEAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;gBAEnC,iEAAa,CAAC,IAAI,EAAE,CAAC;gBAErB,OAAO;aACV;YAED,IAAI,CAAC,eAAe,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE;gBAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACvB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACH,WAAW;;QACP,UAAI,CAAC,WAAW,0CAAE,OAAO,GAAG;IAChC,CAAC;IAED;;;;OAIG;IACG,QAAQ;;YACV,IAAI,CAAC,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,UAAU,EAAE;gBAC9C,OAAO,IAAI,CAAC;aACf;YAED,6BAA6B;YAC7B,OAAO,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;QAC/C,CAAC;KAAA;IAED;;OAEG;IACH,eAAe;;QACX,UAAI,CAAC,mBAAmB,0CAAE,eAAe,GAAG;IAChD,CAAC;IAED;;OAEG;IACH,eAAe;;QACX,UAAI,CAAC,mBAAmB,0CAAE,eAAe,GAAG;IAChD,CAAC;IAED;;;;OAIG;IACa,eAAe;;YAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,gEAAc,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC/E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAE9B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC;YAEhF,MAAM,SAAS,GAAG,MAAM,2EAAU,CAAC,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC1E,IAAI,CAAC,SAAS,EAAE;gBACZ,OAAO;aACV;YAED,yCAAyC;YACzC,IAAI,SAAS,CAAC,eAAe,IAAI,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;gBACrD,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,SAAS,EAAE;gBAEvD,MAAM,MAAM,GAAG,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;gBAC/D,IAAI,CAAC,aAAa,GAAG,MAAM,IAAI,QAAQ,CAAC;aAC3C;iBAAM;gBACH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;aAC7B;QACL,CAAC;KAAA;IAED;;;;OAIG;IACa,cAAc;;YAC1B,MAAM,QAAQ,GAAoB,EAAE,CAAC;YAErC,QAAQ,CAAC,IAAI,CAAC,gEAAc,CAAC,wBAAwB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtE,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,QAAQ,CAAC,IAAI,CAAC,gEAAc,CAAC,wBAAwB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;gBACvE,QAAQ,CAAC,IAAI,CAAC,gEAAc,CAAC,oCAAoC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;gBACnF,QAAQ,CAAC,IAAI,CAAC,gEAAc,CAAC,8BAA8B,CACvD,IAAI,CAAC,MAAM,CAAC,EAAE,EACd,IAAI,CAAC,QAAQ,EACb,SAAS,EACT,IAAI,CAAC,YAAY,CACpB,CAAC,CAAC;aACN;YAED,IAAI;gBACA,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;aAC/B;oBAAS;gBACN,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;gBAEhF,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;aAChC;QACL,CAAC;KAAA;IAED;;;;OAIG;IACH,iBAAiB,CAAC,SAAwB;QACtC,IAAI,CAAC,cAAc,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE;YAC/B,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,QAAQ,GAAG;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACG,WAAW;;YACb,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;gBAC3B,OAAO;aACV;YAED,IAAI;gBACA,MAAM,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;gBAC7C,oDAAoD;gBACpD,IAAI,CAAC,2DAAU,CAAC,QAAQ,EAAE;oBACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,iEAAa,CAAC,IAAI,EAAE,CAAC;iBACxB;aACJ;YAAC,OAAO,KAAK,EAAE;gBACZ,gEAAY,CAAC,qBAAqB,CAAC,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;aACjE;QACL,CAAC;KAAA;CAEJ;;YAtMQ,8DAAc;;;kCAsBlB,uDAAS,SAAC,oGAAiC;;AAFnC,kCAAkC;IAJ9C,+DAAS,CAAC;QACP,QAAQ,EAAE,yCAAyC;QACnD,+PAAqC;KACxC,CAAC;GACW,kCAAkC,CAkL9C;AAlL8C;AAoL/C;;GAEG;AACH,MAAM,yCAA0C,SAAQ,wHAA+B;IAEnF;;OAEG;IACO,4BAA4B,CAAC,KAA6B;QAChE,OAAO,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC;IACjC,CAAC;CAEJ;;;;;;;;;;;;;ACnOD;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAImB;AAEY;AAGhE;;GAEG;AACI,MAAM,+BAIT,SAAQ,4EAAoC;IAE5C;;OAEG;IACG,KAAK;;YACP,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC9B,CAAC;KAAA;IAED;;OAEG;IACG,kBAAkB;;YACpB,MAAM,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;QAC9C,CAAC;KAAA;IAED;;OAEG;IACG,sBAAsB;;YACxB,MAAM,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QAC5C,CAAC;KAAA;IAED;;OAEG;IACG,WAAW;;YACb,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAErC,OAAO,CAAC,CAAC,IAAI,CAAC;QAClB,CAAC;KAAA;IAED;;OAEG;IACG,eAAe;;YACjB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAEtC,OAAO,CAAC,CAAC,IAAI,CAAC;QAClB,CAAC;KAAA;IAED;;OAEG;IACO,mBAAmB;QACzB,OAAO,iEAAa,CAAC,eAAe,EAAE,CAAC;IAC3C,CAAC;IAED;;OAEG;IACO,4BAA4B,CAAC,KAA6B;QAChE,MAAM,QAAQ,GAAiB,EAAE,CAAC;QAElC,OAAO,KAAK,EAAE;YACV,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;YAE5B,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;gBACnB,MAAM;aACT;YAED,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC;SAC5B;QAED,OAAO,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC;IAC9F,CAAC;IAED;;;;;OAKG;IACa,gBAAgB,CAAC,KAAa,EAAE,kBAAsC;;YAClF,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAEzC,IAAI,CAAC,IAAI,EAAE;gBACP,OAAO;aACV;YAED,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,kBAAkB,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAC3E,CAAC;KAAA;IAED;;;;OAIG;IACa,SAAS,CAAC,KAAa;;;YACnC,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC;YAC1C,MAAM,aAAa,SAAG,CAAC,IAAI,CAAC,YAAY,KAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,IAAI,CAAC,YAAY,EAAC,CAAC,mCAAI,CAAC,CAAC,CAAC;YAErF,IAAI,aAAa,KAAK,CAAC,CAAC,IAAI,KAAK,KAAK,IAAI,EAAE;gBACxC,OAAO,IAAI,CAAC;aACf;YAED,MAAM,SAAS,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,SAAS,GAAG,aAAa,CAAC;YAC9B,IAAI,UAAU,GAAG,CAAC,CAAC;YAEnB,OAAO,UAAU,KAAK,KAAK,EAAE;gBACzB,SAAS,IAAI,SAAS,CAAC;gBAEvB,IAAI,SAAS,GAAG,CAAC,IAAI,SAAS,IAAI,KAAK,CAAC,MAAM,EAAE;oBAC5C,MAAM;iBACT;gBAED,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE;oBACxC,SAAS;iBACZ;gBAED,UAAU,IAAI,SAAS,CAAC;aAC3B;YAED,IAAI,UAAU,KAAK,KAAK,EAAE;gBACtB,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC;aAC3B;YAED,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,WAAW,EAAE,EAAE;gBACjC,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,CAAC;gBAE9B,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aAChC;YAED,OAAO,IAAI,CAAC;;KACf;IAED;;;;;OAKG;IACH,6DAA6D;IACnD,eAAe,CAAC,IAAU;QAChC,OAAO,KAAK,CAAC;IACjB,CAAC;CAEJ","file":"assign-lazy-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>\\r\\n                <core-format-text [text]=\\\"title\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"moduleId\\\" [courseId]=\\\"courseId\\\">\\r\\n                </core-format-text>\\r\\n            </h1>\\r\\n        </ion-title>\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"save()\\\">\\r\\n                {{ 'core.save' | translate }}\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\r\\n        <ion-list *ngIf=\\\"userSubmission && userSubmission.plugins && userSubmission.plugins.length\\\">\\r\\n            <!-- @todo: plagiarism_print_disclosure -->\\r\\n            <core-timer *ngIf=\\\"timeLimitEndTime > 0\\\" [endTime]=\\\"timeLimitEndTime\\\" (finished)=\\\"timeUp()\\\" timeUpText=\\\"00:00:00\\\"\\r\\n                [timerText]=\\\"'addon.mod_assign.assigntimeleft' | translate\\\" [align]=\\\"'center'\\\" [timeLeftClassThreshold]=\\\"-1\\\"\\r\\n                [underTimeClassThresholds]=\\\"[300, 900]\\\" class=\\\"ion-margin-horizontal\\\">\\r\\n            </core-timer>\\r\\n\\r\\n            <!-- Assign activity instructions and attachments if needed. -->\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"activityInstructions\\\">\\r\\n                <ion-label>\\r\\n                    <core-format-text [text]=\\\"activityInstructions\\\" [component]=\\\"component\\\" [componentId]=\\\"moduleId\\\" contextLevel=\\\"module\\\"\\r\\n                        [contextInstanceId]=\\\"moduleId\\\" [courseId]=\\\"courseId\\\" [maxHeight]=\\\"120\\\">\\r\\n                    </core-format-text>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n\\r\\n            <ng-container *ngIf=\\\"assign?.submissionattachments\\\">\\r\\n                <core-file *ngFor=\\\"let file of introAttachments\\\" [file]=\\\"file\\\" [component]=\\\"component\\\" [componentId]=\\\"moduleId\\\">\\r\\n                </core-file>\\r\\n            </ng-container>\\r\\n\\r\\n            <form name=\\\"addon-mod_assign-edit-form\\\" #editSubmissionForm>\\r\\n                <!-- Submission statement. -->\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"submissionStatement\\\">\\r\\n                    <ion-label>\\r\\n                        <core-format-text [text]=\\\"submissionStatement\\\" [filter]=\\\"false\\\">\\r\\n                        </core-format-text>\\r\\n                    </ion-label>\\r\\n                    <ion-checkbox slot=\\\"end\\\" name=\\\"submissionstatement\\\" [(ngModel)]=\\\"submissionStatementAccepted\\\"></ion-checkbox>\\r\\n                    <!-- ion-checkbox doesn't use an input. Create a hidden input to hold the value. -->\\r\\n                    <input type=\\\"hidden\\\" [ngModel]=\\\"submissionStatementAccepted\\\" name=\\\"submissionstatement\\\">\\r\\n                </ion-item>\\r\\n\\r\\n                <addon-mod-assign-submission-plugin *ngFor=\\\"let plugin of userSubmission.plugins\\\" [assign]=\\\"assign\\\"\\r\\n                    [submission]=\\\"userSubmission\\\" [plugin]=\\\"plugin\\\" [edit]=\\\"true\\\" [allowOffline]=\\\"allowOffline\\\">\\r\\n                </addon-mod-assign-submission-plugin>\\r\\n            </form>\\r\\n        </ion-list>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header collapsible>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>\\r\\n                <core-format-text [text]=\\\"title\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"module?.id\\\" [courseId]=\\\"courseId\\\">\\r\\n                </core-format-text>\\r\\n            </h1>\\r\\n        </ion-title>\\r\\n\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <!-- The buttons defined by the component will be added in here. -->\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content class=\\\"limited-width\\\">\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"activityComponent?.showLoading\\\" (ionRefresh)=\\\"activityComponent?.doRefresh($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n\\r\\n    <addon-mod-assign-index [module]=\\\"module\\\" [courseId]=\\\"courseId\\\" (dataRetrieved)=\\\"updateData($event)\\\"></addon-mod-assign-index>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>\\r\\n                <core-format-text [text]=\\\"title\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"moduleId\\\" [courseId]=\\\"courseId\\\">\\r\\n                </core-format-text>\\r\\n            </h1>\\r\\n        </ion-title>\\r\\n\\r\\n        <ion-buttons slot=\\\"end\\\"></ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n    <core-split-view>\\r\\n        <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!submissions.loaded\\\" (ionRefresh)=\\\"refreshList($event.target)\\\">\\r\\n            <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n        </ion-refresher>\\r\\n        <core-loading [hideUntil]=\\\"submissions.loaded\\\">\\r\\n            <core-empty-box *ngIf=\\\"!submissions || submissions.empty\\\" icon=\\\"fas-file-signature\\\"\\r\\n                [message]=\\\"'addon.mod_assign.submissionstatus_' | translate\\\">\\r\\n            </core-empty-box>\\r\\n\\r\\n            <ion-list>\\r\\n                <ion-item class=\\\"ion-text-wrap core-group-selector\\\" *ngIf=\\\"(groupInfo.separateGroups || groupInfo.visibleGroups)\\\">\\r\\n                    <ion-label id=\\\"addon-assign-groupslabel-list\\\">\\r\\n                        <ng-container *ngIf=\\\"groupInfo.separateGroups\\\">{{'core.groupsseparate' | translate }}</ng-container>\\r\\n                        <ng-container *ngIf=\\\"groupInfo.visibleGroups\\\">{{'core.groupsvisible' | translate }}</ng-container>\\r\\n                    </ion-label>\\r\\n                    <ion-select [(ngModel)]=\\\"groupId\\\" (ionChange)=\\\"reloadSubmissions()\\\" aria-labelledby=\\\"addon-assign-groupslabel-list\\\"\\r\\n                        interface=\\\"action-sheet\\\" slot=\\\"end\\\" [interfaceOptions]=\\\"{header: 'core.group' | translate}\\\">\\r\\n                        <ion-select-option *ngFor=\\\"let groupOpt of groupInfo.groups\\\" [value]=\\\"groupOpt.id\\\">\\r\\n                            {{groupOpt.name}}\\r\\n                        </ion-select-option>\\r\\n                    </ion-select>\\r\\n                </ion-item>\\r\\n                <!-- List of submissions. -->\\r\\n                <ng-container *ngFor=\\\"let submission of submissions.items\\\">\\r\\n                    <ion-item class=\\\"ion-text-wrap\\\" (click)=\\\"submissions.select(submission)\\\" button\\r\\n                        [attr.aria-current]=\\\"submissions.getItemAriaCurrent(submission)\\\" detail=\\\"true\\\">\\r\\n                        <core-user-avatar [user]=\\\"submission\\\" [linkProfile]=\\\"false\\\" slot=\\\"start\\\"></core-user-avatar>\\r\\n                        <ion-label>\\r\\n                            <p class=\\\"item-heading\\\" *ngIf=\\\"submission.userfullname\\\">{{submission.userfullname}}</p>\\r\\n                            <p class=\\\"item-heading\\\" *ngIf=\\\"!submission.userfullname\\\">\\r\\n                                {{ 'addon.mod_assign.hiddenuser' | translate }}{{submission.blindid}}\\r\\n                            </p>\\r\\n                            <p *ngIf=\\\"assign && assign!.teamsubmission\\\">\\r\\n                                <span *ngIf=\\\"submission.groupname\\\" class=\\\"core-groupname\\\">\\r\\n                                    {{submission.groupname}}\\r\\n                                </span>\\r\\n                                <span *ngIf=\\\"assign!.preventsubmissionnotingroup && !submission.groupname && submission.noGroups\\r\\n                                    && !submission.blindid\\\" class=\\\"text-danger\\\">\\r\\n                                    {{ 'addon.mod_assign.noteam' | translate }}\\r\\n                                </span>\\r\\n                                <span *ngIf=\\\"assign!.preventsubmissionnotingroup && !submission.groupname && submission.manyGroups\\r\\n                                    && !submission.blindid\\\" class=\\\"text-danger\\\">\\r\\n                                    {{ 'addon.mod_assign.multipleteams' | translate }}\\r\\n                                </span>\\r\\n                                <span *ngIf=\\\"!assign!.preventsubmissionnotingroup && !submission.groupname\\\">\\r\\n                                    {{ 'addon.mod_assign.defaultteam' | translate }}\\r\\n                                </span>\\r\\n                            </p>\\r\\n                            <p *ngIf=\\\"submission.statusTranslated\\\">\\r\\n                                <ion-badge class=\\\"ion-text-center ion-text-wrap\\\" [color]=\\\"submission.statusColor\\\">\\r\\n                                    {{ submission.statusTranslated }}\\r\\n                                </ion-badge>\\r\\n                            </p>\\r\\n                            <p *ngIf=\\\"submission.gradingStatusTranslationId\\\">\\r\\n                                <ion-badge class=\\\"ion-text-center ion-text-wrap\\\" [color]=\\\"submission.gradingColor\\\">\\r\\n                                    {{ submission.gradingStatusTranslationId | translate }}\\r\\n                                </ion-badge>\\r\\n                            </p>\\r\\n                        </ion-label>\\r\\n                    </ion-item>\\r\\n                </ng-container>\\r\\n            </ion-list>\\r\\n        </core-loading>\\r\\n    </core-split-view>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>\\r\\n                <core-format-text [text]=\\\"title\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"moduleId\\\" [courseId]=\\\"courseId\\\">\\r\\n                </core-format-text>\\r\\n            </h1>\\r\\n        </ion-title>\\r\\n\\r\\n        <ion-buttons slot=\\\"end\\\"></ion-buttons>\\r\\n    </ion-toolbar>\\r\\n\\r\\n    <core-navbar-buttons slot=\\\"end\\\">\\r\\n        <ion-button [hidden]=\\\"!canSaveGrades\\\" fill=\\\"clear\\\" (click)=\\\"submitGrade()\\\">\\r\\n            {{ 'core.done' | translate }}\\r\\n        </ion-button>\\r\\n    </core-navbar-buttons>\\r\\n</ion-header>\\r\\n<ion-content [core-swipe-navigation]=\\\"submissions\\\">\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"refreshSubmission($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\r\\n        <addon-mod-assign-submission *ngIf=\\\"loaded\\\" [courseId]=\\\"courseId\\\" [moduleId]=\\\"moduleId\\\" [submitId]=\\\"submitId\\\" [blindId]=\\\"blindId\\\">\\r\\n        </addon-mod-assign-submission>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { conditionalRoutes } from '@/app/app-routing.module';\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CanLeaveGuard } from '@guards/can-leave';\r\nimport { CoreScreen } from '@services/screen';\r\nimport { AddonModAssignComponentsModule } from './components/components.module';\r\nimport { AddonModAssignEditPage } from './pages/edit/edit';\r\nimport { AddonModAssignIndexPage } from './pages/index/index.page';\r\nimport { AddonModAssignSubmissionListPage } from './pages/submission-list/submission-list.page';\r\nimport { AddonModAssignSubmissionReviewPage } from './pages/submission-review/submission-review';\r\n\r\nconst commonRoutes: Routes = [\r\n    {\r\n        path: ':courseId/:cmId',\r\n        component: AddonModAssignIndexPage,\r\n    },\r\n    {\r\n        path: ':courseId/:cmId/edit',\r\n        component: AddonModAssignEditPage,\r\n        canDeactivate: [CanLeaveGuard],\r\n    },\r\n];\r\n\r\nconst mobileRoutes: Routes = [\r\n    ...commonRoutes,\r\n    {\r\n        path: ':courseId/:cmId/submission',\r\n        component: AddonModAssignSubmissionListPage,\r\n    },\r\n    {\r\n        path: ':courseId/:cmId/submission/:submitId',\r\n        component: AddonModAssignSubmissionReviewPage,\r\n        canDeactivate: [CanLeaveGuard],\r\n    },\r\n];\r\n\r\nconst tabletRoutes: Routes = [\r\n    ...commonRoutes,\r\n    {\r\n        path: ':courseId/:cmId/submission',\r\n        component: AddonModAssignSubmissionListPage,\r\n        children: [\r\n            {\r\n                path: ':submitId',\r\n                component: AddonModAssignSubmissionReviewPage,\r\n                canDeactivate: [CanLeaveGuard],\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nconst routes: Routes = [\r\n    ...conditionalRoutes(mobileRoutes, () => CoreScreen.isMobile),\r\n    ...conditionalRoutes(tabletRoutes, () => CoreScreen.isTablet),\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n        AddonModAssignComponentsModule,\r\n    ],\r\n    declarations: [\r\n        AddonModAssignIndexPage,\r\n        AddonModAssignSubmissionListPage,\r\n        AddonModAssignSubmissionReviewPage,\r\n        AddonModAssignEditPage,\r\n    ],\r\n})\r\nexport class AddonModAssignLazyModule {}\r\n","export default \":host ::ng-deep core-timer {\\n  display: block;\\n}\\n:host ::ng-deep core-timer .core-timer.core-timer-under-300 {\\n  background-color: var(--danger-tint);\\n  color: var(--danger-shade);\\n}\\n:host ::ng-deep core-timer .core-timer.core-timer-under-900 {\\n  background-color: var(--warning-tint);\\n  color: var(--warning-shade);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hZGRvbnMvbW9kL2Fzc2lnbi9wYWdlcy9lZGl0L2VkaXQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNJLGNBQUE7QUFBUjtBQUdZO0VBQ0ksb0NBQUE7RUFDQSwwQkFBQTtBQURoQjtBQUlZO0VBQ0kscUNBQUE7RUFDQSwyQkFBQTtBQUZoQiIsImZpbGUiOiJzcmMvYWRkb25zL21vZC9hc3NpZ24vcGFnZXMvZWRpdC9lZGl0LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCA6Om5nLWRlZXAge1xyXG4gICAgY29yZS10aW1lciB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcblxyXG4gICAgICAgIC5jb3JlLXRpbWVyIHtcclxuICAgICAgICAgICAgJi5jb3JlLXRpbWVyLXVuZGVyLTMwMCB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1kYW5nZXItdGludCk7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogdmFyKC0tZGFuZ2VyLXNoYWRlKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJi5jb3JlLXRpbWVyLXVuZGVyLTkwMCB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS13YXJuaW5nLXRpbnQpO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IHZhcigtLXdhcm5pbmctc2hhZGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ== */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreFileUploaderHelper } from '@features/fileuploader/services/fileuploader-helper';\nimport { CanLeave } from '@guards/can-leave';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites, CoreSitesReadingStrategy } from '@services/sites';\nimport { CoreSync } from '@services/sync';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreFormFields, CoreForms } from '@singletons/form';\nimport { Translate } from '@singletons';\nimport { CoreEvents } from '@singletons/events';\nimport {\n    AddonModAssignAssign,\n    AddonModAssignSubmission,\n    AddonModAssignProvider,\n    AddonModAssign,\n    AddonModAssignSubmissionStatusOptions,\n    AddonModAssignGetSubmissionStatusWSResponse,\n    AddonModAssignSavePluginData,\n    AddonModAssignSubmissionStatusValues,\n} from '../../services/assign';\nimport { AddonModAssignHelper } from '../../services/assign-helper';\nimport { AddonModAssignOffline } from '../../services/assign-offline';\nimport { AddonModAssignSync } from '../../services/assign-sync';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreWSExternalFile } from '@services/ws';\n\n/**\n * Page that allows adding or editing an assigment submission.\n */\n@Component({\n    selector: 'page-addon-mod-assign-edit',\n    templateUrl: 'edit.html',\n    styleUrls: ['edit.scss'],\n})\nexport class AddonModAssignEditPage implements OnInit, OnDestroy, CanLeave {\n\n    @ViewChild('editSubmissionForm') formElement?: ElementRef;\n\n    title: string; // Title to display.\n    assign?: AddonModAssignAssign; // Assignment.\n    courseId!: number; // Course ID the assignment belongs to.\n    moduleId!: number; // Module ID the submission belongs to.\n    userSubmission?: AddonModAssignSubmission; // The user submission.\n    allowOffline = false; // Whether offline is allowed.\n    submissionStatement?: string; // The submission statement.\n    submissionStatementAccepted = false; // Whether submission statement is accepted.\n    loaded = false; // Whether data has been loaded.\n    timeLimitEndTime = 0; // If time limit is enabled, the end time for the timer.\n    activityInstructions?: string; // Activity instructions.\n    introAttachments?: CoreWSExternalFile[]; // Intro attachments.\n    component = AddonModAssignProvider.COMPONENT;\n\n    protected userId: number; // User doing the submission.\n    protected isBlind = false; // Whether blind is used.\n    protected editText: string; // \"Edit submission\" translated text.\n    protected saveOffline = false; // Whether to save data in offline.\n    protected hasOffline = false; // Whether the assignment has offline data.\n    protected isDestroyed = false; // Whether the component has been destroyed.\n    protected forceLeave = false; // To allow leaving the page without checking for changes.\n    protected timeUpToast?: HTMLIonToastElement;\n\n    constructor(\n        protected route: ActivatedRoute,\n    ) {\n        this.userId = CoreSites.getCurrentSiteUserId(); // Right now we can only edit current user's submissions.\n        this.editText = Translate.instant('addon.mod_assign.editsubmission');\n        this.title = this.editText;\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        try {\n            this.moduleId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n            this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            this.isBlind = !!CoreNavigator.getRouteNumberParam('blindId');\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        this.fetchAssignment().finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @return Resolved if we can leave it, rejected if not.\n     */\n    async canLeave(): Promise<boolean> {\n        if (this.forceLeave) {\n            return true;\n        }\n\n        // Check if data has changed.\n        const changed = await this.hasDataChanged();\n        if (changed) {\n            await CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\n        }\n\n        // Nothing has changed or user confirmed to leave. Clear temporary data from plugins.\n        AddonModAssignHelper.clearSubmissionPluginTmpData(this.assign!, this.userSubmission, this.getInputData());\n\n        CoreForms.triggerFormCancelledEvent(this.formElement, CoreSites.getCurrentSiteId());\n\n        return true;\n    }\n\n    /**\n     * Fetch assignment data.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchAssignment(): Promise<void> {\n        const currentUserId = CoreSites.getCurrentSiteUserId();\n\n        try {\n            // Get assignment data.\n            this.assign = await AddonModAssign.getAssignment(this.courseId, this.moduleId);\n            this.title = this.assign.name || this.title;\n\n            if (!this.isDestroyed) {\n                // Block the assignment.\n                CoreSync.blockOperation(AddonModAssignProvider.COMPONENT, this.assign.id);\n            }\n\n            // Wait for sync to be over (if any).\n            await AddonModAssignSync.waitForSync(this.assign.id);\n\n            // Get submission status. Ignore cache to get the latest data.\n            const options: AddonModAssignSubmissionStatusOptions = {\n                userId: this.userId,\n                isBlind: this.isBlind,\n                cmId: this.assign.cmid,\n                filter: false,\n                readingStrategy: CoreSitesReadingStrategy.ONLY_NETWORK,\n            };\n\n            let submissionStatus: AddonModAssignGetSubmissionStatusWSResponse;\n            try {\n                submissionStatus = await AddonModAssign.getSubmissionStatus(this.assign.id, options);\n                this.userSubmission =\n                    AddonModAssign.getSubmissionObjectFromAttempt(this.assign, submissionStatus.lastattempt);\n            } catch (error) {\n                // Cannot connect. Get cached data.\n                options.filter = true;\n                options.readingStrategy = CoreSitesReadingStrategy.PREFER_CACHE;\n\n                submissionStatus = await AddonModAssign.getSubmissionStatus(this.assign.id, options);\n                this.userSubmission =\n                    AddonModAssign.getSubmissionObjectFromAttempt(this.assign, submissionStatus.lastattempt);\n\n                // Check if the user can edit it in offline.\n                const canEditOffline =\n                    await AddonModAssignHelper.canEditSubmissionOffline(this.assign, this.userSubmission);\n                if (!canEditOffline) {\n                    // Submission cannot be edited in offline, reject.\n                    this.allowOffline = false;\n                    throw error;\n                }\n            }\n\n            if (!submissionStatus.lastattempt?.canedit) {\n                // Can't edit. Reject.\n                throw new CoreError(Translate.instant('core.nopermissions', { $a: this.editText }));\n            }\n\n            submissionStatus = await this.startSubmissionIfNeeded(submissionStatus, options);\n\n            if (submissionStatus.assignmentdata?.activity) {\n                // There are activity instructions. Make sure to display it with filters applied.\n                const filteredSubmissionStatus = options.filter ?\n                    submissionStatus :\n                    await AddonModAssign.getSubmissionStatus(this.assign.id, {\n                        ...options,\n                        filter: true,\n                    });\n\n                this.activityInstructions = filteredSubmissionStatus.assignmentdata?.activity;\n            }\n\n            this.introAttachments = submissionStatus.assignmentdata?.attachments?.intro ?? this.assign.introattachments;\n\n            this.allowOffline = true; // If offline isn't allowed we shouldn't have reached this point.\n            // Only show submission statement if we are editing our own submission.\n            if (this.assign.requiresubmissionstatement && !this.assign.submissiondrafts && this.userId == currentUserId) {\n                this.submissionStatement = this.assign.submissionstatement;\n            } else {\n                this.submissionStatement = undefined;\n            }\n\n            if (this.assign.timelimit && this.userSubmission?.timestarted) {\n                this.timeLimitEndTime = AddonModAssignHelper.calculateEndTime(this.assign, this.userSubmission);\n            } else {\n                this.timeLimitEndTime = 0;\n            }\n\n            try {\n                // Check if there's any offline data for this submission.\n                const offlineData = await AddonModAssignOffline.getSubmission(this.assign.id, this.userId);\n\n                this.hasOffline = offlineData?.plugindata && Object.keys(offlineData.plugindata).length > 0;\n            } catch {\n                // No offline data found.\n                this.hasOffline = false;\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting assigment data.');\n\n            // Leave the player.\n            this.leaveWithoutCheck();\n        }\n    }\n\n    /**\n     * Start the submission if needed.\n     *\n     * @param submissionStatus Current submission status.\n     * @param options Options.\n     * @return Promise resolved with the new submission status if it changed, original submission status otherwise.\n     */\n    protected async startSubmissionIfNeeded(\n        submissionStatus: AddonModAssignGetSubmissionStatusWSResponse,\n        options: AddonModAssignSubmissionStatusOptions,\n    ): Promise<AddonModAssignGetSubmissionStatusWSResponse> {\n        if (!this.assign || !this.assign.timelimit) {\n            // Submission only needs to be started if there's a timelimit.\n            return submissionStatus;\n        }\n\n        if (this.userSubmission && this.userSubmission.status !== AddonModAssignSubmissionStatusValues.NEW &&\n            this.userSubmission.status !== AddonModAssignSubmissionStatusValues.REOPENED) {\n            // There is an ongoing submission, no need to start it.\n            return submissionStatus;\n        }\n\n        await AddonModAssign.startSubmission(this.assign.id);\n\n        CoreEvents.trigger(AddonModAssignProvider.STARTED_EVENT, {\n            assignmentId: this.assign.id,\n        }, CoreSites.getCurrentSiteId());\n\n        // Submission started, update the submission status.\n        const newSubmissionStatus = await AddonModAssign.getSubmissionStatus(this.assign.id, {\n            ...options,\n            readingStrategy: CoreSitesReadingStrategy.ONLY_NETWORK, // Make sure not to use cache.\n        });\n\n        this.userSubmission = AddonModAssign.getSubmissionObjectFromAttempt(this.assign, newSubmissionStatus.lastattempt);\n\n        return newSubmissionStatus;\n    }\n\n    /**\n     * Get the input data.\n     *\n     * @return Input data.\n     */\n    protected getInputData(): CoreFormFields {\n        return CoreForms.getDataFromForm(document.forms['addon-mod_assign-edit-form']);\n    }\n\n    /**\n     * Check if data has changed.\n     *\n     * @return Promise resolved with boolean: whether data has changed.\n     */\n    protected async hasDataChanged(): Promise<boolean> {\n        // Usually the hasSubmissionDataChanged call will be resolved inmediately, causing the modal to be shown just an instant.\n        // We'll wait a bit before showing it to prevent this \"blink\".\n        const modal = await CoreDomUtils.showModalLoading();\n\n        const data = this.getInputData();\n\n        return AddonModAssignHelper.hasSubmissionDataChanged(this.assign!, this.userSubmission, data).finally(() => {\n            modal.dismiss();\n        });\n    }\n\n    /**\n     * Leave the view without checking for changes.\n     */\n    protected leaveWithoutCheck(): void {\n        this.forceLeave = true;\n        CoreNavigator.back();\n    }\n\n    /**\n     * Get data to submit based on the input data.\n     *\n     * @param inputData The input data.\n     * @return Promise resolved with the data to submit.\n     */\n    protected async prepareSubmissionData(inputData: CoreFormFields): Promise<AddonModAssignSavePluginData> {\n        // If there's offline data, always save it in offline.\n        this.saveOffline = this.hasOffline;\n\n        try {\n            return await AddonModAssignHelper.prepareSubmissionPluginData(\n                this.assign!,\n                this.userSubmission,\n                inputData,\n                this.hasOffline,\n            );\n        } catch (error) {\n            if (this.allowOffline && !this.saveOffline && !CoreUtils.isWebServiceError(error)) {\n                // Cannot submit in online, prepare for offline usage.\n                this.saveOffline = true;\n\n                return await AddonModAssignHelper.prepareSubmissionPluginData(\n                    this.assign!,\n                    this.userSubmission,\n                    inputData,\n                    true,\n                );\n            }\n\n            throw error;\n        }\n    }\n\n    /**\n     * Save the submission.\n     */\n    async save(): Promise<void> {\n        // Check if data has changed.\n        const changed = await this.hasDataChanged();\n        if (!changed) {\n            // Nothing to save, just go back.\n            this.leaveWithoutCheck();\n\n            return;\n        }\n        try {\n            await this.saveSubmission();\n            this.leaveWithoutCheck();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error saving submission.');\n        }\n    }\n\n    /**\n     * Save the submission.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async saveSubmission(): Promise<void> {\n        const inputData = this.getInputData();\n\n        if (this.submissionStatement && (!inputData.submissionstatement || inputData.submissionstatement === 'false')) {\n            throw Translate.instant('addon.mod_assign.acceptsubmissionstatement');\n        }\n\n        let modal = await CoreDomUtils.showModalLoading();\n        let size = -1;\n\n        // Get size to ask for confirmation.\n        try {\n            size = await AddonModAssignHelper.getSubmissionSizeForEdit(this.assign!, this.userSubmission!, inputData);\n        } catch (error) {\n            // Error calculating size, return -1.\n            size = -1;\n        }\n\n        modal.dismiss();\n\n        try {\n            // Confirm action.\n            await CoreFileUploaderHelper.confirmUploadFile(size, true, this.allowOffline);\n\n            modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n            const pluginData = await this.prepareSubmissionData(inputData);\n            if (!Object.keys(pluginData).length) {\n                // Nothing to save.\n                return;\n            }\n\n            let sent: boolean;\n\n            if (this.saveOffline) {\n                // Save submission in offline.\n                sent = false;\n                await AddonModAssignOffline.saveSubmission(\n                    this.assign!.id,\n                    this.courseId,\n                    pluginData,\n                    this.userSubmission!.timemodified,\n                    !this.assign!.submissiondrafts,\n                    this.userId,\n                );\n            } else {\n                // Try to send it to server.\n                sent = await AddonModAssign.saveSubmission(\n                    this.assign!.id,\n                    this.courseId,\n                    pluginData,\n                    this.allowOffline,\n                    this.userSubmission!.timemodified,\n                    !!this.assign!.submissiondrafts,\n                    this.userId,\n                );\n            }\n\n            // Clear temporary data from plugins.\n            AddonModAssignHelper.clearSubmissionPluginTmpData(this.assign!, this.userSubmission, inputData);\n\n            if (sent) {\n                CoreEvents.trigger(CoreEvents.ACTIVITY_DATA_SENT, { module: 'assign' });\n            }\n\n            // Submission saved, trigger events.\n            CoreForms.triggerFormSubmittedEvent(this.formElement, sent, CoreSites.getCurrentSiteId());\n\n            CoreEvents.trigger(\n                AddonModAssignProvider.SUBMISSION_SAVED_EVENT,\n                {\n                    assignmentId: this.assign!.id,\n                    submissionId: this.userSubmission!.id,\n                    userId: this.userId,\n                },\n                CoreSites.getCurrentSiteId(),\n            );\n\n            if (!this.assign!.submissiondrafts) {\n                // No drafts allowed, so it was submitted. Trigger event.\n                CoreEvents.trigger(\n                    AddonModAssignProvider.SUBMITTED_FOR_GRADING_EVENT,\n                    {\n                        assignmentId: this.assign!.id,\n                        submissionId: this.userSubmission!.id,\n                        userId: this.userId,\n                    },\n                    CoreSites.getCurrentSiteId(),\n                );\n            }\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Function called when the time is up.\n     */\n    async timeUp(): Promise<void> {\n        this.timeUpToast = await CoreDomUtils.showToastWithOptions({\n            message: Translate.instant('addon.mod_assign.caneditsubmission'),\n            duration: 0,\n            buttons: [Translate.instant('core.dismiss')],\n            cssClass: 'core-danger-toast',\n        });\n    }\n\n    /**\n     * Component being destroyed.\n     */\n    ngOnDestroy(): void {\n        this.isDestroyed = true;\n        this.timeUpToast?.dismiss();\n\n        // Unblock the assignment.\n        if (this.assign) {\n            CoreSync.unblockOperation(AddonModAssignProvider.COMPONENT, this.assign.id);\n        }\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { CoreCourseModuleMainActivityPage } from '@features/course/classes/main-activity-page';\r\nimport { AddonModAssignIndexComponent } from '../../components/index/index';\r\n\r\n/**\r\n * Page that displays an assign.\r\n */\r\n@Component({\r\n    selector: 'page-addon-mod-assign-index',\r\n    templateUrl: 'index.html',\r\n})\r\nexport class AddonModAssignIndexPage extends CoreCourseModuleMainActivityPage<AddonModAssignIndexComponent> {\r\n\r\n    @ViewChild(AddonModAssignIndexComponent) activityComponent?: AddonModAssignIndexComponent;\r\n\r\n}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, AfterViewInit, ViewChild } from '@angular/core';\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreGroupInfo } from '@services/groups';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { Translate } from '@singletons';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport {\n    AddonModAssignListFilterName,\n    AddonModAssignSubmissionForList,\n    AddonModAssignSubmissionsSource,\n} from '../../classes/submissions-source';\nimport { AddonModAssignAssign, AddonModAssignProvider } from '../../services/assign';\nimport {\n    AddonModAssignSyncProvider,\n    AddonModAssignManualSyncData,\n    AddonModAssignAutoSyncData,\n} from '../../services/assign-sync';\n\n/**\n * Page that displays a list of submissions of an assignment.\n */\n@Component({\n    selector: 'page-addon-mod-assign-submission-list',\n    templateUrl: 'submission-list.html',\n})\nexport class AddonModAssignSubmissionListPage implements AfterViewInit, OnDestroy {\n\n    @ViewChild(CoreSplitViewComponent) splitView!: CoreSplitViewComponent;\n\n    title = '';\n    submissions!: CoreListItemsManager<AddonModAssignSubmissionForList, AddonModAssignSubmissionsSource>; // List of submissions\n\n    protected gradedObserver: CoreEventObserver; // Observer to refresh data when a grade changes.\n    protected syncObserver: CoreEventObserver; // Observer to refresh data when the async is synchronized.\n    protected sourceUnsubscribe?: () => void;\n\n    constructor() {\n        // Update data if some grade changes.\n        this.gradedObserver = CoreEvents.on(\n            AddonModAssignProvider.GRADED_EVENT,\n            (data) => {\n                if (\n                    this.submissions.loaded &&\n                    this.submissions.getSource().assign &&\n                    data.assignmentId == this.submissions.getSource().assign?.id &&\n                    data.userId == CoreSites.getCurrentSiteUserId()\n                ) {\n                    // Grade changed, refresh the data.\n                    this.refreshAllData(true);\n                }\n            },\n            CoreSites.getCurrentSiteId(),\n        );\n\n        // Refresh data if this assign is synchronized.\n        const events = [AddonModAssignSyncProvider.AUTO_SYNCED, AddonModAssignSyncProvider.MANUAL_SYNCED];\n        this.syncObserver = CoreEvents.onMultiple<AddonModAssignAutoSyncData | AddonModAssignManualSyncData>(\n            events,\n            (data) => {\n                if (!this.submissions.loaded || ('context' in data && data.context == 'submission-list')) {\n                    return;\n                }\n\n                this.refreshAllData(false);\n            },\n            CoreSites.getCurrentSiteId(),\n        );\n\n        try {\n            const moduleId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n            const courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            const groupId = CoreNavigator.getRouteNumberParam('groupId') || 0;\n            const selectedStatus = CoreNavigator.getRouteParam<AddonModAssignListFilterName>('status');\n            const submissionsSource = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(\n                AddonModAssignSubmissionsSource,\n                [courseId, moduleId, selectedStatus],\n            );\n\n            submissionsSource.groupId = groupId;\n            this.sourceUnsubscribe = submissionsSource.addListener({\n                onItemsUpdated: () => {\n                    this.title = this.submissions.getSource().assign?.name || this.title;\n                },\n            });\n\n            this.submissions = new CoreListItemsManager(\n                submissionsSource,\n                AddonModAssignSubmissionListPage,\n            );\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n    }\n\n    get assign(): AddonModAssignAssign | undefined {\n        return this.submissions.getSource().assign;\n    }\n\n    get groupInfo(): CoreGroupInfo {\n        return this.submissions.getSource().groupInfo;\n    }\n\n    get moduleId(): number {\n        return this.submissions.getSource().MODULE_ID;\n    }\n\n    get courseId(): number {\n        return this.submissions.getSource().COURSE_ID;\n    }\n\n    get groupId(): number {\n        return this.submissions.getSource().groupId;\n    }\n\n    set groupId(value: number) {\n        this.submissions.getSource().groupId = value;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngAfterViewInit(): void {\n        const selectedStatus = this.submissions.getSource().SELECTED_STATUS;\n        this.title = Translate.instant(\n            selectedStatus\n                ? (\n                    selectedStatus === AddonModAssignListFilterName.NEED_GRADING\n                        ? 'addon.mod_assign.numberofsubmissionsneedgrading'\n                        : `addon.mod_assign.submissionstatus_${selectedStatus}`\n                )\n                : 'addon.mod_assign.numberofparticipants',\n        );\n\n        this.fetchAssignment(true).finally(() => {\n            this.submissions.start(this.splitView);\n        });\n    }\n\n    /**\n     * Fetch assignment data.\n     *\n     * @param sync Whether to try to synchronize data.\n     * @return Promise resolved when done.\n     */\n    protected async fetchAssignment(sync = false): Promise<void> {\n        try {\n            await this.submissions.getSource().loadAssignment(sync);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting assigment data.');\n        }\n    }\n\n    /**\n     * Refresh all the data.\n     *\n     * @param sync Whether to try to synchronize data.\n     * @return Promise resolved when done.\n     */\n    protected async refreshAllData(sync?: boolean): Promise<void> {\n        try {\n            await this.submissions.getSource().invalidateCache();\n        } finally {\n            this.fetchAssignment(sync);\n        }\n    }\n\n    /**\n     * Refresh the list.\n     *\n     * @param refresher Refresher.\n     */\n    refreshList(refresher?: IonRefresher): void {\n        this.refreshAllData(true).finally(() => {\n            refresher?.complete();\n        });\n    }\n\n    /**\n     * Reload submissions list.\n     */\n    async reloadSubmissions(): Promise<void> {\n        await this.submissions.reload();\n    }\n\n    /**\n     * Component being destroyed.\n     */\n    ngOnDestroy(): void {\n        this.gradedObserver?.off();\n        this.syncObserver?.off();\n        this.submissions.destroy();\n        this.sourceUnsubscribe && this.sourceUnsubscribe();\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreSwipeNavigationItemsManager } from '@classes/items-management/swipe-navigation-items-manager';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CanLeave } from '@guards/can-leave';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreScreen } from '@services/screen';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { AddonModAssignListFilterName, AddonModAssignSubmissionsSource } from '../../classes/submissions-source';\nimport { AddonModAssignSubmissionComponent } from '../../components/submission/submission';\nimport { AddonModAssign, AddonModAssignAssign } from '../../services/assign';\n\n/**\n * Page that displays a submission.\n */\n@Component({\n    selector: 'page-addon-mod-assign-submission-review',\n    templateUrl: 'submission-review.html',\n})\nexport class AddonModAssignSubmissionReviewPage implements OnInit, OnDestroy, CanLeave {\n\n    @ViewChild(AddonModAssignSubmissionComponent) submissionComponent?: AddonModAssignSubmissionComponent;\n\n    title = ''; // Title to display.\n    submissions?: AddonModAssignSubmissionSwipeItemsManager;\n    moduleId!: number; // Module ID the submission belongs to.\n    courseId!: number; // Course ID the assignment belongs to.\n    submitId!: number; // User that did the submission.\n    blindId?: number; // Blinded user ID (if it's blinded).\n    loaded = false; // Whether data has been loaded.\n    canSaveGrades = false; // Whether the user can save grades.\n\n    protected assign?: AddonModAssignAssign; // The assignment the submission belongs to.\n    protected blindMarking = false; // Whether it uses blind marking.\n    protected forceLeave = false; // To allow leaving the page without checking for changes.\n\n    constructor(protected route: ActivatedRoute) { }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.route.queryParams.subscribe((params) => {\n            try {\n                this.moduleId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n                this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n                this.submitId = CoreNavigator.getRouteNumberParam('submitId') || 0;\n                this.blindId = CoreNavigator.getRouteNumberParam('blindId', { params });\n                const groupId = CoreNavigator.getRequiredRouteNumberParam('groupId');\n                const selectedStatus = CoreNavigator.getRouteParam<AddonModAssignListFilterName>('selectedStatus');\n                const submissionsSource = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(\n                    AddonModAssignSubmissionsSource,\n                    [this.courseId, this.moduleId, selectedStatus],\n                );\n\n                this.submissions?.destroy();\n\n                submissionsSource.groupId = groupId;\n                this.submissions = new AddonModAssignSubmissionSwipeItemsManager(submissionsSource);\n\n                this.submissions.start();\n            } catch (error) {\n                CoreDomUtils.showErrorModal(error);\n\n                CoreNavigator.back();\n\n                return;\n            }\n\n            this.fetchSubmission().finally(() => {\n                this.loaded = true;\n            });\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.submissions?.destroy();\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @return Resolved if we can leave it, rejected if not.\n     */\n    async canLeave(): Promise<boolean> {\n        if (!this.submissionComponent || this.forceLeave) {\n            return true;\n        }\n\n        // Check if data has changed.\n        return this.submissionComponent.canLeave();\n    }\n\n    /**\n     * User entered the page.\n     */\n    ionViewDidEnter(): void {\n        this.submissionComponent?.ionViewDidEnter();\n    }\n\n    /**\n     * User left the page.\n     */\n    ionViewDidLeave(): void {\n        this.submissionComponent?.ionViewDidLeave();\n    }\n\n    /**\n     * Get the submission.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchSubmission(): Promise<void> {\n        this.assign = await AddonModAssign.getAssignment(this.courseId, this.moduleId);\n        this.title = this.assign.name;\n\n        this.blindMarking = !!this.assign.blindmarking && !this.assign.revealidentities;\n\n        const gradeInfo = await CoreCourse.getModuleBasicGradeInfo(this.moduleId);\n        if (!gradeInfo) {\n            return;\n        }\n\n        // Grades can be saved if simple grading.\n        if (gradeInfo.advancedgrading && gradeInfo.advancedgrading[0] &&\n                gradeInfo.advancedgrading[0].method !== undefined) {\n\n            const method = gradeInfo.advancedgrading[0].method || 'simple';\n            this.canSaveGrades = method == 'simple';\n        } else {\n            this.canSaveGrades = true;\n        }\n    }\n\n    /**\n     * Refresh all the data.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async refreshAllData(): Promise<void> {\n        const promises: Promise<void>[] = [];\n\n        promises.push(AddonModAssign.invalidateAssignmentData(this.courseId));\n        if (this.assign) {\n            promises.push(AddonModAssign.invalidateSubmissionData(this.assign.id));\n            promises.push(AddonModAssign.invalidateAssignmentUserMappingsData(this.assign.id));\n            promises.push(AddonModAssign.invalidateSubmissionStatusData(\n                this.assign.id,\n                this.submitId,\n                undefined,\n                this.blindMarking,\n            ));\n        }\n\n        try {\n            await Promise.all(promises);\n        } finally {\n            this.submissionComponent && this.submissionComponent.invalidateAndRefresh(true);\n\n            await this.fetchSubmission();\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     */\n    refreshSubmission(refresher?: IonRefresher): void {\n        this.refreshAllData().finally(() => {\n            refresher?.complete();\n        });\n    }\n\n    /**\n     * Submit a grade and feedback.\n     */\n    async submitGrade(): Promise<void> {\n        if (!this.submissionComponent) {\n            return;\n        }\n\n        try {\n            await this.submissionComponent.submitGrade();\n            // Grade submitted, leave the view if not in tablet.\n            if (!CoreScreen.isTablet) {\n                this.forceLeave = true;\n                CoreNavigator.back();\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.error', true);\n        }\n    }\n\n}\n\n/**\n * Helper to manage swiping within a collection of submissions.\n */\nclass AddonModAssignSubmissionSwipeItemsManager extends CoreSwipeNavigationItemsManager {\n\n    /**\n     * @inheritdoc\n     */\n    protected getSelectedItemPathFromRoute(route: ActivatedRouteSnapshot): string | null {\n        return route.params.submitId;\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { ActivatedRoute, ActivatedRouteSnapshot, UrlSegment } from '@angular/router';\n\nimport { CoreNavigator } from '@services/navigator';\n\nimport { CoreRoutedItemsManager } from './routed-items-manager';\nimport { CoreRoutedItemsManagerSource } from './routed-items-manager-source';\n\n/**\n * Helper class to manage the state and routing of a swipeable page.\n */\nexport class CoreSwipeNavigationItemsManager<\n    Item = unknown,\n    Source extends CoreRoutedItemsManagerSource<Item> = CoreRoutedItemsManagerSource<Item>\n>\n    extends CoreRoutedItemsManager<Item, Source> {\n\n    /**\n     * Process page started operations.\n     */\n    async start(): Promise<void> {\n        this.updateSelectedItem();\n    }\n\n    /**\n     * Navigate to the next item.\n     */\n    async navigateToNextItem(): Promise<void> {\n        await this.navigateToItemBy(1, 'forward');\n    }\n\n    /**\n     * Navigate to the previous item.\n     */\n    async navigateToPreviousItem(): Promise<void> {\n        await this.navigateToItemBy(-1, 'back');\n    }\n\n    /**\n     * Has a next item.\n     */\n    async hasNextItem(): Promise<boolean> {\n        const item = await this.getItemBy(1);\n\n        return !!item;\n    }\n\n    /**\n     * Has a previous item.\n     */\n    async hasPreviousItem(): Promise<boolean> {\n        const item = await this.getItemBy(-1);\n\n        return !!item;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected getCurrentPageRoute(): ActivatedRoute | null {\n        return CoreNavigator.getCurrentRoute();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected getSelectedItemPathFromRoute(route: ActivatedRouteSnapshot): string | null {\n        const segments: UrlSegment[] = [];\n\n        while (route) {\n            segments.push(...route.url);\n\n            if (!route.firstChild) {\n                break;\n            }\n\n            route = route.firstChild;\n        }\n\n        return segments.map(segment => segment.path).join('/').replace(/\\/+/, '/').trim() || null;\n    }\n\n    /**\n     * Navigate to an item by an offset.\n     *\n     * @param delta Index offset.\n     * @param animationDirection Animation direction.\n     */\n    protected async navigateToItemBy(delta: number, animationDirection: 'forward' | 'back'): Promise<void> {\n        const item = await this.getItemBy(delta);\n\n        if (!item) {\n            return;\n        }\n\n        await this.navigateToItem(item, { animationDirection, replace: true });\n    }\n\n    /**\n     * Get item by an offset.\n     *\n     * @param delta Index offset.\n     */\n    protected async getItemBy(delta: number): Promise<Item | null> {\n        const items = this.getSource().getItems();\n        const selectedIndex = (this.selectedItem && items?.indexOf(this.selectedItem)) ?? -1;\n\n        if (selectedIndex === -1 || items === null) {\n            return null;\n        }\n\n        const deltaStep = delta > 0 ? 1 : -1;\n        let nextIndex = selectedIndex;\n        let deltaMoved = 0;\n\n        while (deltaMoved !== delta) {\n            nextIndex += deltaStep;\n\n            if (nextIndex < 0 || nextIndex >= items.length) {\n                break;\n            }\n\n            if (this.skipItemInSwipe(items[nextIndex])) {\n                continue;\n            }\n\n            deltaMoved += deltaStep;\n        }\n\n        if (deltaMoved === delta) {\n            return items[nextIndex];\n        }\n\n        if (!this.getSource().isCompleted()) {\n            await this.getSource().load();\n\n            return this.getItemBy(delta);\n        }\n\n        return null;\n    }\n\n    /**\n     * Check if an item should be skipped during swipe navigation.\n     *\n     * @param item Item.\n     * @returns Whether to skip this item during swipe navigation.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    protected skipItemInSwipe(item: Item): boolean {\n        return false;\n    }\n\n}\n"],"sourceRoot":"webpack:///"}