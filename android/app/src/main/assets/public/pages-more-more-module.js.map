{"version":3,"sources":["./src/core/features/mainmenu/pages/more/more.html","./src/core/features/mainmenu/pages/more/more.module.ts","./src/core/features/mainmenu/pages/more/more.scss","./src/core/features/mainmenu/pages/more/more.ts"],"names":[],"mappings":"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","file":"pages-more-more-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>\\r\\n            <h1>{{ 'core.more' | translate }}</h1>\\r\\n        </ion-title>\\r\\n\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <core-user-menu-button></core-user-menu-button>\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-list>\\r\\n        <ion-item class=\\\"ion-text-center\\\" *ngIf=\\\"(!handlers || !handlers.length) && !handlersLoaded\\\">\\r\\n            <ion-label>\\r\\n                <ion-spinner [attr.aria-label]=\\\"'core.loading' | translate\\\"></ion-spinner>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item button *ngFor=\\\"let handler of handlers\\\" [ngClass]=\\\"['core-moremenu-handler', handler.class || '']\\\"\\r\\n            (click)=\\\"openHandler(handler)\\\" [attr.aria-label]=\\\"handler.title | translate\\\" detail=\\\"true\\\">\\r\\n            <ion-icon [name]=\\\"handler.icon\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            <ion-label>\\r\\n                <p class=\\\"item-heading\\\">{{ handler.title | translate}}</p>\\r\\n            </ion-label>\\r\\n            <ion-badge slot=\\\"end\\\" *ngIf=\\\"handler.showBadge\\\" [hidden]=\\\"handler.loading || !handler.badge\\\" aria-hidden=\\\"true\\\">\\r\\n                {{handler.badge}}\\r\\n            </ion-badge>\\r\\n            <span *ngIf=\\\"handler.showBadge && handler.badge && handler.badgeA11yText\\\" class=\\\"sr-only\\\">\\r\\n                {{ handler.badgeA11yText | translate: {$a : handler.badge } }}\\r\\n            </span>\\r\\n            <ion-spinner slot=\\\"end\\\" *ngIf=\\\"handler.showBadge && handler.loading\\\" [attr.aria-label]=\\\"'core.loading' | translate\\\">\\r\\n            </ion-spinner>\\r\\n        </ion-item>\\r\\n        <ng-container *ngFor=\\\"let item of customItems\\\">\\r\\n            <ion-item button *ngIf=\\\"item.type != 'embedded'\\\" [href]=\\\"item.url\\\" [attr.aria-label]=\\\"item.label\\\" core-link\\r\\n                [capture]=\\\"item.type == 'app'\\\" [inApp]=\\\"item.type == 'inappbrowser'\\\" class=\\\"core-moremenu-customitem\\\" detail=\\\"true\\\"\\r\\n                [detailIcon]=\\\"item.type == 'browser' ? 'open-outline' : 'chevron-forward'\\\">\\r\\n                <ion-icon [name]=\\\"item.icon\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{item.label}}</p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item button *ngIf=\\\"item.type == 'embedded'\\\" (click)=\\\"openItem(item)\\\" [attr.aria-label]=\\\"item.label\\\"\\r\\n                class=\\\"core-moremenu-customitem\\\" detail=\\\"true\\\">\\r\\n                <ion-icon [name]=\\\"item.icon\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{item.label}}</p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n        </ng-container>\\r\\n        <ion-item button *ngIf=\\\"showScanQR\\\" (click)=\\\"scanQR()\\\" detail=\\\"true\\\">\\r\\n            <ion-icon name=\\\"fas-qrcode\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            <ion-label>\\r\\n                <p class=\\\"item-heading\\\">{{ 'core.scanqr' | translate }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n    </ion-list>\\r\\n</ion-content>\\r\\n<ion-footer>\\r\\n    <ion-item button (click)=\\\"openSettings()\\\" [attr.aria-label]=\\\"'core.settings.appsettings' | translate\\\" detail=\\\"true\\\">\\r\\n        <ion-icon name=\\\"fas-cogs\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n        <ion-label>\\r\\n            <p class=\\\"item-heading\\\">{{ 'core.settings.appsettings' | translate }}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n</ion-footer>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injector, NgModule } from '@angular/core';\nimport { RouterModule, ROUTES } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreMainMenuMorePage } from './more';\nimport { buildTabMainRoutes } from '@features/mainmenu/mainmenu-tab-routing.module';\nimport { CoreMainMenuProvider } from '@features/mainmenu/services/mainmenu';\nimport { CoreMainMenuComponentsModule } from '@features/mainmenu/components/components.module';\n\n@NgModule({\n    imports: [\n        CoreSharedModule,\n        CoreMainMenuComponentsModule,\n    ],\n    providers: [\n        {\n            provide: ROUTES,\n            multi: true,\n            deps: [Injector],\n            useFactory: (injector: Injector) => buildTabMainRoutes(injector, {\n                component: CoreMainMenuMorePage,\n                data: {\n                    mainMenuTabRoot: CoreMainMenuProvider.MORE_PAGE_NAME,\n                },\n            }),\n        },\n    ],\n    declarations: [\n        CoreMainMenuMorePage,\n    ],\n    exports: [\n        RouterModule,\n    ],\n})\nexport class CoreMainMenuMorePageModule {}\n","export default \"ion-item {\\n  --border-color: var(--core-more-item-border, var(--ion-border-color));\\n}\\nion-item > ion-icon[slot] {\\n  color: var(--core-more-icon) !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb3JlL2ZlYXR1cmVzL21haW5tZW51L3BhZ2VzL21vcmUvbW9yZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0MscUVBQUE7QUFDRDtBQUNJO0VBQ0ksdUNBQUE7QUFDUiIsImZpbGUiOiJzcmMvY29yZS9mZWF0dXJlcy9tYWlubWVudS9wYWdlcy9tb3JlL21vcmUuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1pdGVtIHtcclxuXHQtLWJvcmRlci1jb2xvcjogdmFyKC0tY29yZS1tb3JlLWl0ZW0tYm9yZGVyLCB2YXIoLS1pb24tYm9yZGVyLWNvbG9yKSk7XHJcblxyXG4gICAgPiBpb24taWNvbltzbG90XSB7XHJcbiAgICAgICAgY29sb3I6IHZhcigtLWNvcmUtbW9yZS1pY29uKSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG59XHJcbiJdfQ== */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { CoreSites } from '@services/sites';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreMainMenuDelegate, CoreMainMenuHandlerData } from '../../services/mainmenu-delegate';\nimport { CoreMainMenu, CoreMainMenuCustomItem } from '../../services/mainmenu';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreCustomURLSchemes } from '@services/urlschemes';\nimport { CoreContentLinksHelper } from '@features/contentlinks/services/contentlinks-helper';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { Translate } from '@singletons';\nimport { CoreMainMenuDeepLinkManager } from '@features/mainmenu/classes/deep-link-manager';\nimport { CoreDom } from '@singletons/dom';\n\n/**\n * Page that displays the more page of the app.\n */\n@Component({\n    selector: 'page-core-mainmenu-more',\n    templateUrl: 'more.html',\n    styleUrls: ['more.scss'],\n})\nexport class CoreMainMenuMorePage implements OnInit, OnDestroy {\n\n    handlers?: CoreMainMenuHandlerData[];\n    handlersLoaded = false;\n    showScanQR: boolean;\n    customItems?: CoreMainMenuCustomItem[];\n\n    protected allHandlers?: CoreMainMenuHandlerData[];\n    protected subscription!: Subscription;\n    protected langObserver: CoreEventObserver;\n    protected updateSiteObserver: CoreEventObserver;\n    protected resizeListener?: CoreEventObserver;\n\n    constructor() {\n        this.langObserver = CoreEvents.on(CoreEvents.LANGUAGE_CHANGED, this.loadCustomMenuItems.bind(this));\n\n        this.updateSiteObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, async () => {\n            this.customItems = await CoreMainMenu.getCustomMenuItems();\n        }, CoreSites.getCurrentSiteId());\n\n        this.loadCustomMenuItems();\n\n        this.showScanQR = CoreUtils.canScanQR() &&\n                !CoreSites.getCurrentSite()?.isFeatureDisabled('CoreMainMenuDelegate_QrReader');\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        // Load the handlers.\n        this.subscription = CoreMainMenuDelegate.getHandlersObservable().subscribe((handlers) => {\n            this.allHandlers = handlers;\n\n            this.initHandlers();\n        });\n\n        this.resizeListener = CoreDom.onWindowResize(() => {\n            this.initHandlers();\n        });\n\n        const deepLinkManager = new CoreMainMenuDeepLinkManager();\n        deepLinkManager.treatLink();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.langObserver?.off();\n        this.updateSiteObserver?.off();\n        this.subscription?.unsubscribe();\n        this.resizeListener?.off();\n    }\n\n    /**\n     * Init handlers on change (size or handlers).\n     */\n    initHandlers(): void {\n        if (!this.allHandlers) {\n            return;\n        }\n\n        // Calculate the main handlers not to display them in this view.\n        const mainHandlers = this.allHandlers\n            .filter((handler) => !handler.onlyInMore)\n            .slice(0, CoreMainMenu.getNumItems());\n\n        // Get only the handlers that don't appear in the main view.\n        this.handlers = this.allHandlers.filter((handler) => mainHandlers.indexOf(handler) == -1);\n\n        this.handlersLoaded = CoreMainMenuDelegate.areHandlersLoaded();\n    }\n\n    /**\n     * Load custom menu items.\n     */\n    protected async loadCustomMenuItems(): Promise<void> {\n        this.customItems = await CoreMainMenu.getCustomMenuItems();\n    }\n\n    /**\n     * Open a handler.\n     *\n     * @param handler Handler to open.\n     */\n    openHandler(handler: CoreMainMenuHandlerData): void {\n        const params = handler.pageParams;\n\n        CoreNavigator.navigateToSitePath(handler.page, { params });\n    }\n\n    /**\n     * Open an embedded custom item.\n     *\n     * @param item Item to open.\n     */\n    openItem(item: CoreMainMenuCustomItem): void {\n        CoreNavigator.navigateToSitePath('viewer/iframe', { params: { title: item.label, url: item.url } });\n    }\n\n    /**\n     * Open settings.\n     */\n    openSettings(): void {\n        CoreNavigator.navigateToSitePath('settings');\n    }\n\n    /**\n     * Scan and treat a QR code.\n     */\n    async scanQR(): Promise<void> {\n        // Scan for a QR code.\n        const text = await CoreUtils.scanQR();\n\n        if (!text) {\n            return;\n        }\n\n        if (CoreCustomURLSchemes.isCustomURL(text)) {\n            // Is a custom URL scheme, handle it.\n            CoreCustomURLSchemes.handleCustomURL(text).catch((error) => {\n                CoreCustomURLSchemes.treatHandleCustomURLError(error);\n            });\n        } else if (/^[^:]{2,}:\\/\\/[^ ]+$/i.test(text)) { // Check if it's a URL.\n            // Check if the app can handle the URL.\n            const treated = await CoreContentLinksHelper.handleLink(text, undefined, true, true);\n\n            if (!treated) {\n                // Can't handle it, open it in browser.\n                CoreSites.getCurrentSite()?.openInBrowserWithAutoLoginIfSameSite(text);\n            }\n        } else {\n            // It's not a URL, open it in a modal so the user can see it and copy it.\n            CoreTextUtils.viewText(Translate.instant('core.qrscanner'), text, {\n                displayCopyButton: true,\n            });\n        }\n    }\n\n}\n"],"sourceRoot":"webpack:///"}