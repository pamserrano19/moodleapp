{"version":3,"sources":["./src/core/features/grades/pages/courses/courses.html","./src/core/features/grades/grades-courses-lazy.module.ts","./src/core/features/grades/pages/courses/courses.page.ts"],"names":[],"mappings":"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","file":"grades-courses-lazy-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>{{ 'core.grades.grades' | translate }}</h1>\\r\\n        </ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <core-split-view>\\r\\n        <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!courses.loaded\\\" (ionRefresh)=\\\"refreshCourses($event.target)\\\">\\r\\n            <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n        </ion-refresher>\\r\\n        <core-loading [hideUntil]=\\\"courses.loaded\\\">\\r\\n            <core-empty-box *ngIf=\\\"courses.empty\\\" icon=\\\"fas-chart-bar\\\" [message]=\\\"'core.grades.nogradesreturned' | translate\\\">\\r\\n            </core-empty-box>\\r\\n\\r\\n            <ion-list *ngIf=\\\"!courses.empty\\\">\\r\\n                <ion-item *ngFor=\\\"let course of courses.items\\\" [attr.aria-label]=\\\"course.courseFullName\\\"\\r\\n                    [attr.aria-current]=\\\"courses.getItemAriaCurrent(course)\\\" class=\\\"ion-text-wrap\\\" button detail=\\\"true\\\"\\r\\n                    (click)=\\\"courses.select(course)\\\">\\r\\n                    <ion-label>\\r\\n                        <core-format-text [text]=\\\"course.courseFullName\\\" [contextInstanceId]=\\\"course.courseid\\\" contextLevel=\\\"course\\\">\\r\\n                        </core-format-text>\\r\\n                    </ion-label>\\r\\n                    <ion-badge slot=\\\"end\\\" color=\\\"light\\\">\\r\\n                        <span class=\\\"sr-only\\\" *ngIf=\\\"course.grade && course.grade != '-'\\\">\\r\\n                            {{ 'core.grades.grade' | translate }}\\r\\n                        </span>\\r\\n                        {{course.grade}}\\r\\n                    </ion-badge>\\r\\n                </ion-item>\\r\\n            </ion-list>\\r\\n        </core-loading>\\r\\n    </core-split-view>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { conditionalRoutes } from '@/app/app-routing.module';\nimport { CoreScreen } from '@services/screen';\nimport { CoreSharedModule } from '@/core/shared.module';\n\nimport { CoreGradesCoursePage } from './pages/course/course.page';\nimport { CoreGradesCoursePageModule } from './pages/course/course.module';\nimport { CoreGradesCoursesPage } from './pages/courses/courses.page';\n\nconst mobileRoutes: Routes = [\n    {\n        path: '',\n        component: CoreGradesCoursesPage,\n    },\n    {\n        path: ':courseId',\n        component: CoreGradesCoursePage,\n    },\n];\n\nconst tabletRoutes: Routes = [\n    {\n        path: '',\n        component: CoreGradesCoursesPage,\n        children: [\n            {\n                path: ':courseId',\n                component: CoreGradesCoursePage,\n            },\n        ],\n    },\n];\n\nconst routes: Routes = [\n    ...conditionalRoutes(mobileRoutes, () => CoreScreen.isMobile),\n    ...conditionalRoutes(tabletRoutes, () => CoreScreen.isTablet),\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        CoreGradesCoursePageModule,\n    ],\n    declarations: [\n        CoreGradesCoursesPage,\n    ],\n})\nexport class CoreGradesCoursesLazyModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\n\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreGradesCoursesSource } from '@features/grades/classes/grades-courses-source';\nimport { CoreGrades } from '@features/grades/services/grades';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\n\n/**\n * Page that displays courses grades (main menu option).\n */\n@Component({\n    selector: 'page-core-grades-courses',\n    templateUrl: 'courses.html',\n})\nexport class CoreGradesCoursesPage implements OnDestroy, AfterViewInit {\n\n    courses: CoreGradesCoursesManager;\n\n    @ViewChild(CoreSplitViewComponent) splitView!: CoreSplitViewComponent;\n\n    constructor() {\n        const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(CoreGradesCoursesSource, []);\n\n        this.courses = new CoreGradesCoursesManager(source, CoreGradesCoursesPage);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngAfterViewInit(): Promise<void> {\n        await this.fetchInitialCourses();\n\n        this.courses.start(this.splitView);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.courses.destroy();\n    }\n\n    /**\n     * Refresh courses.\n     *\n     * @param refresher Refresher.\n     */\n    async refreshCourses(refresher: IonRefresher): Promise<void> {\n        await CoreUtils.ignoreErrors(CoreGrades.invalidateCoursesGradesData());\n        await CoreUtils.ignoreErrors(this.courses.reload());\n\n        refresher?.complete();\n    }\n\n    /**\n     * Obtain the initial list of courses.\n     */\n    private async fetchInitialCourses(): Promise<void> {\n        try {\n            await this.courses.load();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error loading courses');\n        }\n    }\n\n}\n\n/**\n * Helper class to manage courses.\n */\nclass CoreGradesCoursesManager extends CoreListItemsManager {\n\n    /**\n     * @inheritdoc\n     */\n    protected async logActivity(): Promise<void> {\n        await CoreGrades.logCoursesGradesView();\n    }\n\n}\n"],"sourceRoot":"webpack:///"}