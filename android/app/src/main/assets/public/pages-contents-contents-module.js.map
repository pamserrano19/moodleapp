{"version":3,"sources":["./src/addons/mod/book/pages/contents/contents.html","./src/addons/mod/book/pages/contents/contents.module.ts","./src/addons/mod/book/pages/contents/contents.scss","./src/addons/mod/book/pages/contents/contents.ts","./src/core/features/course/pages/contents/contents.module.ts"],"names":[],"mappings":"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","file":"pages-contents-contents-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>\\r\\n                <core-format-text [text]=\\\"title\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\">\\r\\n                </core-format-text>\\r\\n            </h1>\\r\\n        </ion-title>\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <ion-button (click)=\\\"showToc()\\\" [attr.aria-label]=\\\"'addon.mod_book.toc' | translate\\\" aria-haspopup=\\\"true\\\" *ngIf=\\\"loaded\\\">\\r\\n                <ion-icon name=\\\"fas-bookmark\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"doRefresh($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n\\r\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\r\\n        <div class=\\\"safe-area-padding-horizontal core-swipe-slides-container\\\">\\r\\n            <ion-card class=\\\"core-warning-card\\\" *ngIf=\\\"warning\\\">\\r\\n                <ion-item>\\r\\n                    <ion-icon name=\\\"fas-exclamation-triangle\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                    <ion-label><span [innerHTML]=\\\"warning\\\"></span></ion-label>\\r\\n                </ion-item>\\r\\n            </ion-card>\\r\\n\\r\\n            <core-swipe-slides [manager]=\\\"manager\\\" [options]=\\\"slidesOpts\\\">\\r\\n                <ng-template let-chapter=\\\"item\\\">\\r\\n                    <div class=\\\"ion-padding\\\">\\r\\n                        <core-format-text [component]=\\\"component\\\" [componentId]=\\\"cmId\\\" [text]=\\\"chapter.content\\\" contextLevel=\\\"module\\\"\\r\\n                            [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\"></core-format-text>\\r\\n                        <div class=\\\"ion-margin-top\\\" *ngIf=\\\"chapter.tags?.length > 0\\\">\\r\\n                            <strong>{{ 'core.tag.tags' | translate }}: </strong>\\r\\n                            <core-tag-list [tags]=\\\"chapter.tags\\\"></core-tag-list>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </core-swipe-slides>\\r\\n        </div>\\r\\n    </core-loading>\\r\\n\\r\\n    <core-navigation-bar collapsible-footer appearOnBottom *ngIf=\\\"loaded && displayNavBar && navigationItems.length > 1\\\"\\r\\n        [items]=\\\"navigationItems\\\" previousTranslate=\\\"addon.mod_book.navprevtitle\\\" nextTranslate=\\\"addon.mod_book.navnexttitle\\\"\\r\\n        (action)=\\\"changeChapter($event.id)\\\" slot=\\\"fixed\\\">\\r\\n    </core-navigation-bar>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonModBookContentsPage } from './contents';\nimport { CoreTagComponentsModule } from '@features/tag/components/components.module';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AddonModBookContentsPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        CoreTagComponentsModule,\n    ],\n    declarations: [\n        AddonModBookContentsPage,\n    ],\n    exports: [RouterModule],\n})\nexport class AddonModBookContentsPageModule {}\n","export default \":host .core-swipe-slides-container ion-card {\\n  flex: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hZGRvbnMvbW9kL2Jvb2svcGFnZXMvY29udGVudHMvY29udGVudHMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFUTtFQUNJLFVBQUE7QUFEWiIsImZpbGUiOiJzcmMvYWRkb25zL21vZC9ib29rL3BhZ2VzL2NvbnRlbnRzL2NvbnRlbnRzLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgICAuY29yZS1zd2lwZS1zbGlkZXMtY29udGFpbmVyIHtcclxuICAgICAgICBpb24tY2FyZCB7XHJcbiAgICAgICAgICAgIGZsZXg6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ== */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreConstants } from '@/core/constants';\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreSwipeSlidesItemsManager } from '@classes/items-management/swipe-slides-items-manager';\nimport { CoreSwipeSlidesItemsManagerSource } from '@classes/items-management/swipe-slides-items-manager-source';\nimport { CoreNavigationBarItem } from '@components/navigation-bar/navigation-bar';\nimport { CoreSwipeSlidesComponent, CoreSwipeSlidesOptions } from '@components/swipe-slides/swipe-slides';\nimport { CoreCourseResourceDownloadResult } from '@features/course/classes/main-resource-component';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreCourseModuleData } from '@features/course/services/course-helper';\nimport { CoreCourseModulePrefetchDelegate } from '@features/course/services/module-prefetch-delegate';\nimport { CoreTag, CoreTagItem } from '@features/tag/services/tag';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreApp } from '@services/app';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Translate } from '@singletons';\nimport { AddonModBookTocComponent } from '../../components/toc/toc';\nimport {\n    AddonModBook,\n    AddonModBookBookWSData,\n    AddonModBookContentsMap,\n    AddonModBookNavStyle,\n    AddonModBookProvider,\n    AddonModBookTocChapter,\n} from '../../services/book';\n\n/**\n * Page that displays a book contents.\n */\n@Component({\n    selector: 'page-addon-mod-book-contents',\n    templateUrl: 'contents.html',\n    styleUrls: ['contents.scss'],\n})\nexport class AddonModBookContentsPage implements OnInit, OnDestroy {\n\n    @ViewChild(CoreSwipeSlidesComponent) slides?: CoreSwipeSlidesComponent;\n\n    title = '';\n    cmId!: number;\n    courseId!: number;\n    initialChapterId?: number;\n    component = AddonModBookProvider.COMPONENT;\n    manager?: CoreSwipeSlidesItemsManager<LoadedChapter, AddonModBookSlidesItemsManagerSource>;\n    warning = '';\n    displayNavBar = true;\n    navigationItems: CoreNavigationBarItem<AddonModBookTocChapter>[] = [];\n    slidesOpts: CoreSwipeSlidesOptions = {\n        autoHeight: true,\n        scrollOnChange: 'top',\n    };\n\n    loaded = false;\n\n    protected managerUnsubscribe?: () => void;\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        try {\n            this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n            this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            this.initialChapterId = CoreNavigator.getRouteNumberParam('chapterId');\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        const source = new AddonModBookSlidesItemsManagerSource(\n            this.courseId,\n            this.cmId,\n            CoreTag.areTagsAvailableInSite(),\n            this.initialChapterId,\n        );\n        this.manager = new CoreSwipeSlidesItemsManager(source);\n        this.managerUnsubscribe = this.manager.addListener({\n            onSelectedItemUpdated: (item) => {\n                this.onChapterViewed(item.id);\n            },\n        });\n\n        this.fetchContent();\n    }\n\n    get module(): CoreCourseModuleData | undefined {\n        return this.manager?.getSource().module;\n    }\n\n    get book(): AddonModBookBookWSData | undefined {\n        return this.manager?.getSource().book;\n    }\n\n    get chapters(): AddonModBookTocChapter[] {\n        return this.manager?.getSource().chapters || [];\n    }\n\n    /**\n     * Download book contents and load the current chapter.\n     *\n     * @param refresh Whether we're refreshing data.\n     * @return Promise resolved when done.\n     */\n    protected async fetchContent(refresh = false): Promise<void> {\n        try {\n            const source = this.manager?.getSource();\n            if (!source) {\n                return;\n            }\n\n            const { module, book } = await source.loadBookData();\n\n            const downloadResult = await this.downloadResourceIfNeeded(module, refresh);\n\n            this.displayNavBar = book.navstyle != AddonModBookNavStyle.TOC_ONLY;\n            this.title = book.name;\n\n            // Get contents. No need to refresh, it has been done in downloadResourceIfNeeded.\n            await source.loadContents();\n\n            await source.load();\n\n            if (downloadResult?.failed) {\n                const error = CoreTextUtils.getErrorMessageFromError(downloadResult.error) || downloadResult.error;\n                this.warning = Translate.instant('core.errordownloadingsomefiles') + (error ? ' ' + error : '');\n            } else {\n                this.warning = '';\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Download a resource if needed.\n     * If the download call fails the promise won't be rejected, but the error will be included in the returned object.\n     * If module.contents cannot be loaded then the Promise will be rejected.\n     *\n     * @param refresh Whether we're refreshing data.\n     * @return Promise resolved when done.\n     */\n    protected async downloadResourceIfNeeded(\n        module: CoreCourseModuleData,\n        refresh = false,\n    ): Promise<CoreCourseResourceDownloadResult> {\n\n        const result: CoreCourseResourceDownloadResult = {\n            failed: false,\n        };\n        let contentsAlreadyLoaded = false;\n\n        // Get module status to determine if it needs to be downloaded.\n        const status = await CoreCourseModulePrefetchDelegate.getModuleStatus(module, this.courseId, undefined, refresh);\n\n        if (status !== CoreConstants.DOWNLOADED) {\n            // Download content. This function also loads module contents if needed.\n            try {\n                await CoreCourseModulePrefetchDelegate.downloadModule(module, this.courseId);\n\n                // If we reach here it means the download process already loaded the contents, no need to do it again.\n                contentsAlreadyLoaded = true;\n            } catch (error) {\n                // Mark download as failed but go on since the main files could have been downloaded.\n                result.failed = true;\n                result.error = error;\n            }\n        }\n\n        if (!module.contents?.length || (refresh && !contentsAlreadyLoaded)) {\n            // Try to load the contents.\n            const ignoreCache = refresh && CoreApp.isOnline();\n\n            try {\n                await CoreCourse.loadModuleContents(module, undefined, undefined, false, ignoreCache);\n            } catch (error) {\n                // Error loading contents. If we ignored cache, try to get the cached value.\n                if (ignoreCache && !module.contents) {\n                    await CoreCourse.loadModuleContents(module);\n                } else if (!module.contents) {\n                    // Not able to load contents, throw the error.\n                    throw error;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Change the current chapter.\n     *\n     * @param chapterId Chapter to load.\n     * @return Promise resolved when done.\n     */\n    changeChapter(chapterId: number): void {\n        if (!chapterId) {\n            return;\n        }\n\n        this.slides?.slideToItem({ id: chapterId });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @return Promise resolved when done.\n     */\n    async doRefresh(refresher?: IonRefresher): Promise<void> {\n        if (this.manager) {\n            await CoreUtils.ignoreErrors(Promise.all([\n                this.manager.getSource().invalidateContent(),\n                CoreCourseModulePrefetchDelegate.invalidateCourseUpdates(this.courseId), // To detect if book was updated.\n            ]));\n        }\n\n        await CoreUtils.ignoreErrors(this.fetchContent(true));\n\n        refresher?.complete();\n    }\n\n    /**\n     * Show the TOC.\n     */\n    async showToc(): Promise<void> {\n        // Create the toc modal.\n        const visibleChapter = this.manager?.getSelectedItem();\n\n        const modalData = await CoreDomUtils.openSideModal<number>({\n            component: AddonModBookTocComponent,\n            componentProps: {\n                moduleId: this.cmId,\n                chapters: this.chapters,\n                selected: visibleChapter,\n                courseId: this.courseId,\n                book: this.book,\n            },\n        });\n\n        if (modalData) {\n            this.changeChapter(modalData);\n        }\n    }\n\n    /**\n     * Update data related to chapter being viewed.\n     *\n     * @param chapterId Chapter viewed.\n     * @return Promise resolved when done.\n     */\n    protected async onChapterViewed(chapterId: number): Promise<void> {\n        if (this.displayNavBar) {\n            this.navigationItems = this.getNavigationItems(chapterId);\n        }\n\n        if (this.book) {\n            AddonModBook.storeLastChapterViewed(this.book.id, chapterId, this.courseId);\n        }\n\n        if (!this.module) {\n            return;\n        }\n\n        // Chapter loaded, log view.\n        await CoreUtils.ignoreErrors(AddonModBook.logView(this.module.instance, chapterId, this.module.name));\n\n        const currentChapterIndex = this.chapters.findIndex((chapter) => chapter.id == chapterId);\n        const isLastChapter = currentChapterIndex < 0 || this.chapters[currentChapterIndex + 1] === undefined;\n\n        // Module is completed when last chapter is viewed, so we only check completion if the last is reached.\n        if (isLastChapter) {\n            CoreCourse.checkModuleCompletion(this.courseId, this.module.completiondata);\n        }\n    }\n\n    /**\n     * Converts chapters to navigation items.\n     *\n     * @param chapterId Current chapter Id.\n     * @return Navigation items.\n     */\n    protected getNavigationItems(chapterId: number): CoreNavigationBarItem<AddonModBookTocChapter>[] {\n        return this.chapters.map((chapter) => ({\n            item: chapter,\n            title: chapter.title,\n            current: chapter.id == chapterId,\n            enabled: true,\n        }));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.managerUnsubscribe && this.managerUnsubscribe();\n    }\n\n}\n\ntype LoadedChapter = {\n    id: number;\n    content?: string;\n    tags?: CoreTagItem[];\n};\n\n/**\n * Helper to manage swiping within a collection of chapters.\n */\nclass AddonModBookSlidesItemsManagerSource extends CoreSwipeSlidesItemsManagerSource<LoadedChapter> {\n\n    readonly COURSE_ID: number;\n    readonly CM_ID: number;\n    readonly TAGS_ENABLED: boolean;\n\n    module?: CoreCourseModuleData;\n    book?: AddonModBookBookWSData;\n    chapters: AddonModBookTocChapter[] = [];\n    contentsMap: AddonModBookContentsMap = {};\n\n    constructor(courseId: number, cmId: number, tagsEnabled: boolean, initialChapterId?: number) {\n        super(initialChapterId ? { id: initialChapterId } : undefined);\n\n        this.COURSE_ID = courseId;\n        this.CM_ID = cmId;\n        this.TAGS_ENABLED = tagsEnabled;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getItemId(item: LoadedChapter): string | number {\n        return item.id;\n    }\n\n    /**\n     * Load book data from WS.\n     *\n     * @return Promise resolved when done.\n     */\n    async loadBookData(): Promise<{ module: CoreCourseModuleData; book: AddonModBookBookWSData }> {\n        this.module = await CoreCourse.getModule(this.CM_ID, this.COURSE_ID);\n        this.book = await AddonModBook.getBook(this.COURSE_ID, this.CM_ID);\n\n        if (!this.initialItem) {\n            // No chapter ID specified. Calculate last viewed.\n            const lastViewed = await AddonModBook.getLastChapterViewed(this.book.id);\n\n            if (lastViewed) {\n                this.initialItem = { id: lastViewed };\n            }\n        }\n\n        return {\n            module: this.module,\n            book: this.book,\n        };\n    }\n\n    /**\n     * Load module contents.\n     */\n    async loadContents(): Promise<void> {\n        if (!this.module) {\n            return;\n        }\n\n        const contents = await CoreCourse.getModuleContents(this.module, this.COURSE_ID);\n\n        this.contentsMap = AddonModBook.getContentsMap(contents);\n        this.chapters = AddonModBook.getTocList(contents);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected async loadItems(): Promise<LoadedChapter[]> {\n        try {\n            const newChapters = await Promise.all(this.chapters.map(async (chapter) => {\n                const content = await AddonModBook.getChapterContent(this.contentsMap, chapter.id, this.CM_ID);\n\n                return {\n                    id: chapter.id,\n                    content,\n                    tags: this.TAGS_ENABLED ? this.contentsMap[chapter.id].tags : [],\n                };\n            }));\n\n            return newChapters;\n        } catch (error) {\n            if (!CoreTextUtils.getErrorMessageFromError(error)) {\n                throw new CoreError(Translate.instant('addon.mod_book.errorchapter'));\n            }\n\n            throw error;\n        }\n    }\n\n    /**\n     * Perform the invalidate content function.\n     *\n     * @return Resolved when done.\n     */\n    invalidateContent(): Promise<void> {\n        return AddonModBook.invalidateContent(this.CM_ID, this.COURSE_ID);\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Injector, NgModule } from '@angular/core';\r\nimport { RouterModule, ROUTES, Routes } from '@angular/router';\r\n\r\nimport { CoreCourseComponentsModule } from '@features/course/components/components.module';\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\nimport { resolveModuleRoutes } from '@/app/app-routing.module';\r\n\r\nimport { CoreCourseContentsPage } from './contents';\r\nimport { COURSE_CONTENTS_ROUTES } from './contents-routing.module';\r\n\r\nfunction buildRoutes(injector: Injector): Routes {\r\n    const routes = resolveModuleRoutes(injector, COURSE_CONTENTS_ROUTES);\r\n\r\n    return [\r\n        {\r\n            path: '',\r\n            component: CoreCourseContentsPage,\r\n            children: routes.children,\r\n        },\r\n        ...routes.siblings,\r\n    ];\r\n}\r\n\r\n@NgModule({\r\n    providers: [\r\n        { provide: ROUTES, multi: true, useFactory: buildRoutes, deps: [Injector] },\r\n    ],\r\n    imports: [\r\n        CoreSharedModule,\r\n        CoreCourseComponentsModule,\r\n    ],\r\n    declarations: [\r\n        CoreCourseContentsPage,\r\n    ],\r\n    exports: [RouterModule],\r\n})\r\nexport class CoreCourseContentsPageModule {}\r\n"],"sourceRoot":"webpack:///"}