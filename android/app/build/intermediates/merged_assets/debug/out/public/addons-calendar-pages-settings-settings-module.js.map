{"version":3,"sources":["./src/addons/calendar/pages/settings/settings.html","./src/addons/calendar/pages/settings/settings.module.ts","./src/addons/calendar/pages/settings/settings.ts"],"names":[],"mappings":"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","file":"addons-calendar-pages-settings-settings-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>{{ 'core.settings.settings' | translate }}</h1>\\r\\n        </ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-list>\\r\\n        <ion-item *ngIf=\\\"defaultTimeLabel\\\">\\r\\n            <ion-label>{{ 'addon.calendar.defaultnotificationtime' | translate }}</ion-label>\\r\\n            <ion-select [(ngModel)]=\\\"defaultTimeLabel\\\" (click)=\\\"changeDefaultTime($event)\\\">\\r\\n                <ion-select-option [value]=\\\"defaultTimeLabel\\\">{{ defaultTimeLabel }}</ion-select-option>\\r\\n            </ion-select>\\r\\n        </ion-item>\\r\\n    </ion-list>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AddonCalendarSettingsPage } from './settings';\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AddonCalendarSettingsPage,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n    ],\r\n    declarations: [\r\n        AddonCalendarSettingsPage,\r\n    ],\r\n    exports: [RouterModule],\r\n})\r\nexport class AddonCalendarSettingsPageModule {}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport {\n    AddonCalendar,\n    AddonCalendarProvider,\n    AddonCalendarReminderUnits,\n    AddonCalendarValueAndUnit,\n} from '../../services/calendar';\nimport { CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { AddonCalendarReminderTimeModalComponent } from '@addons/calendar/components/reminder-time-modal/reminder-time-modal';\n\n/**\n * Page that displays the calendar settings.\n */\n@Component({\n    selector: 'page-addon-calendar-settings',\n    templateUrl: 'settings.html',\n})\nexport class AddonCalendarSettingsPage implements OnInit {\n\n    defaultTimeLabel = '';\n\n    protected defaultTime: AddonCalendarValueAndUnit = {\n        value: 0,\n        unit: AddonCalendarReminderUnits.MINUTE,\n    };\n\n    /**\n     * View loaded.\n     */\n    async ngOnInit(): Promise<void> {\n        const defaultTime = await AddonCalendar.getDefaultNotificationTime();\n\n        this.defaultTime = AddonCalendarProvider.convertSecondsToValueAndUnit(defaultTime);\n        this.defaultTimeLabel = AddonCalendar.getUnitValueLabel(this.defaultTime.value, this.defaultTime.unit);\n    }\n\n    /**\n     * Change default time.\n     *\n     * @param e Event.\n     * @return Promise resolved when done.\n     */\n    async changeDefaultTime(e: Event): Promise<void> {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        e.preventDefault();\n\n        const reminderTime = await CoreDomUtils.openModal<number>({\n            component: AddonCalendarReminderTimeModalComponent,\n            componentProps: {\n                initialValue: this.defaultTime,\n                allowDisable: true,\n            },\n        });\n\n        if (reminderTime === undefined) {\n            // User canceled.\n            return;\n        }\n\n        this.defaultTime = AddonCalendarProvider.convertSecondsToValueAndUnit(reminderTime);\n        this.defaultTimeLabel = AddonCalendar.getUnitValueLabel(this.defaultTime.value, this.defaultTime.unit);\n\n        this.updateDefaultTime(reminderTime);\n    }\n\n    /**\n     * Update default time.\n     *\n     * @param newTime New time.\n     */\n    updateDefaultTime(newTime: number): void {\n        AddonCalendar.setDefaultNotificationTime(newTime);\n\n        CoreEvents.trigger(\n            AddonCalendarProvider.DEFAULT_NOTIFICATION_TIME_CHANGED,\n            { time: newTime },\n            CoreSites.getCurrentSiteId(),\n        );\n    }\n\n}\n"],"sourceRoot":"webpack:///"}