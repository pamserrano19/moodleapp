{"version":3,"sources":["./src/addons/competency/pages/competencies/competencies.html","./src/addons/competency/pages/competency/competency.html","./src/addons/competency/pages/competencysummary/competencysummary.html","./src/addons/competency/classes/competency-course-competencies-source.ts","./src/addons/competency/classes/competency-plan-competencies-source.ts","./src/addons/competency/pages/competencies/competencies.module.ts","./src/addons/competency/pages/competencies/competencies.page.ts","./src/addons/competency/pages/competency/competency.module.ts","./src/addons/competency/pages/competency/competency.page.ts","./src/addons/competency/pages/competencysummary/competencysummary.module.ts","./src/addons/competency/pages/competencysummary/competencysummary.page.ts","./src/core/classes/items-management/swipe-navigation-items-manager.ts"],"names":[],"mappings":"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","file":"default~competency-course-details-lazy-module~competency-learning-plans-lazy-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>{{ title }}</h1>\\r\\n        </ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <core-split-view>\\r\\n        <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!competencies.loaded\\\" (ionRefresh)=\\\"refreshCompetencies($event.target)\\\">\\r\\n            <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n        </ion-refresher>\\r\\n        <core-loading [hideUntil]=\\\"competencies.loaded\\\">\\r\\n            <ion-list>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngFor=\\\"let competency of competencies.items\\\"\\r\\n                    [attr.aria-label]=\\\"competency.competency.shortname\\\" (click)=\\\"competencies.select(competency)\\\"\\r\\n                    [attr.aria-current]=\\\"competencies.getItemAriaCurrent(competency)\\\" button detail=\\\"true\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ competency.competency.shortname }} <em>{{competency.competency.idnumber}}</em></p>\\r\\n                    </ion-label>\\r\\n                    <ion-badge slot=\\\"end\\\" *ngIf=\\\"competency.usercompetency\\\"\\r\\n                        [color]=\\\"competency.usercompetency.proficiency ? 'success' : 'danger'\\\">\\r\\n                        {{ competency.usercompetency.gradename }}\\r\\n                    </ion-badge>\\r\\n                    <ion-badge slot=\\\"end\\\" *ngIf=\\\"competency.usercompetencycourse\\\"\\r\\n                        [color]=\\\"competency.usercompetencycourse.proficiency ? 'success' : 'danger'\\\">\\r\\n                        {{ competency.usercompetencycourse.gradename }}\\r\\n                    </ion-badge>\\r\\n                </ion-item>\\r\\n            </ion-list>\\r\\n        </core-loading>\\r\\n    </core-split-view>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1 *ngIf=\\\"competency\\\">\\r\\n                {{ competency.competency.competency.shortname }} <small>{{ competency.competency.competency.idnumber }}</small>\\r\\n            </h1>\\r\\n        </ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content [core-swipe-navigation]=\\\"competencies\\\" class=\\\"limited-width\\\">\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!competencyLoaded\\\" (ionRefresh)=\\\"refreshCompetency($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n    <core-loading [hideUntil]=\\\"competencyLoaded\\\">\\r\\n        <ion-card *ngIf=\\\"user\\\">\\r\\n            <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                <core-user-avatar [user]=\\\"user\\\" slot=\\\"start\\\"></core-user-avatar>\\r\\n                <ion-label>\\r\\n                    <h2>{{ user.fullname }}</h2>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n        </ion-card>\\r\\n\\r\\n        <ion-card *ngIf=\\\"competency\\\">\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"competency.competency.competency.description\\\">\\r\\n                <ion-label>\\r\\n                    <core-format-text [text]=\\\"competency.competency.competency.description\\\" [contextLevel]=\\\"contextLevel\\\"\\r\\n                        [contextInstanceId]=\\\"contextInstanceId\\\">\\r\\n                    </core-format-text>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap only-links\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ 'addon.competency.path' | translate }}</p>\\r\\n                    <p>\\r\\n                        <a *ngIf=\\\"competency.competency.comppath.showlinks\\\" [href]=\\\"competencyFrameworkUrl\\\" core-link>\\r\\n                            {{ competency.competency.comppath.framework.name }}\\r\\n                        </a>\\r\\n                        <ng-container *ngIf=\\\"!competency.competency.comppath.showlinks\\\">\\r\\n                            {{ competency.competency.comppath.framework.name }}\\r\\n                        </ng-container>\\r\\n                        &nbsp;/&nbsp;\\r\\n                        <ng-container *ngFor=\\\"let ancestor of competency.competency.comppath.ancestors\\\">\\r\\n                            <button *ngIf=\\\"competency.competency.comppath.showlinks\\\" (click)=\\\"openCompetencySummary(ancestor.id)\\\"\\r\\n                                class=\\\"as-link\\\">\\r\\n                                {{ ancestor.name }}\\r\\n                            </button>\\r\\n                            <ng-container *ngIf=\\\"!competency.competency.comppath.showlinks\\\">{{ ancestor.name }}</ng-container>\\r\\n                            <ng-container *ngIf=\\\"!ancestor.last\\\">&nbsp;/&nbsp;</ng-container>\\r\\n                        </ng-container>\\r\\n                    </p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ 'addon.competency.crossreferencedcompetencies' | translate }}</p>\\r\\n                    <p *ngIf=\\\"!competency.competency.hasrelatedcompetencies\\\">\\r\\n                        {{ 'addon.competency.nocrossreferencedcompetencies' | translate }}\\r\\n                    </p>\\r\\n                    <ng-container *ngIf=\\\"competency.competency.hasrelatedcompetencies\\\">\\r\\n                        <p *ngFor=\\\"let relatedcomp of competency.competency.relatedcompetencies\\\">\\r\\n                            <button (click)=\\\"openCompetencySummary(relatedcomp.id)\\\" class=\\\"as-link\\\">\\r\\n                                {{ relatedcomp.shortname }} - {{ relatedcomp.idnumber }}\\r\\n                            </button>\\r\\n                        </p>\\r\\n                    </ng-container>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"coursemodules\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ 'addon.competency.activities' | translate }}</p>\\r\\n                    <p *ngIf=\\\"coursemodules.length == 0\\\">\\r\\n                        {{ 'addon.competency.noactivities' | translate }}\\r\\n                    </p>\\r\\n                    <ion-item class=\\\"ion-text-wrap\\\" *ngFor=\\\"let activity of coursemodules\\\" [href]=\\\"activity.url\\\"\\r\\n                        [attr.aria-label]=\\\"activity.name\\\" core-link capture=\\\"true\\\">\\r\\n                        <core-mod-icon slot=\\\"start\\\" [modicon]=\\\"activity.iconurl\\\" [showAlt]=\\\"false\\\" *ngIf=\\\"activity.iconurl\\\">\\r\\n                        </core-mod-icon>\\r\\n                        <ion-label>\\r\\n                            <core-format-text [text]=\\\"activity.name\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"activity.id\\\"\\r\\n                                [courseId]=\\\"courseId\\\">\\r\\n                            </core-format-text>\\r\\n                        </ion-label>\\r\\n                    </ion-item>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ng-container *ngIf=\\\"userCompetency\\\">\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"competency.usercompetency && competency.usercompetency!.status\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ 'addon.competency.reviewstatus' | translate }}</p>\\r\\n                        <p>{{ competency.usercompetency!.statusname }}</p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ 'addon.competency.proficient' | translate }}</p>\\r\\n                    </ion-label>\\r\\n                    <ion-badge slot=\\\"end\\\" color=\\\"success\\\" *ngIf=\\\"userCompetency.proficiency\\\">\\r\\n                        {{ 'core.yes' | translate }}\\r\\n                    </ion-badge>\\r\\n                    <ion-badge slot=\\\"end\\\" color=\\\"danger\\\" *ngIf=\\\"!userCompetency.proficiency\\\">\\r\\n                        {{ 'core.no' | translate }}\\r\\n                    </ion-badge>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ 'addon.competency.rating' | translate }}</p>\\r\\n                    </ion-label>\\r\\n                    <ion-badge color=\\\"dark\\\" slot=\\\"end\\\">{{ userCompetency.gradename }}</ion-badge>\\r\\n                </ion-item>\\r\\n            </ng-container>\\r\\n        </ion-card>\\r\\n\\r\\n        <div *ngIf=\\\"competency\\\">\\r\\n            <h3 class=\\\"ion-margin-horizontal\\\">{{ 'addon.competency.evidence' | translate }}</h3>\\r\\n            <p class=\\\"ion-margin-horizontal\\\" *ngIf=\\\"competency.evidence.length == 0\\\">\\r\\n                {{ 'addon.competency.noevidence' | translate }}\\r\\n            </p>\\r\\n            <ion-card *ngFor=\\\"let evidence of competency.evidence\\\">\\r\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"evidence.actionuser\\\" core-user-link [userId]=\\\"evidence.actionuser.id\\\"\\r\\n                    [courseId]=\\\"courseId\\\">\\r\\n                    <core-user-avatar [user]=\\\"evidence.actionuser\\\" slot=\\\"start\\\" [linkProfile]=\\\"false\\\"></core-user-avatar>\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ evidence.actionuser.fullname }}</p>\\r\\n                        <p>{{ evidence.timemodified * 1000 | coreFormatDate }}</p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                    <ion-label>\\r\\n                        <p>\\r\\n                            <ion-badge color=\\\"dark\\\">{{ evidence.gradename }}</ion-badge>\\r\\n                        </p>\\r\\n                        <p class=\\\"ion-margin-top\\\" *ngIf=\\\"evidence.description\\\">{{ evidence.description }}</p>\\r\\n                        <blockquote *ngIf=\\\"evidence.note\\\">{{ evidence.note }}</blockquote>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n            </ion-card>\\r\\n        </div>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1 *ngIf=\\\"competency\\\">\\r\\n                {{ competency.competency.shortname }} <small>{{ competency.competency.idnumber }}</small>\\r\\n            </h1>\\r\\n        </ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content class=\\\"limited-width\\\">\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!competencyLoaded\\\" (ionRefresh)=\\\"refreshCompetency($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n    <core-loading [hideUntil]=\\\"competencyLoaded\\\">\\r\\n        <ion-card *ngIf=\\\"competency\\\">\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"competency.competency.description\\\">\\r\\n                <ion-label>\\r\\n                    <core-format-text [text]=\\\"competency.competency.description\\\" [contextLevel]=\\\"contextLevel\\\"\\r\\n                        [contextInstanceId]=\\\"contextInstanceId\\\">\\r\\n                    </core-format-text>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                <ion-label>\\r\\n                    <p class=\\\"item-heading\\\">{{ 'addon.competency.path' | translate }}</p>\\r\\n                    <p>{{ competency.comppath.framework.name }}\\r\\n                        <ng-container *ngFor=\\\"let ancestor of competency.comppath.ancestors\\\">\\r\\n                            &nbsp;/&nbsp;\\r\\n                            <button class=\\\"as-link\\\" (click)=\\\"openCompetencySummary(ancestor.id)\\\">\\r\\n                                {{ ancestor.name }}\\r\\n                            </button>\\r\\n                        </ng-container>\\r\\n                    </p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n        </ion-card>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreRoutedItemsManagerSource } from '@classes/items-management/routed-items-manager-source';\nimport { CoreUserProfile } from '@features/user/services/user';\nimport { CoreUtils } from '@services/utils/utils';\nimport {\n    AddonCompetency,\n    AddonCompetencyDataForCourseCompetenciesPageCompetency,\n    AddonCompetencyDataForCourseCompetenciesPageWSResponse,\n} from '../services/competency';\nimport { AddonCompetencyHelper } from '../services/competency-helper';\n\n/**\n * Provides a collection of course competencies.\n */\nexport class AddonCompetencyCourseCompetenciesSource\n    extends CoreRoutedItemsManagerSource<AddonCompetencyDataForCourseCompetenciesPageCompetency> {\n\n    /**\n     * @inheritdoc\n     */\n    static getSourceId(courseId: number, userId?: number): string {\n        return `${courseId}-${userId || 'current-user'}`;\n    }\n\n    readonly COURSE_ID: number;\n    readonly USER_ID?: number;\n\n    courseCompetencies?: AddonCompetencyDataForCourseCompetenciesPageWSResponse;\n    user?: CoreUserProfile;\n\n    constructor(courseId: number, userId?: number) {\n        super();\n\n        this.COURSE_ID = courseId;\n        this.USER_ID = userId;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getItemPath(competency: AddonCompetencyDataForCourseCompetenciesPageCompetency): string {\n        return String(competency.competency.id);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async load(): Promise<void> {\n        if (this.dirty || !this.courseCompetencies) {\n            await this.loadCourseCompetencies();\n        }\n\n        await super.load();\n    }\n\n    /**\n     * Invalidate course cache.\n     */\n    async invalidateCache(): Promise<void> {\n        await CoreUtils.ignoreErrors(AddonCompetency.invalidateCourseCompetencies(this.COURSE_ID, this.USER_ID));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected async loadPageItems(): Promise<{ items: AddonCompetencyDataForCourseCompetenciesPageCompetency[] }> {\n        if (!this.courseCompetencies) {\n            throw new Error('Can\\'t load competencies without course data');\n        }\n\n        return { items: this.courseCompetencies.competencies };\n    }\n\n    /**\n     * Load competencies.\n     */\n    private async loadCourseCompetencies(): Promise<void> {\n        [this.courseCompetencies, this.user] = await Promise.all([\n            AddonCompetency.getCourseCompetencies(this.COURSE_ID, this.USER_ID),\n            AddonCompetencyHelper.getProfile(this.USER_ID),\n        ]);\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreRoutedItemsManagerSource } from '@classes/items-management/routed-items-manager-source';\nimport { CoreUserProfile } from '@features/user/services/user';\nimport { CoreUtils } from '@services/utils/utils';\nimport {\n    AddonCompetency,\n    AddonCompetencyDataForPlanPageCompetency,\n    AddonCompetencyDataForPlanPageWSResponse,\n} from '../services/competency';\nimport { AddonCompetencyHelper } from '../services/competency-helper';\n\n/**\n * Provides a collection of plan competencies.\n */\nexport class AddonCompetencyPlanCompetenciesSource extends CoreRoutedItemsManagerSource<AddonCompetencyDataForPlanPageCompetency> {\n\n    readonly PLAN_ID: number;\n\n    plan?: AddonCompetencyDataForPlanPageWSResponse;\n    user?: CoreUserProfile;\n\n    constructor(planId: number) {\n        super();\n\n        this.PLAN_ID = planId;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getItemPath(competency: AddonCompetencyDataForPlanPageCompetency): string {\n        return String(competency.competency.id);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async load(): Promise<void> {\n        if (this.dirty || !this.plan) {\n            await this.loadLearningPlan();\n        }\n\n        await super.load();\n    }\n\n    /**\n     * Invalidate plan cache.\n     */\n    async invalidateCache(): Promise<void> {\n        await CoreUtils.ignoreErrors(AddonCompetency.invalidateLearningPlan(this.PLAN_ID));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected async loadPageItems(): Promise<{ items: AddonCompetencyDataForPlanPageCompetency[] }> {\n        if (!this.plan) {\n            throw new Error('Can\\'t load competencies without plan!');\n        }\n\n        return { items: this.plan.competencies };\n    }\n\n    /**\n     * Load learning plan.\n     */\n    private async loadLearningPlan(): Promise<void> {\n        this.plan = await AddonCompetency.getLearningPlan(this.PLAN_ID);\n        this.plan.plan.statusname = AddonCompetencyHelper.getPlanStatusName(this.plan.plan.status);\n\n        // Get the user profile image.\n        this.user = await AddonCompetencyHelper.getProfile(this.plan.plan.userid);\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonCompetencyCompetenciesPage } from './competencies.page';\n\n@NgModule({\n    imports: [\n        CoreSharedModule,\n    ],\n    declarations: [\n        AddonCompetencyCompetenciesPage,\n    ],\n})\nexport class AddonCompetencyCompetenciesPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport {\n    AddonCompetencyDataForPlanPageCompetency,\n    AddonCompetencyDataForCourseCompetenciesPageCompetency,\n} from '../../services/competency';\nimport { Translate } from '@singletons';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreError } from '@classes/errors/error';\nimport { AddonCompetencyPlanCompetenciesSource } from '@addons/competency/classes/competency-plan-competencies-source';\nimport { AddonCompetencyCourseCompetenciesSource } from '@addons/competency/classes/competency-course-competencies-source';\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\n\n/**\n * Page that displays the list of competencies of a learning plan.\n */\n@Component({\n    selector: 'page-addon-competency-competencies',\n    templateUrl: 'competencies.html',\n})\nexport class AddonCompetencyCompetenciesPage implements AfterViewInit, OnDestroy {\n\n    @ViewChild(CoreSplitViewComponent) splitView!: CoreSplitViewComponent;\n\n    competencies: CoreListItemsManager<\n        AddonCompetencyDataForPlanPageCompetency | AddonCompetencyDataForCourseCompetenciesPageCompetency,\n        AddonCompetencyPlanCompetenciesSource | AddonCompetencyCourseCompetenciesSource\n    >;\n\n    title = '';\n\n    constructor() {\n        const planId = CoreNavigator.getRouteNumberParam('planId');\n\n        if (!planId) {\n            const courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            const userId = CoreNavigator.getRouteNumberParam('userId');\n            const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(\n                AddonCompetencyCourseCompetenciesSource,\n                [courseId, userId],\n            );\n\n            this.competencies = new CoreListItemsManager(source, AddonCompetencyCompetenciesPage);\n\n            return;\n        }\n\n        const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(AddonCompetencyPlanCompetenciesSource, [planId]);\n\n        this.competencies = new CoreListItemsManager(source, AddonCompetencyCompetenciesPage);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngAfterViewInit(): Promise<void> {\n        await this.fetchCompetencies();\n\n        this.competencies.start(this.splitView);\n    }\n\n    /**\n     * Fetches the competencies and updates the view.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchCompetencies(): Promise<void> {\n        try {\n            const source = this.competencies.getSource();\n\n            await this.competencies.load();\n\n            if (source instanceof AddonCompetencyPlanCompetenciesSource) {\n                if (!source.plan || source.plan && source.plan.competencycount <= 0) {\n                    throw new CoreError(Translate.instant('addon.competency.errornocompetenciesfound'));\n                }\n\n                this.title = source.plan.plan.name;\n            } else {\n                this.title = Translate.instant('addon.competency.coursecompetencies');\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting competencies data.');\n        }\n    }\n\n    /**\n     * Refreshes the competencies.\n     *\n     * @param refresher Refresher.\n     */\n    async refreshCompetencies(refresher?: IonRefresher): Promise<void> {\n        await this.competencies.getSource().invalidateCache();\n\n        this.competencies.getSource().setDirty(true);\n        this.fetchCompetencies().finally(() => {\n            refresher?.complete();\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.competencies.destroy();\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonCompetencyCompetencyPage } from './competency.page';\n\n@NgModule({\n    imports: [\n        CoreSharedModule,\n    ],\n    declarations: [\n        AddonCompetencyCompetencyPage,\n    ],\n})\nexport class AddonCompetencyCompetencyPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AddonCompetencyHelper } from '@addons/competency/services/competency-helper';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CoreCourseModuleSummary } from '@features/course/services/course';\nimport { CoreUserSummary } from '@features/user/services/user';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { Translate } from '@singletons';\nimport {\n    AddonCompetencyDataForUserCompetencySummaryWSResponse,\n    AddonCompetencyUserCompetencyPlan,\n    AddonCompetencyUserCompetency,\n    AddonCompetencyUserCompetencyCourse,\n    AddonCompetency,\n    AddonCompetencyDataForPlanPageCompetency,\n    AddonCompetencyDataForCourseCompetenciesPageCompetency,\n} from '@addons/competency/services/competency';\nimport { CoreNavigator } from '@services/navigator';\nimport { IonRefresher } from '@ionic/angular';\nimport { ContextLevel } from '@/core/constants';\nimport { CoreUtils } from '@services/utils/utils';\nimport { ADDON_COMPETENCY_SUMMARY_PAGE } from '@addons/competency/competency.module';\nimport { CoreSwipeNavigationItemsManager } from '@classes/items-management/swipe-navigation-items-manager';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { AddonCompetencyPlanCompetenciesSource } from '@addons/competency/classes/competency-plan-competencies-source';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { AddonCompetencyCourseCompetenciesSource } from '@addons/competency/classes/competency-course-competencies-source';\n\n/**\n * Page that displays the competency information.\n */\n@Component({\n    selector: 'page-addon-competency-competency',\n    templateUrl: 'competency.html',\n})\nexport class AddonCompetencyCompetencyPage implements OnInit, OnDestroy {\n\n    competencyLoaded = false;\n    competencies!: AddonCompetencyCompetenciesSwipeManager;\n    planStatus?: number;\n    coursemodules?: CoreCourseModuleSummary[];\n    user?: CoreUserSummary;\n    competency?: AddonCompetencyDataForUserCompetencySummaryWSResponse;\n    userCompetency?: AddonCompetencyUserCompetencyPlan | AddonCompetencyUserCompetency | AddonCompetencyUserCompetencyCourse;\n    contextLevel?: string;\n    contextInstanceId?: number;\n\n    protected fetchSuccess = false;\n\n    constructor() {\n        try {\n            const planId = CoreNavigator.getRouteNumberParam('planId');\n\n            if (!planId) {\n                const courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n                const userId = CoreNavigator.getRouteNumberParam('userId');\n                const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(\n                    AddonCompetencyCourseCompetenciesSource,\n                    [courseId, userId],\n                );\n\n                this.competencies = new AddonCompetencyCompetenciesSwipeManager(source);\n\n                return;\n            }\n\n            const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(AddonCompetencyPlanCompetenciesSource, [planId]);\n\n            this.competencies = new AddonCompetencyCompetenciesSwipeManager(source);\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n    }\n\n    get competencyFrameworkUrl(): string | undefined {\n        if (!this.competency) {\n            return;\n        }\n\n        const { pluginbaseurl, framework, pagecontextid } = this.competency.competency.comppath;\n\n        return `${pluginbaseurl}/competencies.php?competencyframeworkid=${framework.id}&pagecontextid=${pagecontextid}`;\n    }\n\n    get courseId(): number | undefined {\n        const source = this.competencies.getSource();\n\n        if (!(source instanceof AddonCompetencyCourseCompetenciesSource)) {\n            return;\n        }\n\n        return source.COURSE_ID;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        try {\n            const source = this.competencies.getSource();\n\n            await source.reload();\n            await this.competencies.start();\n            await this.fetchCompetency();\n        } finally {\n            this.competencyLoaded = true;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.competencies.destroy();\n    }\n\n    /**\n     * Fetches the competency and updates the view.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchCompetency(): Promise<void> {\n        try {\n            const source = this.competencies.getSource();\n\n            this.competency = source instanceof AddonCompetencyPlanCompetenciesSource\n                ? await this.fetchCompetencySummaryFromPlan(source)\n                : await this.fetchCompetencySummaryFromCourse(source);\n\n            if (this.competency.user.id != CoreSites.getCurrentSiteUserId()) {\n                // Get the user profile from the returned object.\n                this.user = this.competency.user;\n            }\n\n            this.competency.evidence.forEach((evidence) => {\n                if (evidence.descidentifier) {\n                    const key = 'addon.competency.' + evidence.descidentifier;\n                    evidence.description = Translate.instant(key, { $a: evidence.desca });\n                }\n            });\n\n            if (!this.fetchSuccess) {\n                this.fetchSuccess = true;\n                const name = this.competency.competency.competency.shortname;\n\n                if (source instanceof AddonCompetencyPlanCompetenciesSource) {\n                    this.planStatus && await CoreUtils.ignoreErrors(\n                        AddonCompetency.logCompetencyInPlanView(\n                            source.PLAN_ID,\n                            this.requireCompetencyId(),\n                            this.planStatus,\n                            name,\n                            source.user?.id,\n                        ),\n                    );\n                } else {\n                    await CoreUtils.ignoreErrors(\n                        AddonCompetency.logCompetencyInCourseView(\n                            source.COURSE_ID,\n                            this.requireCompetencyId(),\n                            name,\n                            source.USER_ID,\n                        ),\n                    );\n                }\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting competency data.');\n        }\n    }\n\n    /**\n     * Refreshes the competency.\n     *\n     * @param refresher Refresher.\n     */\n    async refreshCompetency(refresher: IonRefresher): Promise<void> {\n        const source = this.competencies.getSource();\n\n        await CoreUtils.ignoreErrors(\n            source instanceof AddonCompetencyPlanCompetenciesSource\n                ? AddonCompetency.invalidateCompetencyInPlan(source.PLAN_ID, this.requireCompetencyId())\n                : AddonCompetency.invalidateCompetencyInCourse(source.COURSE_ID, this.requireCompetencyId(), source.USER_ID),\n        );\n\n        this.fetchCompetency().finally(() => {\n            refresher?.complete();\n        });\n    }\n\n    /**\n     * Opens the summary of a competency.\n     *\n     * @param competencyId\n     */\n    openCompetencySummary(competencyId: number): void {\n        CoreNavigator.navigate(\n            `../${competencyId}/${ADDON_COMPETENCY_SUMMARY_PAGE}`,\n            {\n                params: { contextLevel: this.contextLevel, contextInstanceId: this.contextInstanceId },\n            },\n        );\n    }\n\n    /**\n     * Get competency id or fail.\n     *\n     * @returns Competency id.\n     */\n    private requireCompetencyId(): number {\n        const selectedItem = this.competencies.getSelectedItem();\n\n        if (!selectedItem) {\n            throw new Error('Failed to get competency id from selected item');\n        }\n\n        return selectedItem.competency.id;\n    }\n\n    /**\n     * Fetch competency summary from a plan source.\n     *\n     * @param source Plan competencies source.\n     * @returns Competency summary.\n     */\n    private async fetchCompetencySummaryFromPlan(\n        source: AddonCompetencyPlanCompetenciesSource,\n    ): Promise<AddonCompetencyDataForUserCompetencySummaryWSResponse> {\n        const competency = await AddonCompetency.getCompetencyInPlan(\n            source.PLAN_ID,\n            this.requireCompetencyId(),\n        );\n\n        this.planStatus = competency.plan.status;\n\n        if (competency.usercompetencysummary.usercompetency) {\n            competency.usercompetencysummary.usercompetency.statusname =\n                AddonCompetencyHelper.getCompetencyStatusName(competency.usercompetencysummary.usercompetency.status);\n        }\n\n        this.contextLevel = ContextLevel.USER;\n        this.contextInstanceId = source.user?.id || competency.usercompetencysummary.user.id;\n        this.userCompetency = competency.usercompetencysummary.usercompetencyplan\n            || competency.usercompetencysummary.usercompetency;\n\n        return competency.usercompetencysummary;\n    }\n\n    /**\n     * Fetch competency summary from a course source.\n     *\n     * @param source Course competencies source.\n     * @returns Competency summary.\n     */\n    private async fetchCompetencySummaryFromCourse(\n        source: AddonCompetencyCourseCompetenciesSource,\n    ): Promise<AddonCompetencyDataForUserCompetencySummaryWSResponse> {\n        const competency = await AddonCompetency.getCompetencyInCourse(\n            source.COURSE_ID,\n            this.requireCompetencyId(),\n            source.USER_ID,\n        );\n\n        this.coursemodules = competency.coursemodules;\n\n        this.contextLevel = ContextLevel.COURSE;\n        this.contextInstanceId = source.COURSE_ID;\n        this.userCompetency = competency.usercompetencysummary.usercompetencycourse\n            || competency.usercompetencysummary.usercompetency;\n\n        return competency.usercompetencysummary;\n    }\n\n}\n\n/**\n * Helper to manage swiping within a collection of competencies.\n */\nclass AddonCompetencyCompetenciesSwipeManager\n    extends CoreSwipeNavigationItemsManager<\n    AddonCompetencyDataForPlanPageCompetency | AddonCompetencyDataForCourseCompetenciesPageCompetency,\n    AddonCompetencyPlanCompetenciesSource | AddonCompetencyCourseCompetenciesSource\n    > {\n\n    /**\n     * @inheritdoc\n     */\n    protected getSelectedItemPathFromRoute(route: ActivatedRouteSnapshot): string | null {\n        return route.params.competencyId;\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonCompetencyCompetencySummaryPage } from './competencysummary.page';\n\n@NgModule({\n    imports: [\n        CoreSharedModule,\n    ],\n    declarations: [\n        AddonCompetencyCompetencySummaryPage,\n    ],\n})\nexport class AddonCompetencyCompetencySummaryPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { ContextLevel } from '@/core/constants';\nimport { AddonCompetencySummary, AddonCompetency } from '@addons/competency/services/competency';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { ADDON_COMPETENCY_SUMMARY_PAGE } from '@addons/competency/competency.module';\n\n/**\n * Page that displays the competency summary.\n */\n@Component({\n    selector: 'page-addon-competency-competency-summary',\n    templateUrl: 'competencysummary.html',\n})\nexport class AddonCompetencyCompetencySummaryPage implements OnInit {\n\n    competencyLoaded = false;\n    competencyId!: number;\n    competency?: AddonCompetencySummary;\n    contextLevel?: ContextLevel;\n    contextInstanceId?: number;\n\n    protected fetchSuccess = false; // Whether a fetch was finished successfully.\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        try {\n            this.competencyId = CoreNavigator.getRequiredRouteNumberParam('competencyId');\n            this.contextLevel = CoreNavigator.getRouteParam<ContextLevel>('contextLevel');\n            this.contextInstanceId = CoreNavigator.getRouteNumberParam('contextInstanceId');\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        try {\n            await this.fetchCompetency();\n        } finally {\n            this.competencyLoaded = true;\n        }\n    }\n\n    /**\n     * Fetches the competency summary and updates the view.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchCompetency(): Promise<void> {\n        try {\n            const result = await AddonCompetency.getCompetencySummary(this.competencyId);\n            if (!this.contextLevel || this.contextInstanceId === undefined) {\n                // Context not specified, use user context.\n                this.contextLevel = ContextLevel.USER;\n                this.contextInstanceId = result.usercompetency?.userid;\n            }\n\n            this.competency = result.competency;\n\n            if (!this.fetchSuccess) {\n                this.fetchSuccess = true;\n                CoreUtils.ignoreErrors(AddonCompetency.logCompetencyView(this.competencyId, this.competency.competency.shortname));\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting competency summary data.');\n        }\n    }\n\n    /**\n     * Refreshes the competency summary.\n     *\n     * @param refresher Refresher.\n     */\n    refreshCompetency(refresher: IonRefresher): void {\n        AddonCompetency.invalidateCompetencySummary(this.competencyId).finally(() => {\n            this.fetchCompetency().finally(() => {\n                refresher?.complete();\n            });\n        });\n    }\n\n    /**\n     * Opens the summary of a competency.\n     *\n     * @param competencyId\n     */\n    openCompetencySummary(competencyId: number): void {\n        CoreNavigator.navigate(\n            `../../${competencyId}/${ADDON_COMPETENCY_SUMMARY_PAGE}`,\n            {\n                params: { contextLevel: this.contextLevel, contextInstanceId: this.contextInstanceId },\n            },\n        );\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { ActivatedRoute, ActivatedRouteSnapshot, UrlSegment } from '@angular/router';\n\nimport { CoreNavigator } from '@services/navigator';\n\nimport { CoreRoutedItemsManager } from './routed-items-manager';\nimport { CoreRoutedItemsManagerSource } from './routed-items-manager-source';\n\n/**\n * Helper class to manage the state and routing of a swipeable page.\n */\nexport class CoreSwipeNavigationItemsManager<\n    Item = unknown,\n    Source extends CoreRoutedItemsManagerSource<Item> = CoreRoutedItemsManagerSource<Item>\n>\n    extends CoreRoutedItemsManager<Item, Source> {\n\n    /**\n     * Process page started operations.\n     */\n    async start(): Promise<void> {\n        this.updateSelectedItem();\n    }\n\n    /**\n     * Navigate to the next item.\n     */\n    async navigateToNextItem(): Promise<void> {\n        await this.navigateToItemBy(1, 'forward');\n    }\n\n    /**\n     * Navigate to the previous item.\n     */\n    async navigateToPreviousItem(): Promise<void> {\n        await this.navigateToItemBy(-1, 'back');\n    }\n\n    /**\n     * Has a next item.\n     */\n    async hasNextItem(): Promise<boolean> {\n        const item = await this.getItemBy(1);\n\n        return !!item;\n    }\n\n    /**\n     * Has a previous item.\n     */\n    async hasPreviousItem(): Promise<boolean> {\n        const item = await this.getItemBy(-1);\n\n        return !!item;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected getCurrentPageRoute(): ActivatedRoute | null {\n        return CoreNavigator.getCurrentRoute();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected getSelectedItemPathFromRoute(route: ActivatedRouteSnapshot): string | null {\n        const segments: UrlSegment[] = [];\n\n        while (route) {\n            segments.push(...route.url);\n\n            if (!route.firstChild) {\n                break;\n            }\n\n            route = route.firstChild;\n        }\n\n        return segments.map(segment => segment.path).join('/').replace(/\\/+/, '/').trim() || null;\n    }\n\n    /**\n     * Navigate to an item by an offset.\n     *\n     * @param delta Index offset.\n     * @param animationDirection Animation direction.\n     */\n    protected async navigateToItemBy(delta: number, animationDirection: 'forward' | 'back'): Promise<void> {\n        const item = await this.getItemBy(delta);\n\n        if (!item) {\n            return;\n        }\n\n        await this.navigateToItem(item, { animationDirection, replace: true });\n    }\n\n    /**\n     * Get item by an offset.\n     *\n     * @param delta Index offset.\n     */\n    protected async getItemBy(delta: number): Promise<Item | null> {\n        const items = this.getSource().getItems();\n        const selectedIndex = (this.selectedItem && items?.indexOf(this.selectedItem)) ?? -1;\n\n        if (selectedIndex === -1 || items === null) {\n            return null;\n        }\n\n        const deltaStep = delta > 0 ? 1 : -1;\n        let nextIndex = selectedIndex;\n        let deltaMoved = 0;\n\n        while (deltaMoved !== delta) {\n            nextIndex += deltaStep;\n\n            if (nextIndex < 0 || nextIndex >= items.length) {\n                break;\n            }\n\n            if (this.skipItemInSwipe(items[nextIndex])) {\n                continue;\n            }\n\n            deltaMoved += deltaStep;\n        }\n\n        if (deltaMoved === delta) {\n            return items[nextIndex];\n        }\n\n        if (!this.getSource().isCompleted()) {\n            await this.getSource().load();\n\n            return this.getItemBy(delta);\n        }\n\n        return null;\n    }\n\n    /**\n     * Check if an item should be skipped during swipe navigation.\n     *\n     * @param item Item.\n     * @returns Whether to skip this item during swipe navigation.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    protected skipItemInSwipe(item: Item): boolean {\n        return false;\n    }\n\n}\n"],"sourceRoot":"webpack:///"}