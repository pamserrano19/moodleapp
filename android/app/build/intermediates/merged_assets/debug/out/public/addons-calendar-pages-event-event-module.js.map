{"version":3,"sources":["./src/addons/calendar/pages/event/event.html","./src/addons/calendar/pages/event/event.module.ts","./src/addons/calendar/pages/event/event.page.ts","./src/addons/calendar/pages/event/event.scss"],"names":[],"mappings":"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","file":"addons-calendar-pages-event-event-module.js","sourcesContent":["export default \"<ion-header collapsible>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1 *ngIf=\\\"event\\\">\\r\\n                <core-format-text [text]=\\\"event.name\\\" [contextLevel]=\\\"event.contextLevel\\\" [contextInstanceId]=\\\"event.contextInstanceId\\\">\\r\\n                </core-format-text>\\r\\n            </h1>\\r\\n        </ion-title>\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <core-context-menu>\\r\\n                <core-context-menu-item [hidden]=\\\"!eventLoaded || (!hasOffline && event && !event.deleted) || !isOnline\\\" [priority]=\\\"400\\\"\\r\\n                    [content]=\\\"'core.settings.synchronizenow' | translate\\\" (action)=\\\"doRefresh(undefined, $event, true)\\\"\\r\\n                    [iconAction]=\\\"syncIcon\\\" [closeOnClick]=\\\"false\\\">\\r\\n                </core-context-menu-item>\\r\\n                <core-context-menu-item [hidden]=\\\"!event || !event.canedit || event.deleted || (!canEdit && event.id > 0)\\\" [priority]=\\\"300\\\"\\r\\n                    [content]=\\\"'core.edit' | translate\\\" (action)=\\\"openEdit()\\\" iconAction=\\\"fas-edit\\\">\\r\\n                </core-context-menu-item>\\r\\n                <core-context-menu-item [hidden]=\\\"!event || !event.candelete || event.deleted\\\" [priority]=\\\"200\\\"\\r\\n                    [content]=\\\"'core.delete' | translate\\\" (action)=\\\"deleteEvent()\\\" iconAction=\\\"fas-trash\\\"></core-context-menu-item>\\r\\n                <core-context-menu-item [hidden]=\\\"!event || !event.deleted\\\" [priority]=\\\"200\\\" [content]=\\\"'core.restore' | translate\\\"\\r\\n                    (action)=\\\"undoDelete()\\\" iconAction=\\\"fas-undo-alt\\\"></core-context-menu-item>\\r\\n            </core-context-menu>\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!eventLoaded\\\" (ionRefresh)=\\\"doRefresh($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n    <core-loading [hideUntil]=\\\"eventLoaded\\\">\\r\\n        <!-- There is data to be synchronized -->\\r\\n        <ion-card class=\\\"core-warning-card\\\" *ngIf=\\\"hasOffline || (event && event.deleted)\\\">\\r\\n            <ion-item>\\r\\n                <ion-icon name=\\\"fas-exclamation-triangle\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label>{{ 'core.hasdatatosync' | translate:{$a: 'addon.calendar.calendarevent' | translate} }}</ion-label>\\r\\n            </ion-item>\\r\\n        </ion-card>\\r\\n\\r\\n        <ion-list *ngIf=\\\"event\\\">\\r\\n            <ion-item class=\\\"ion-text-wrap addon-calendar-event\\\" collapsible [ngClass]=\\\"['addon-calendar-eventtype-'+event.eventtype]\\\">\\r\\n                <core-mod-icon *ngIf=\\\"event.moduleIcon\\\" [modicon]=\\\"event.moduleIcon\\\" [showAlt]=\\\"false\\\" [modname]=\\\"event.modulename\\\"\\r\\n                    [componentId]=\\\"event.instance\\\" slot=\\\"start\\\"></core-mod-icon>\\r\\n                <ion-icon *ngIf=\\\" event.eventIcon && !event.moduleIcon\\\" [name]=\\\"event.eventIcon\\\" aria-hidden=\\\"true\\\" slot=\\\"start\\\">\\r\\n                </ion-icon>\\r\\n                <ion-label>\\r\\n                    <!-- Add the icon title so accessibility tools read it. -->\\r\\n                    <span class=\\\"sr-only\\\">\\r\\n                        {{ 'addon.calendar.type' + event.formattedType | translate }}\\r\\n                        <span class=\\\"sr-only\\\" *ngIf=\\\"event.moduleIcon && event.iconTitle\\\">{{ event.iconTitle }}</span>\\r\\n                    </span>\\r\\n                    <h1>\\r\\n                        <core-format-text [text]=\\\"event.name\\\" [contextLevel]=\\\"event.contextLevel\\\"\\r\\n                            [contextInstanceId]=\\\"event.contextInstanceId\\\">\\r\\n                        </core-format-text>\\r\\n                    </h1>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'addon.calendar.when' | translate }}</h2>\\r\\n                    <core-format-text [text]=\\\"event.formattedtime\\\" [contextLevel]=\\\"event.contextLevel\\\"\\r\\n                        [contextInstanceId]=\\\"event.contextInstanceId\\\"></core-format-text>\\r\\n                </ion-label>\\r\\n                <ion-note slot=\\\"end\\\" *ngIf=\\\"event.deleted\\\">\\r\\n                    <ion-icon name=\\\"fas-trash\\\" aria-hidden=\\\"true\\\"></ion-icon> {{ 'core.deletedoffline' | translate }}\\r\\n                </ion-note>\\r\\n            </ion-item>\\r\\n            <ion-item>\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'addon.calendar.eventtype' | translate }}</h2>\\r\\n                    <p>{{ 'addon.calendar.type' + event.formattedType | translate }}</p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"courseName\\\" [href]=\\\"courseUrl\\\" core-link capture=\\\"true\\\">\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'core.course' | translate}}</h2>\\r\\n                    <p>\\r\\n                        <core-format-text [text]=\\\"courseName\\\" contextLevel=\\\"course\\\" [contextInstanceId]=\\\"courseId\\\">\\r\\n                        </core-format-text>\\r\\n                    </p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap core-groupname\\\" *ngIf=\\\"groupName\\\">\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'core.group' | translate}}</h2>\\r\\n                    <p>{{ groupName }}</p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"categoryPath\\\">\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'core.category' | translate}}</h2>\\r\\n                    <p>\\r\\n                        <core-format-text [text]=\\\"categoryPath\\\" contextLevel=\\\"coursecat\\\" [contextInstanceId]=\\\"event.categoryid\\\">\\r\\n                        </core-format-text>\\r\\n                    </p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"event.description\\\">\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'core.description' | translate}}</h2>\\r\\n                    <p>\\r\\n                        <core-format-text [text]=\\\"event.description\\\" [contextLevel]=\\\"event.contextLevel\\\"\\r\\n                            [contextInstanceId]=\\\"event.contextInstanceId\\\"></core-format-text>\\r\\n                    </p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"event.location\\\">\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'core.location' | translate}}</h2>\\r\\n                    <p>\\r\\n                        <a [href]=\\\"event.encodedLocation\\\" core-link auto-login=\\\"no\\\">\\r\\n                            <core-format-text [text]=\\\"event.location\\\" [contextLevel]=\\\"event.contextLevel\\\"\\r\\n                                [contextInstanceId]=\\\"event.contextInstanceId\\\"></core-format-text>\\r\\n                        </a>\\r\\n                    </p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item *ngIf=\\\"moduleUrl\\\">\\r\\n                <ion-label>\\r\\n                    <ion-button expand=\\\"block\\\" [href]=\\\"moduleUrl\\\" core-link capture=\\\"true\\\">\\r\\n                        {{ 'addon.calendar.gotoactivity' | translate }}\\r\\n                    </ion-button>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n        </ion-list>\\r\\n\\r\\n        <ion-card *ngIf=\\\"notificationsEnabled && event\\\">\\r\\n            <ion-item>\\r\\n                <ion-label>\\r\\n                    <h2>{{ 'addon.calendar.reminders' | translate }}</h2>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ng-container *ngFor=\\\"let reminder of reminders\\\">\\r\\n                <ion-item *ngIf=\\\"reminder.timestamp > 0\\\" class=\\\"ion-text-wrap\\\" [class.item-dimmed]=\\\"reminder.timestamp <= currentTime\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ reminder.label }}</p>\\r\\n                        <p *ngIf=\\\"reminder.sublabel\\\">{{ reminder.sublabel }}</p>\\r\\n                    </ion-label>\\r\\n                    <ion-button fill=\\\"clear\\\" (click)=\\\"cancelNotification(reminder.id, $event)\\\" [attr.aria-label]=\\\"'core.delete' | translate\\\"\\r\\n                        slot=\\\"end\\\">\\r\\n                        <ion-icon name=\\\"fas-trash\\\" color=\\\"danger\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                    </ion-button>\\r\\n                </ion-item>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container *ngIf=\\\"event.timestart > currentTime\\\">\\r\\n                <ion-item>\\r\\n                    <ion-label>\\r\\n                        <ion-button expand=\\\"block\\\" (click)=\\\"addReminder()\\\">\\r\\n                            {{ 'addon.calendar.setnewreminder' | translate }}\\r\\n                        </ion-button>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n            </ng-container>\\r\\n        </ion-card>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\nimport { AddonCalendarComponentsModule } from '../../components/components.module';\r\n\r\nimport { AddonCalendarEventPage } from './event.page';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AddonCalendarEventPage,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n        AddonCalendarComponentsModule,\r\n    ],\r\n    declarations: [\r\n        AddonCalendarEventPage,\r\n    ],\r\n    exports: [RouterModule],\r\n})\r\nexport class AddonCalendarEventPageModule {}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\nimport { AlertOptions } from '@ionic/core';\nimport {\n    AddonCalendar,\n    AddonCalendarEventToDisplay,\n    AddonCalendarProvider,\n} from '../../services/calendar';\nimport { AddonCalendarEventReminder, AddonCalendarHelper } from '../../services/calendar-helper';\nimport { AddonCalendarOffline } from '../../services/calendar-offline';\nimport { AddonCalendarSync, AddonCalendarSyncEvents, AddonCalendarSyncProvider } from '../../services/calendar-sync';\nimport { CoreApp } from '@services/app';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreSites } from '@services/sites';\nimport { CoreLocalNotifications } from '@services/local-notifications';\nimport { CoreCourse } from '@features/course/services/course';\nimport { CoreTimeUtils } from '@services/utils/time';\nimport { CoreGroups } from '@services/groups';\nimport { Network, NgZone, Translate } from '@singletons';\nimport { Subscription } from 'rxjs';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreUtils } from '@services/utils/utils';\nimport { ActivatedRoute } from '@angular/router';\nimport { CoreConstants } from '@/core/constants';\nimport { AddonCalendarReminderTimeModalComponent } from '@addons/calendar/components/reminder-time-modal/reminder-time-modal';\n\n/**\n * Page that displays a single calendar event.\n */\n@Component({\n    selector: 'page-addon-calendar-event',\n    templateUrl: 'event.html',\n    styleUrls: ['../../calendar-common.scss', 'event.scss'],\n})\nexport class AddonCalendarEventPage implements OnInit, OnDestroy {\n\n    protected eventId!: number;\n    protected siteHomeId: number;\n    protected newEventObserver: CoreEventObserver;\n    protected editEventObserver: CoreEventObserver;\n    protected syncObserver: CoreEventObserver;\n    protected manualSyncObserver: CoreEventObserver;\n    protected onlineObserver: Subscription;\n    protected defaultTimeChangedObserver: CoreEventObserver;\n    protected currentSiteId: string;\n    protected updateCurrentTime?: number;\n\n    eventLoaded = false;\n    event?: AddonCalendarEventToDisplay;\n    courseId?: number;\n    courseName = '';\n    groupName?: string;\n    courseUrl = '';\n    notificationsEnabled = false;\n    moduleUrl = '';\n    categoryPath = '';\n    currentTime = -1;\n    reminders: AddonCalendarEventReminder[] = [];\n    canEdit = false;\n    hasOffline = false;\n    isOnline = false;\n    syncIcon = CoreConstants.ICON_LOADING; // Sync icon.\n\n    constructor(\n        protected route: ActivatedRoute,\n    ) {\n        this.notificationsEnabled = CoreLocalNotifications.isAvailable();\n        this.siteHomeId = CoreSites.getCurrentSiteHomeId();\n        this.currentSiteId = CoreSites.getCurrentSiteId();\n\n        // Check if site supports editing. No need to check allowed types, event.canedit already does it.\n        this.canEdit = AddonCalendar.canEditEventsInSite();\n\n        // Listen for event edited. If current event is edited, reload the data.\n        this.editEventObserver = CoreEvents.on(AddonCalendarProvider.EDIT_EVENT_EVENT, (data) => {\n            if (data && data.eventId === this.eventId) {\n                this.eventLoaded = false;\n                this.refreshEvent(true, false);\n            }\n        }, this.currentSiteId);\n\n        // Listen for event created. If user edits the data of a new offline event or it's sent to server, this event is triggered.\n        this.newEventObserver = CoreEvents.on(AddonCalendarProvider.NEW_EVENT_EVENT, (data) => {\n            if (this.eventId < 0 && data && (data.eventId === this.eventId || data.oldEventId === this.eventId)) {\n                this.eventId = data.eventId;\n                this.eventLoaded = false;\n                this.refreshEvent(true, false);\n            }\n        }, this.currentSiteId);\n\n        // Refresh data if this calendar event is synchronized automatically.\n        this.syncObserver = CoreEvents.on(\n            AddonCalendarSyncProvider.AUTO_SYNCED,\n            this.checkSyncResult.bind(this, false),\n            this.currentSiteId,\n        );\n\n        // Refresh data if calendar events are synchronized manually but not by this page.\n        this.manualSyncObserver = CoreEvents.on(\n            AddonCalendarSyncProvider.MANUAL_SYNCED,\n            this.checkSyncResult.bind(this, true),\n            this.currentSiteId,\n        );\n\n        // Refresh online status when changes.\n        this.onlineObserver = Network.onChange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            NgZone.run(() => {\n                this.isOnline = CoreApp.isOnline();\n            });\n        });\n\n        // Reload reminders if default notification time changes.\n        this.defaultTimeChangedObserver = CoreEvents.on(AddonCalendarProvider.DEFAULT_NOTIFICATION_TIME_CHANGED, () => {\n            this.loadReminders();\n        }, this.currentSiteId);\n\n        // Set and update current time. Use a 5 seconds error margin.\n        this.currentTime = CoreTimeUtils.timestamp();\n        this.updateCurrentTime = window.setInterval(() => {\n            this.currentTime = CoreTimeUtils.timestamp();\n        }, 5000);\n    }\n\n    /**\n     * Load reminders.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async loadReminders(): Promise<void> {\n        if (!this.notificationsEnabled || !this.event) {\n            return;\n        }\n\n        const reminders = await AddonCalendar.getEventReminders(this.eventId, this.currentSiteId);\n        this.reminders = await AddonCalendarHelper.formatReminders(reminders, this.event.timestart, this.currentSiteId);\n    }\n\n    /**\n     * View loaded.\n     */\n    ngOnInit(): void {\n        try {\n            this.eventId = CoreNavigator.getRequiredRouteNumberParam('id');\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        this.syncIcon = CoreConstants.ICON_LOADING;\n\n        this.fetchEvent();\n    }\n\n    /**\n     * Fetches the event and updates the view.\n     *\n     * @param sync Whether it should try to synchronize offline events.\n     * @param showErrors Whether to show sync errors to the user.\n     * @return Promise resolved when done.\n     */\n    async fetchEvent(sync = false, showErrors = false): Promise<void> {\n        this.isOnline = CoreApp.isOnline();\n\n        if (sync) {\n            const deleted = await this.syncEvents(showErrors);\n\n            if (deleted) {\n                return;\n            }\n        }\n\n        try {\n            // Get the event data.\n            if (this.eventId >= 0) {\n                const event = await AddonCalendar.getEventById(this.eventId);\n                this.event = await AddonCalendarHelper.formatEventData(event);\n            }\n\n            try {\n                const offlineEvent = AddonCalendarHelper.formatOfflineEventData(\n                    await AddonCalendarOffline.getEvent(this.eventId),\n                );\n\n                // There is offline data, apply it.\n                this.hasOffline = true;\n                this.event = Object.assign(this.event || {}, offlineEvent);\n            } catch {\n                // No offline data.\n                this.hasOffline = false;\n\n                if (this.eventId < 0) {\n                    // It's an offline event, but it wasn't found. Shouldn't happen.\n                    CoreDomUtils.showErrorModal('Event not found.');\n                    CoreNavigator.back();\n\n                    return;\n                }\n            }\n\n            if (!this.event) {\n                return; // At this point we should always have the event, adding this check to avoid TS errors.\n            }\n\n            // Load reminders.\n            this.loadReminders();\n\n            // Reset some of the calculated data.\n            this.categoryPath = '';\n            this.courseName = '';\n            this.courseUrl = '';\n            this.moduleUrl = '';\n\n            if (this.event.moduleIcon) {\n                // It's a module event, translate the module name to the current language.\n                const name = CoreCourse.translateModuleName(this.event.modulename || '');\n                if (name.indexOf('core.mod_') === -1) {\n                    this.event.modulename = name;\n                }\n\n                // Get the module URL.\n                this.moduleUrl = this.event.url || '';\n            }\n\n            const promises: Promise<void>[] = [];\n            const event = this.event;\n\n            const courseId = this.event.courseid;\n            if (courseId != this.siteHomeId) {\n                // If the event belongs to a course, get the course name and the URL to view it.\n                if (this.event.course) {\n                    this.courseId = this.event.course.id;\n                    this.courseName = this.event.course.fullname;\n                    this.courseUrl = this.event.course.viewurl;\n                }\n            }\n\n            // If it's a group event, get the name of the group.\n            if (courseId && this.event.groupid) {\n                promises.push(this.loadGroupName(this.event, courseId));\n            }\n\n            if (this.event.iscategoryevent && this.event.category) {\n                this.categoryPath = this.event.category.nestedname;\n            }\n\n            if (this.event.location) {\n                // Build a link to open the address in maps.\n                this.event.location = CoreTextUtils.decodeHTML(this.event.location);\n                this.event.encodedLocation = CoreTextUtils.buildAddressURL(this.event.location);\n            }\n\n            // Check if event was deleted in offine.\n            promises.push(AddonCalendarOffline.isEventDeleted(this.eventId).then((deleted) => {\n                event.deleted = deleted;\n\n                return;\n            }));\n\n            // Re-calculate the formatted time so it uses the device date.\n            promises.push(AddonCalendar.getCalendarTimeFormat().then(async (timeFormat) => {\n                event.formattedtime = await AddonCalendar.formatEventTime(event, timeFormat);\n\n                return;\n            }));\n\n            await Promise.all(promises);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.calendar.errorloadevent', true);\n        }\n\n        this.eventLoaded = true;\n        this.syncIcon = CoreConstants.ICON_SYNC;\n    }\n\n    /**\n     * Sync offline events.\n     *\n     * @param showErrors Whether to show sync errors to the user.\n     * @return Promise resolved with boolean: whether event was deleted on sync.\n     */\n    protected async syncEvents(showErrors = false): Promise<boolean> {\n        let deleted = false;\n\n        // Try to synchronize offline events.\n        try {\n            const result = await AddonCalendarSync.syncEvents();\n            if (result.warnings && result.warnings.length) {\n                CoreDomUtils.showErrorModal(result.warnings[0]);\n            }\n\n            if (result.deleted && result.deleted.indexOf(this.eventId) != -1) {\n                // This event was deleted during the sync.\n                deleted = true;\n            } else if (this.eventId < 0 && result.offlineIdMap[this.eventId]) {\n                // Event was created, use the online ID.\n                this.eventId = result.offlineIdMap[this.eventId];\n            }\n\n            if (result.updated) {\n                // Trigger a manual sync event.\n                result.source = 'event';\n\n                CoreEvents.trigger(\n                    AddonCalendarSyncProvider.MANUAL_SYNCED,\n                    result,\n                    this.currentSiteId,\n                );\n            }\n        } catch (error) {\n            if (showErrors) {\n                CoreDomUtils.showErrorModalDefault(error, 'core.errorsync', true);\n            }\n        }\n\n        return deleted;\n    }\n\n    /**\n     * Load group name.\n     *\n     * @param event Event.\n     * @param courseId Course ID.\n     * @return Promise resolved when done.\n     */\n    protected async loadGroupName(event: AddonCalendarEventToDisplay, courseId: number): Promise<void> {\n        try {\n            const groups = await CoreGroups.getUserGroupsInCourse(courseId);\n\n            const group = groups.find((group) => group.id == event.groupid);\n            this.groupName = group ? group.name : '';\n\n        } catch {\n            // Error getting groups, just don't show the group name.\n            this.groupName = '';\n        }\n    }\n\n    /**\n     * Add a reminder for this event.\n     */\n    async addReminder(): Promise<void> {\n        if (!this.event || !this.event.id) {\n            return;\n        }\n\n        const reminderTime = await CoreDomUtils.openModal<number>({\n            component: AddonCalendarReminderTimeModalComponent,\n        });\n\n        if (reminderTime === undefined) {\n            // User canceled.\n            return;\n        }\n\n        await AddonCalendar.addEventReminder(this.event, reminderTime, this.currentSiteId);\n\n        await this.loadReminders();\n    }\n\n    /**\n     * Cancel the selected notification.\n     *\n     * @param id Reminder ID.\n     * @param e Click event.\n     */\n    async cancelNotification(id: number, e: Event): Promise<void> {\n        e.preventDefault();\n        e.stopPropagation();\n\n        try {\n            await CoreDomUtils.showDeleteConfirm();\n\n            const modal = await CoreDomUtils.showModalLoading('core.deleting', true);\n\n            try {\n                await AddonCalendar.deleteEventReminder(id);\n                await this.loadReminders();\n            } catch (error) {\n                CoreDomUtils.showErrorModalDefault(error, 'Error deleting reminder');\n            } finally {\n                modal.dismiss();\n            }\n        } catch {\n            // Ignore errors.\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @param done Function to call when done.\n     * @param showErrors Whether to show sync errors to the user.\n     * @return Promise resolved when done.\n     */\n    async doRefresh(refresher?: IonRefresher, done?: () => void, showErrors= false): Promise<void> {\n        if (!this.eventLoaded) {\n            return;\n        }\n\n        await this.refreshEvent(true, showErrors).finally(() => {\n            refresher?.complete();\n            done && done();\n        });\n    }\n\n    /**\n     * Refresh the event.\n     *\n     * @param sync Whether it should try to synchronize offline events.\n     * @param showErrors Whether to show sync errors to the user.\n     * @return Promise resolved when done.\n     */\n    async refreshEvent(sync = false, showErrors = false): Promise<void> {\n        this.syncIcon = CoreConstants.ICON_LOADING;\n\n        const promises: Promise<void>[] = [];\n\n        if (this.eventId > 0) {\n            promises.push(AddonCalendar.invalidateEvent(this.eventId));\n        }\n        promises.push(AddonCalendar.invalidateTimeFormat());\n\n        await CoreUtils.allPromisesIgnoringErrors(promises);\n\n        await this.fetchEvent(sync, showErrors);\n    }\n\n    /**\n     * Open the page to edit the event.\n     */\n    openEdit(): void {\n        CoreNavigator.navigateToSitePath(`/calendar/edit/${this.eventId}`);\n    }\n\n    /**\n     * Delete the event.\n     */\n    async deleteEvent(): Promise<void> {\n        if (!this.event) {\n            return;\n        }\n\n        const title = Translate.instant('addon.calendar.deleteevent');\n        const options: AlertOptions = {};\n        let message: string;\n\n        if (this.event.eventcount > 1) {\n            // It's a repeated event.\n            message = Translate.instant(\n                'addon.calendar.confirmeventseriesdelete',\n                { $a: { name: this.event.name, count: this.event.eventcount } },\n            );\n\n            options.inputs = [\n                {\n                    type: 'radio',\n                    name: 'deleteall',\n                    checked: true,\n                    value: false,\n                    label: Translate.instant('addon.calendar.deleteoneevent'),\n                },\n                {\n                    type: 'radio',\n                    name: 'deleteall',\n                    checked: false,\n                    value: true,\n                    label: Translate.instant('addon.calendar.deleteallevents'),\n                },\n            ];\n        } else {\n            // Not repeated, display a simple confirm.\n            message = Translate.instant('addon.calendar.confirmeventdelete', { $a: this.event.name });\n        }\n\n        let deleteAll = false;\n        try {\n            deleteAll = await CoreDomUtils.showConfirm(message, title, undefined, undefined, options);\n        } catch {\n\n            // User canceled.\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            let onlineEventDeleted = false;\n            if (this.event.id < 0) {\n                await AddonCalendarOffline.deleteEvent(this.event.id);\n            } else {\n                onlineEventDeleted = await AddonCalendar.deleteEvent(this.event.id, this.event.name, deleteAll);\n            }\n\n            if (onlineEventDeleted) {\n                // Event deleted, invalidate right days & months.\n                try {\n                    await AddonCalendarHelper.refreshAfterChangeEvent(this.event, deleteAll ? this.event.eventcount : 1);\n                } catch {\n                    // Ignore errors.\n                }\n            }\n\n            // Trigger an event.\n            if (this.event.id < 0) {\n                CoreEvents.trigger(AddonCalendarProvider.NEW_EVENT_DISCARDED_EVENT, {}, CoreSites.getCurrentSiteId());\n            } else {\n                CoreEvents.trigger(AddonCalendarProvider.DELETED_EVENT_EVENT, {\n                    eventId: this.eventId,\n                    sent: onlineEventDeleted,\n                }, CoreSites.getCurrentSiteId());\n            }\n\n            if (onlineEventDeleted || this.event.id < 0) {\n                CoreDomUtils.showToast('addon.calendar.eventcalendareventdeleted', true, 3000);\n\n                // Event deleted, close the view.\n                CoreNavigator.back();\n            } else {\n                // Event deleted in offline, just mark it as deleted.\n                this.event.deleted = true;\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error deleting event.');\n        }\n\n        modal.dismiss();\n    }\n\n    /**\n     * Undo delete the event.\n     */\n    async undoDelete(): Promise<void> {\n        if (!this.event) {\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n\n            await AddonCalendarOffline.unmarkDeleted(this.event.id);\n\n            // Trigger an event.\n            CoreEvents.trigger(AddonCalendarProvider.UNDELETED_EVENT_EVENT, {\n                eventId: this.eventId,\n            }, CoreSites.getCurrentSiteId());\n\n            this.event.deleted = false;\n\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error undeleting event.');\n        }\n\n        modal.dismiss();\n    }\n\n    /**\n     * Check the result of an automatic sync or a manual sync not done by this page.\n     *\n     * @param isManual Whether it's a manual sync.\n     * @param data Sync result.\n     */\n    protected checkSyncResult(isManual: boolean, data: AddonCalendarSyncEvents): void {\n        if (!data) {\n            return;\n        }\n\n        if (data.deleted && data.deleted.indexOf(this.eventId) != -1) {\n            CoreDomUtils.showToast('addon.calendar.eventcalendareventdeleted', true, 3000);\n\n            // Event was deleted, close the view.\n            CoreNavigator.back();\n        } else if (data.events && (!isManual || data.source != 'event')) {\n            if (this.eventId < 0) {\n                if (data.offlineIdMap[this.eventId]) {\n                    // Event was created, use the online ID.\n                    this.eventId = data.offlineIdMap[this.eventId];\n\n                    this.eventLoaded = false;\n                    this.refreshEvent();\n                }\n            } else {\n                const event = data.events.find((ev) => ev.id == this.eventId);\n\n                if (event) {\n                    this.eventLoaded = false;\n                    this.refreshEvent();\n                }\n            }\n        }\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.editEventObserver.off();\n        this.syncObserver.off();\n        this.manualSyncObserver.off();\n        this.onlineObserver.unsubscribe();\n        this.newEventObserver.off();\n        clearInterval(this.updateCurrentTime);\n    }\n\n}\n","export default \":host ion-card ion-note {\\n  font-size: 1.6rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hZGRvbnMvY2FsZW5kYXIvcGFnZXMvZXZlbnQvZXZlbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDSTtFQUNJLGlCQUFBO0FBQVIiLCJmaWxlIjoic3JjL2FkZG9ucy9jYWxlbmRhci9wYWdlcy9ldmVudC9ldmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gICAgaW9uLWNhcmQgaW9uLW5vdGUge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgfVxyXG59XHJcbiJdfQ== */\";"],"sourceRoot":"webpack:///"}