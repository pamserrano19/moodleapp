{"version":3,"sources":["./src/core/features/login/pages/site/site.html","./src/core/features/settings/pages/site/site.html","./src/core/features/login/pages/site/site.module.ts","./src/core/features/login/pages/site/site.scss","./src/core/features/login/pages/site/site.ts","./src/core/features/settings/classes/settings-handlers-source.ts","./src/core/features/settings/pages/site/site.module.ts","./src/core/features/settings/pages/site/site.ts"],"names":[],"mappings":"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","file":"pages-site-site-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>\\r\\n            <h1>{{ 'core.login.connecttomoodle' | translate }}</h1>\\r\\n        </ion-title>\\r\\n\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"openSettings()\\\" [attr.aria-label]=\\\"'core.settings.appsettings' | translate\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"fas-cog\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n    <div class=\\\"list-item-limited-width\\\">\\r\\n        <div class=\\\"ion-text-center ion-padding ion-margin-bottom core-login-site-logo\\\" [class.hidden]=\\\"hasSites || enteredSiteUrl\\\">\\r\\n            <img src=\\\"assets/img/login_logo.png\\\" class=\\\"avatar-full login-logo\\\" role=\\\"presentation\\\" alt=\\\"\\\">\\r\\n        </div>\\r\\n        <form [formGroup]=\\\"siteForm\\\" (ngSubmit)=\\\"connect($event, siteForm.value.siteUrl)\\\" *ngIf=\\\"!fixedSites\\\" #siteFormEl>\\r\\n            <!-- Form to input the site URL if there are no fixed sites. -->\\r\\n            <ng-container *ngIf=\\\" siteSelector=='url'\\\">\\r\\n                <ion-item>\\r\\n                    <ion-label position=\\\" stacked\\\">\\r\\n                        <h2>{{ 'core.login.siteaddress' | translate }}</h2>\\r\\n                    </ion-label>\\r\\n                    <ion-input name=\\\"url\\\" type=\\\"url\\\" placeholder=\\\"{{ 'core.login.siteaddressplaceholder' | translate }}\\\"\\r\\n                        formControlName=\\\"siteUrl\\\" [core-auto-focus]=\\\"showKeyboard && !showScanQR\\\">\\r\\n                    </ion-input>\\r\\n                </ion-item>\\r\\n            </ng-container>\\r\\n            <ng-container *ngIf=\\\"siteSelector != 'url'\\\">\\r\\n                <ion-item>\\r\\n                    <ion-label position=\\\"stacked\\\">\\r\\n                        <h2>{{ 'core.login.siteaddress' | translate }}</h2>\\r\\n                    </ion-label>\\r\\n                    <ion-input name=\\\"url\\\" placeholder=\\\"{{ 'core.login.siteaddressplaceholder' | translate }}\\\" formControlName=\\\"siteUrl\\\"\\r\\n                        [core-auto-focus]=\\\"showKeyboard && !showScanQR\\\" (ionChange)=\\\"searchSite($event, siteForm.value.siteUrl)\\\">\\r\\n                    </ion-input>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-list [class.hidden]=\\\"!hasSites && !enteredSiteUrl\\\" class=\\\"core-login-site-list\\\">\\r\\n                    <ion-item class=\\\"core-login-site-list-title\\\">\\r\\n                        <ion-label>\\r\\n                            <h2 class=\\\"item-heading\\\">{{ 'core.login.selectsite' | translate }}</h2>\\r\\n                        </ion-label>\\r\\n                    </ion-item>\\r\\n                    <ion-item button *ngIf=\\\"enteredSiteUrl\\\" (click)=\\\"connect($event, enteredSiteUrl.url)\\\"\\r\\n                        [attr.aria-label]=\\\"'core.login.connect' | translate\\\" detail=\\\"true\\\" class=\\\"core-login-entered-site\\\">\\r\\n                        <ion-thumbnail slot=\\\"start\\\" aria-hidden=\\\"true\\\">\\r\\n                            <ion-icon name=\\\"fas-pen\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                        </ion-thumbnail>\\r\\n                        <ion-label>\\r\\n                            <h2 class=\\\"ion-text-wrap\\\">{{ 'core.login.yourenteredsite' | translate }}</h2>\\r\\n                            <p>{{enteredSiteUrl.noProtocolUrl}}</p>\\r\\n                        </ion-label>\\r\\n                    </ion-item>\\r\\n\\r\\n                    <div class=\\\"core-login-site-list-found\\\" [class.hidden]=\\\"!hasSites\\\" [class.dimmed]=\\\"loadingSites\\\">\\r\\n                        <div *ngIf=\\\"loadingSites\\\" class=\\\"core-login-site-list-loading\\\">\\r\\n                            <ion-spinner [attr.aria-label]=\\\"'core.loading' | translate\\\"></ion-spinner>\\r\\n                        </div>\\r\\n                        <ng-container *ngFor=\\\"let site of sites\\\">\\r\\n                            <ng-container *ngTemplateOutlet=\\\"sitelisting; context: {site: site}\\\"></ng-container>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </ion-list>\\r\\n\\r\\n                <div *ngIf=\\\"!hasSites && loadingSites\\\" class=\\\"core-login-site-nolist-loading\\\">\\r\\n                    <ion-spinner [attr.aria-label]=\\\"'core.loading' | translate\\\"></ion-spinner>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <ion-item *ngIf=\\\"siteSelector == 'url'\\\">\\r\\n                <ion-label>\\r\\n                    <ion-button expand=\\\"block\\\" [disabled]=\\\"!siteForm.valid\\\" class=\\\"ion-text-wrap\\\" type=\\\"submit\\\">\\r\\n                        {{ 'core.login.connect' | translate }}\\r\\n                    </ion-button>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n        </form>\\r\\n\\r\\n        <ng-container *ngIf=\\\"fixedSites\\\">\\r\\n            <!-- Pick the site from a list of fixed sites. -->\\r\\n            <ion-list *ngIf=\\\"siteSelector == 'list'\\\">\\r\\n                <ion-item>\\r\\n                    <ion-label>\\r\\n                        <h2 class=\\\"item-heading\\\">{{ 'core.login.selectsite' | translate }}</h2>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n                <ion-searchbar *ngIf=\\\"fixedSites.length > 4\\\" [(ngModel)]=\\\"filter\\\" (ionInput)=\\\"filterChanged($event)\\\"\\r\\n                    (ionCancel)=\\\"filterChanged()\\\" [placeholder]=\\\"'core.login.findyoursite' | translate\\\">\\r\\n                </ion-searchbar>\\r\\n                <ng-container *ngFor=\\\"let site of filteredSites\\\">\\r\\n                    <ng-container *ngTemplateOutlet=\\\"sitelisting; context: {site: site}\\\"></ng-container>\\r\\n                </ng-container>\\r\\n            </ion-list>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container *ngIf=\\\"showScanQR && !hasSites && !enteredSiteUrl\\\">\\r\\n            <div class=\\\"ion-text-center ion-padding ion-margin-top\\\">{{ 'core.login.or' | translate }}</div>\\r\\n            <ion-button expand=\\\"block\\\" fill=\\\"outline\\\" class=\\\"ion-margin\\\" (click)=\\\"showInstructionsAndScanQR()\\\" aria-haspopup=\\\"dialog\\\">\\r\\n                <ion-icon slot=\\\"start\\\" name=\\\"fas-qrcode\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                {{ 'core.scanqr' | translate }}\\r\\n            </ion-button>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Help. -->\\r\\n        <ion-button class=\\\"ion-margin-top core-login-need-help core-button-as-link ion-text-wrap\\\" (click)=\\\"showHelp()\\\"\\r\\n            aria-haspopup=\\\"dialog\\\" expand=\\\"block\\\" fill=\\\"clear\\\">\\r\\n            {{ 'core.needhelp' | translate }}\\r\\n        </ion-button>\\r\\n    </div>\\r\\n</ion-content>\\r\\n\\r\\n<!-- Template site selector. -->\\r\\n<ng-template #sitelisting let-site=\\\"site\\\">\\r\\n    <ion-item button (click)=\\\"connect($event, site.url, site)\\\" [attr.aria-label]=\\\"site.name\\\" detail=\\\"true\\\">\\r\\n        <ion-thumbnail *ngIf=\\\"siteFinderSettings.displayimage\\\" slot=\\\"start\\\">\\r\\n            <img [src]=\\\"site.imageurl\\\" *ngIf=\\\"site.imageurl\\\" onError=\\\"this.src='assets/icon/icon.png'\\\" alt=\\\"\\\" role=\\\"presentation\\\">\\r\\n            <img src=\\\"assets/icon/icon.png\\\" *ngIf=\\\"!site.imageurl\\\" class=\\\"core-login-default-icon\\\" alt=\\\"\\\" role=\\\"presentation\\\">\\r\\n        </ion-thumbnail>\\r\\n        <ion-label>\\r\\n            <p *ngIf=\\\"site.title\\\" class=\\\"item-heading ion-text-wrap\\\">{{site.title}}</p>\\r\\n            <p *ngIf=\\\"site.noProtocolUrl\\\">{{site.noProtocolUrl}}</p>\\r\\n            <p *ngIf=\\\"site.location\\\">{{site.location}}</p>\\r\\n        </ion-label>\\r\\n    </ion-item>\\r\\n</ng-template>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>{{ 'core.settings.preferences' | translate}}</h1>\\r\\n        </ion-title>\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <core-split-view>\\r\\n        <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!handlers.loaded\\\" (ionRefresh)=\\\"refreshData($event.target)\\\">\\r\\n            <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n        </ion-refresher>\\r\\n        <core-loading [hideUntil]=\\\"handlers.loaded\\\">\\r\\n            <ion-list>\\r\\n                <ion-item *ngFor=\\\"let handler of handlers.items\\\" [ngClass]=\\\"['core-settings-handler', handler.class]\\\"\\r\\n                    [attr.aria-label]=\\\"handler.title | translate\\\" detail=\\\"true\\\" (click)=\\\"handlers.select(handler)\\\" button\\r\\n                    [attr.aria-current]=\\\"handlers.getItemAriaCurrent(handler)\\\">\\r\\n                    <ion-icon [name]=\\\"handler.icon\\\" slot=\\\"start\\\" *ngIf=\\\"handler.icon\\\" aria-hidden=\\\"true\\\">\\r\\n                    </ion-icon>\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ handler.title | translate}}</p>\\r\\n                    </ion-label>\\r\\n                </ion-item>\\r\\n            </ion-list>\\r\\n\\r\\n            <ion-card>\\r\\n                <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                    <ion-label>\\r\\n                        <p class=\\\"item-heading\\\">{{ 'core.settings.synchronizenow' | translate }}</p>\\r\\n                        <p>\\r\\n                            {{ 'core.settings.synchronizenowhelp' | translate }}\\r\\n                        </p>\\r\\n                    </ion-label>\\r\\n                    <core-button-with-spinner [loading]=\\\"isSynchronizing()\\\" slot=\\\"end\\\">\\r\\n                        <ion-button fill=\\\"clear\\\" (click)=\\\"synchronize()\\\" [attr.aria-label]=\\\"'core.settings.synchronizenow' | translate\\\">\\r\\n                            <ion-icon name=\\\"fas-sync-alt\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                        </ion-button>\\r\\n                    </core-button-with-spinner>\\r\\n                </ion-item>\\r\\n            </ion-card>\\r\\n        </core-loading>\\r\\n    </core-split-view>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\nimport { CoreLoginSitePage } from './site';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: CoreLoginSitePage,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n    ],\r\n    declarations: [\r\n        CoreLoginSitePage,\r\n    ],\r\n    exports: [RouterModule],\r\n})\r\nexport class CoreLoginSitePageModule {}\r\n","export default \"/**\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here the different files you should import to use global variables.\\n */\\n/**\\n * Imported ionic string functions for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.functions.string.scss\\n */\\n/**\\n * Imported ionic color functions for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.functions.color.scss\\n */\\n/**\\n * Imported ionic mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.mixins.scss\\n */\\n/**\\n * Imported ionic mixins for SCSS from different components\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/grid/grid.mixins.scss\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/item/item.mixins.scss\\n */\\n/**\\n * App custom mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n */\\n/**\\n * Same as item-push-svg-url but admits flip-rtl\\n */\\n/*\\n * App Custom App variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all custom app variables.\\n */\\n/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all global variables.\\n */\\n/**\\n * Layout Breakpoints\\n *\\n * https://ionicframework.com/docs/layout/grid#default-breakpoints\\n */\\n:host {\\n  --list-item-max-width: 600px;\\n}\\n.item-input:last-child {\\n  margin-bottom: 20px;\\n}\\n.item.core-login-need-help {\\n  margin-top: 16px;\\n}\\n.item.core-login-site-qrcode .item-inner {\\n  border-bottom: 0;\\n}\\n.core-login-site-connect {\\n  margin-top: 1.4rem;\\n}\\n.item ion-thumbnail {\\n  min-width: 50px;\\n  min-height: 50px;\\n  width: 50px;\\n  height: 50px;\\n  border-radius: 20%;\\n  box-shadow: 0 0 4px var(--gray-200);\\n  text-align: center;\\n  overflow: hidden;\\n}\\n.item ion-thumbnail img {\\n  max-height: 50px;\\n  max-width: -webkit-fit-content;\\n  max-width: fit-content;\\n  width: auto;\\n  height: auto;\\n  margin: 0 auto;\\n  margin-left: 50%;\\n  transform: translate3d(-50%,  0,  0);\\n  object-fit: cover;\\n  object-position: 50% 50%;\\n}\\n[dir=rtl] .item ion-thumbnail img, :host-context([dir=rtl]) .item ion-thumbnail img {\\n  transform: translate3d(calc(-1 * -50%),  0,  0);\\n}\\n.item ion-thumbnail ion-icon {\\n  margin: 0 auto;\\n  font-size: 35px;\\n  height: 50px;\\n}\\n:host-context([dir=rtl]) .item ion-thumbnail img {\\n  margin-left: 0;\\n  margin-right: 50%;\\n}\\n.core-login-site-logo,\\n.core-login-site-list,\\n.core-login-site-list-found {\\n  transition-delay: 0s;\\n  visibility: visible;\\n  opacity: 1;\\n  transition: all 0.7s ease-in-out;\\n  max-height: 9999px;\\n}\\n.core-login-site-logo.hidden,\\n.core-login-site-list.hidden,\\n.core-login-site-list-found.hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  margin-top: 0;\\n  margin-bottom: 0;\\n  padding: 0;\\n  max-height: 0;\\n}\\n.core-login-site-list-found.dimmed {\\n  pointer-events: none;\\n  position: relative;\\n}\\n.core-login-site-list-loading {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  background-color: rgba(255, 255, 255, 0.5);\\n  z-index: 1;\\n}\\n.core-login-site-list-loading ion-spinner {\\n  margin: 0 auto;\\n}\\n.core-login-site-nolist-loading {\\n  margin-top: 16px;\\n  text-align: center;\\n}\\n.item.core-login-site-list-title ion-label, .item.core-login-site-list-title ion-label h2.item-heading {\\n  margin-top: 0;\\n}\\n@media (min-width: 768px) {\\n  ion-content .core-login-site-logo {\\n    margin-top: 20%;\\n  }\\n  ion-content .core-login-site-logo.hidden {\\n    margin-top: 0;\\n  }\\n}\\n.core-login-entered-site {\\n  background-color: var(--light);\\n}\\n.core-login-entered-site ion-thumbnail {\\n  box-shadow: 0 0 4px var(--gray-300);\\n}\\n.core-login-default-icon {\\n  filter: grayscale(100%);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy90aGVtZS9nbG9iYWxzLnNjc3MiLCJzcmMvdGhlbWUvaGVscGVycy9pb25pYy5mdW5jdGlvbnMuc3RyaW5nLnNjc3MiLCJzcmMvdGhlbWUvaGVscGVycy9pb25pYy5mdW5jdGlvbnMuY29sb3Iuc2NzcyIsInNyYy90aGVtZS9oZWxwZXJzL2lvbmljLm1peGlucy5zY3NzIiwic3JjL3RoZW1lL2hlbHBlcnMvaW9uaWMuY29tcG9uZW50cy5taXhpbnMuc2NzcyIsInNyYy90aGVtZS9oZWxwZXJzL2N1c3RvbS5taXhpbnMuc2NzcyIsInNyYy90aGVtZS9nbG9iYWxzLmN1c3RvbS5zY3NzIiwic3JjL3RoZW1lL2dsb2JhbHMudmFyaWFibGVzLnNjc3MiLCJzcmMvY29yZS9mZWF0dXJlcy9sb2dpbi9wYWdlcy9zaXRlL3NpdGUuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztFQUFBO0FDQUE7Ozs7O0VBQUE7QUNBQTs7Ozs7RUFBQTtBQ0FBOzs7OztFQUFBO0FDQUE7Ozs7OztFQUFBO0FDRUE7Ozs7RUFBQTtBQWtHQTs7RUFBQTtBQ3BHQTs7OztFQUFBO0FDQUE7Ozs7RUFBQTtBQStEQTs7OztFQUFBO0FDN0RBO0VBQ0ksNEJBQUE7QUFvREo7QUFqREE7RUFDSSxtQkFBQTtBQW9ESjtBQWhESTtFQUNJLGdCQUFBO0FBbURSO0FBaERRO0VBQ0ksZ0JBQUE7QUFrRFo7QUE3Q0E7RUFDSSxrQkFBQTtBQWdESjtBQTdDQTtFQUNJLGVBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7QUFnREo7QUE5Q0k7RUFDSSxnQkFBQTtFQUNBLDhCQUFBO0VBQUEsc0JBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtFTDZlRixvQ0FBQTtFSzNlRSxpQkFBQTtFQUNBLHdCQUFBO0FBZ0RSO0FMK0dXO0VBK1VMLCtDQUFBO0FLM2JOO0FBakRJO0VBQ0ksY0FBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0FBb0RSO0FBOUNJO0VBQ0ksY0FBQTtFQUNBLGlCQUFBO0FBaURSO0FBNUNBOzs7RUFHSSxvQkFBQTtFQUNBLG1CQUFBO0VBQ0EsVUFBQTtFQUNBLGdDQUFBO0VBQ0Esa0JBQUE7QUErQ0o7QUE3Q0k7OztFQUNJLFVBQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxnQkFBQTtFQUNBLFVBQUE7RUFDQSxhQUFBO0FBaURSO0FBN0NBO0VBQ0ksb0JBQUE7RUFDQSxrQkFBQTtBQWdESjtBQTdDQTtFQUNJLGtCQUFBO0VBQ0EsTUFBQTtFQUNBLFNBQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLHFCQUFBO0VBQ0EsbUJBQUE7RUFDQSwwQ0FBQTtFQUNBLFVBQUE7QUFnREo7QUEvQ0k7RUFDSSxjQUFBO0FBaURSO0FBN0NBO0VBQ0ksZ0JBQUE7RUFDQSxrQkFBQTtBQWdESjtBQTVDSTtFQUNJLGFBQUE7QUErQ1I7QUx6Qkk7RUtqQkE7SUFDSSxlQUFBO0VBOENOO0VBN0NNO0lBQ0ksYUFBQTtFQStDVjtBQUNGO0FBM0NBO0VBQ0ksOEJBQUE7QUE2Q0o7QUEzQ0k7RUFDSSxtQ0FBQTtBQTZDUjtBQXpDQTtFQUNJLHVCQUFBO0FBNENKIiwiZmlsZSI6InNyYy9jb3JlL2ZlYXR1cmVzL2xvZ2luL3BhZ2VzL3NpdGUvc2l0ZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEFwcCBHbG9iYWwgdmFyaWFibGVzIFNDU1NcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiBQbGFjZSBoZXJlIHRoZSBkaWZmZXJlbnQgZmlsZXMgeW91IHNob3VsZCBpbXBvcnQgdG8gdXNlIGdsb2JhbCB2YXJpYWJsZXMuXHJcbiAqL1xyXG5cclxuJGZvbnQtcGF0aDogXCIuLi9hc3NldHMvZm9udHNcIjtcclxuJGFzc2V0cy1wYXRoOiBcIi4uL2Fzc2V0c1wiO1xyXG5cclxuQGltcG9ydCBcIi4vaGVscGVycy9oZWxwZXJzLnNjc3NcIjtcclxuQGltcG9ydCBcIi4vZ2xvYmFscy5jdXN0b20uc2Nzc1wiO1xyXG5AaW1wb3J0IFwiLi9nbG9iYWxzLnZhcmlhYmxlcy5zY3NzXCI7XHJcbiIsIi8qKlxyXG4gKiBJbXBvcnRlZCBpb25pYyBzdHJpbmcgZnVuY3Rpb25zIGZvciBTQ1NTXHJcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogRXh0cmFjdGVkIGZyb21cclxuICogaHR0cHM6Ly9naXRodWIuY29tL2lvbmljLXRlYW0vaW9uaWMtZnJhbWV3b3JrL2Jsb2IvbWFzdGVyL2NvcmUvc3JjL3RoZW1lcy9pb25pYy5mdW5jdGlvbnMuc3RyaW5nLnNjc3NcclxuICovXHJcblxyXG5cclxuLy8gU3RyaW5nIFV0aWxpdHkgRnVuY3Rpb25zXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyBTdHJpbmcgUmVwbGFjZSBGdW5jdGlvblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuQGZ1bmN0aW9uIHN0ci1yZXBsYWNlKCRzdHJpbmcsICRzZWFyY2gsICRyZXBsYWNlOiBcIlwiKSB7XHJcbiAgJGluZGV4OiBzdHItaW5kZXgoJHN0cmluZywgJHNlYXJjaCk7XHJcblxyXG4gIEBpZiAkaW5kZXgge1xyXG4gICAgQHJldHVybiBzdHItc2xpY2UoJHN0cmluZywgMSwgJGluZGV4IC0gMSkgKyAkcmVwbGFjZSArIHN0ci1yZXBsYWNlKHN0ci1zbGljZSgkc3RyaW5nLCAkaW5kZXggKyBzdHItbGVuZ3RoKCRzZWFyY2gpKSwgJHNlYXJjaCwgJHJlcGxhY2UpO1xyXG4gIH1cclxuXHJcbiAgQHJldHVybiAkc3RyaW5nO1xyXG59XHJcblxyXG4vLyBTdHJpbmcgU3BsaXQgRnVuY3Rpb25cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcblxyXG5AZnVuY3Rpb24gc3RyLXNwbGl0KCRzdHJpbmcsICRzZXBhcmF0b3IpIHtcclxuICAvLyBlbXB0eSBhcnJheS9saXN0XHJcbiAgJHNwbGl0LWFycjogKCk7XHJcbiAgLy8gZmlyc3QgaW5kZXggb2Ygc2VwYXJhdG9yIGluIHN0cmluZ1xyXG4gICRpbmRleDogc3RyLWluZGV4KCRzdHJpbmcsICRzZXBhcmF0b3IpO1xyXG4gIC8vIGxvb3AgdGhyb3VnaCBzdHJpbmdcclxuICBAd2hpbGUgJGluZGV4ICE9IG51bGwge1xyXG4gICAgLy8gZ2V0IHRoZSBzdWJzdHJpbmcgZnJvbSB0aGUgZmlyc3QgY2hhcmFjdGVyIHRvIHRoZSBzZXBhcmF0b3JcclxuICAgICRpdGVtOiBzdHItc2xpY2UoJHN0cmluZywgMSwgJGluZGV4IC0gMSk7XHJcbiAgICAvLyBwdXNoIGl0ZW0gdG8gYXJyYXlcclxuICAgICRzcGxpdC1hcnI6IGFwcGVuZCgkc3BsaXQtYXJyLCAkaXRlbSk7XHJcbiAgICAvLyByZW1vdmUgaXRlbSBhbmQgc2VwYXJhdG9yIGZyb20gc3RyaW5nXHJcbiAgICAkc3RyaW5nOiBzdHItc2xpY2UoJHN0cmluZywgJGluZGV4ICsgMSk7XHJcbiAgICAvLyBmaW5kIG5ldyBpbmRleCBvZiBzZXBhcmF0b3JcclxuICAgICRpbmRleDogc3RyLWluZGV4KCRzdHJpbmcsICRzZXBhcmF0b3IpO1xyXG4gIH1cclxuICAvLyBhZGQgdGhlIHJlbWFpbmluZyBzdHJpbmcgdG8gbGlzdCAodGhlIGxhc3QgaXRlbSlcclxuICAkc3BsaXQtYXJyOiBhcHBlbmQoJHNwbGl0LWFyciwgJHN0cmluZyk7XHJcblxyXG4gIEByZXR1cm4gJHNwbGl0LWFycjtcclxufVxyXG5cclxuXHJcbi8vIFN0cmluZyBFeHRyYWN0IEZ1bmN0aW9uXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5AZnVuY3Rpb24gc3RyLWV4dHJhY3QoJHN0cmluZywgJHN0YXJ0LCAkZW5kKSB7XHJcbiAgJHN0YXJ0LWluZGV4OiBzdHItaW5kZXgoJHN0cmluZywgJHN0YXJ0KTtcclxuXHJcbiAgQGlmICRzdGFydC1pbmRleCB7XHJcbiAgICAkcG9zdDogc3RyLXNsaWNlKCRzdHJpbmcsICRzdGFydC1pbmRleCArIHN0ci1sZW5ndGgoJHN0YXJ0KSk7XHJcbiAgICAkZW5kLWluZGV4OiBzdHItaW5kZXgoJHBvc3QsICRlbmQpO1xyXG5cclxuICAgIEBpZiAkZW5kLWluZGV4IHtcclxuICAgICAgQHJldHVybiBzdHItc2xpY2UoJHBvc3QsIDEsICRlbmQtaW5kZXggLSAxKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIEByZXR1cm4gbnVsbDtcclxufVxyXG5cclxuXHJcbi8vIFN0cmluZyBDb250YWlucyBGdW5jdGlvblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuQGZ1bmN0aW9uIHN0ci1jb250YWlucygkc3RyaW5nLCAkbmVlZGxlKSB7XHJcbiAgQGlmICh0eXBlLW9mKCRzdHJpbmcpID09IHN0cmluZykge1xyXG4gICAgQHJldHVybiBzdHItaW5kZXgoJHN0cmluZywgJG5lZWRsZSkgIT0gbnVsbDtcclxuICB9XHJcblxyXG4gIEByZXR1cm4gZmFsc2U7XHJcbn1cclxuXHJcblxyXG4vLyBVUkwgRW5jb2RlIEZ1bmN0aW9uXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5AZnVuY3Rpb24gdXJsLWVuY29kZSgkdmFsKSB7XHJcbiAgJHNwYWNlczogc3RyLXJlcGxhY2UoJHZhbCwgXCIgXCIsIFwiJTIwXCIpO1xyXG4gICRlbmNvZGVkOiBzdHItcmVwbGFjZSgkc3BhY2VzLCBcIiNcIiwgXCIlMjNcIik7XHJcbiAgQHJldHVybiAkZW5jb2RlZDtcclxufVxyXG5cclxuXHJcbi8vIEFkZCBSb290IFNlbGVjdG9yXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIEFkZHMgYSByb290IHNlbGVjdG9yIHVzaW5nIGhvc3QtY29udGV4dCBiYXNlZCBvbiB0aGUgc2VsZWN0b3IgcGFzc2VkXHJcbi8vXHJcbi8vIEV4YW1wbGVzXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIEBpbmNsdWRlIGFkZC1yb290LXNlbGVjdG9yKFwiW2Rpcj1ydGxdXCIsIFwiOmhvc3RcIilcclxuLy8gLS0+IDpob3N0LWNvbnRleHQoW2Rpcj1ydGxdKVxyXG4vL1xyXG4vLyBAaW5jbHVkZSBhZGQtcm9vdC1zZWxlY3RvcihcIltkaXI9cnRsXVwiLCBcIjpob3N0KC5maXhlZClcIilcclxuLy8gLS0+IDpob3N0LWNvbnRleHQoW2Rpcj1ydGxdKTpob3N0KC5maXhlZClcclxuLy8gLS0+IDpob3N0LWNvbnRleHQoW2Rpcj1ydGxdKS5maXhlZFxyXG4vL1xyXG4vLyBAaW5jbHVkZSBhZGQtcm9vdC1zZWxlY3RvcihcIltkaXI9cnRsXVwiLCBcIjpob3N0KC50YWItbGF5b3V0LWljb24taGlkZSkgOjpzbG90dGVkKGlvbi1iYWRnZSlcIilcclxuLy8gLS0+IDpob3N0LWNvbnRleHQoW2Rpcj1ydGxdKS50YWItbGF5b3V0LWljb24taGlkZSA6OnNsb3R0ZWQoaW9uLWJhZGdlKVxyXG4vL1xyXG4vLyBAaW5jbHVkZSBhZGQtcm9vdC1zZWxlY3RvcihcIltkaXI9cnRsXVwiLCBcIi5zaGFkb3dcIilcclxuLy8gLS0+IFtkaXI9cnRsXSAuc2hhZG93XHJcbi8vIC0tPiA6aG9zdC1jb250ZXh0KFtkaXI9cnRsXSkgLnNoYWRvd1xyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuQGZ1bmN0aW9uIGFkZC1yb290LXNlbGVjdG9yKCRyb290LCAkYWRkSG9zdFNlbGVjdG9yKSB7XHJcbiAgJHNlbGVjdG9yczogc3RyLXNwbGl0KCRyb290LCBcIixcIik7XHJcblxyXG4gICRsaXN0OiAoKTtcclxuXHJcbiAgQGVhY2ggJHNlbGVjdG9yIGluICRzZWxlY3RvcnMge1xyXG4gICAgLy8gSWYgdGhlIHNlbGVjdG9yIGNvbnRhaW5zIDpob3N0KCBpdCBtZWFucyBpdCBpcyB0YXJnZXRpbmcgYSBjbGFzcyBvbiB0aGUgaG9zdFxyXG4gICAgLy8gZWxlbWVudCBzbyB3ZSBuZWVkIHRvIGNoYW5nZSBob3cgd2UgdGFyZ2V0IGl0XHJcbiAgICBAaWYgc3RyLWNvbnRhaW5zKCRzZWxlY3RvciwgXCI6aG9zdChcIikge1xyXG4gICAgICAkc2hhZG93LWVsZW1lbnQ6IHN0ci1yZXBsYWNlKCRzZWxlY3RvciwgXCI6aG9zdChcIiwgXCI6aG9zdC1jb250ZXh0KCN7JGFkZEhvc3RTZWxlY3Rvcn0pOmhvc3QoXCIpO1xyXG4gICAgICAkbGlzdDogYXBwZW5kKCRsaXN0LCAkc2hhZG93LWVsZW1lbnQsIGNvbW1hKTtcclxuXHJcbiAgICAgICRuZXctZWxlbWVudDogKCk7XHJcbiAgICAgICRlbGVtZW50czogc3RyLXNwbGl0KCRzZWxlY3RvciwgXCIgXCIpO1xyXG5cclxuICAgICAgQGVhY2ggJGVsZW1lbnQgaW4gJGVsZW1lbnRzIHtcclxuICAgICAgICBAaWYgc3RyLWNvbnRhaW5zKCRlbGVtZW50LCBcIjpob3N0KFwiKSB7XHJcbiAgICAgICAgICAkc2NvcGVkLWVsZW1lbnQ6ICRlbGVtZW50O1xyXG5cclxuICAgICAgICAgIEBpZiBzdHItY29udGFpbnMoJGVsZW1lbnQsIFwiKSlcIikge1xyXG4gICAgICAgICAgICAkc2NvcGVkLWVsZW1lbnQ6IHN0ci1yZXBsYWNlKCRzY29wZWQtZWxlbWVudCwgXCIpKVwiLCBcIilcIik7XHJcbiAgICAgICAgICB9IEBlbHNlIHtcclxuICAgICAgICAgICAgJHNjb3BlZC1lbGVtZW50OiBzdHItcmVwbGFjZSgkc2NvcGVkLWVsZW1lbnQsIFwiKVwiLCBcIlwiKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgICRzY29wZWQtZWxlbWVudDogc3RyLXJlcGxhY2UoJHNjb3BlZC1lbGVtZW50LCBcIjpob3N0KFwiLCBcIjpob3N0LWNvbnRleHQoI3skYWRkSG9zdFNlbGVjdG9yfSlcIik7XHJcblxyXG4gICAgICAgICAgJG5ldy1lbGVtZW50OiBhcHBlbmQoJG5ldy1lbGVtZW50LCAkc2NvcGVkLWVsZW1lbnQsIHNwYWNlKTtcclxuICAgICAgICB9IEBlbHNlIHtcclxuICAgICAgICAgICRuZXctZWxlbWVudDogYXBwZW5kKCRuZXctZWxlbWVudCwgJGVsZW1lbnQsIHNwYWNlKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICRsaXN0OiBhcHBlbmQoJGxpc3QsICRuZXctZWxlbWVudCwgY29tbWEpO1xyXG4gICAgLy8gSWYgdGhlIHNlbGVjdG9yIGNvbnRhaW5zIDpob3N0IGl0IG1lYW5zIGl0IGlzIHRhcmdldGluZyBqdXN0IHRoZSBob3N0XHJcbiAgICAvLyBlbGVtZW50IHNvIHdlIGNhbiBjaGFuZ2UgaXQgdG8gbG9vayBmb3IgaG9zdC1jb250ZXh0XHJcbiAgICB9IEBlbHNlIGlmIHN0ci1jb250YWlucygkc2VsZWN0b3IsIFwiOmhvc3RcIikge1xyXG4gICAgICAkbGlzdDogYXBwZW5kKCRsaXN0LCBcIjpob3N0LWNvbnRleHQoI3skYWRkSG9zdFNlbGVjdG9yfSlcIiwgY29tbWEpO1xyXG4gICAgLy8gSWYgdGhlIHNlbGVjdG9yIGRvZXMgbm90IGNvbnRhaW4gaG9zdCBhdCBhbGwgaXQgaXMgZWl0aGVyIGEgc2hhZG93XHJcbiAgICAvLyBvciBub3JtYWwgZWxlbWVudCBzbyBhcHBlbmQgYm90aCB0aGUgZGlyIGNoZWNrIGFuZCBob3N0LWNvbnRleHRcclxuICAgIH0gQGVsc2Uge1xyXG4gICAgICAkbGlzdDogYXBwZW5kKCRsaXN0LCBcIiN7JGFkZEhvc3RTZWxlY3Rvcn0gI3skc2VsZWN0b3J9XCIsIGNvbW1hKTtcclxuICAgICAgJGxpc3Q6IGFwcGVuZCgkbGlzdCwgXCI6aG9zdC1jb250ZXh0KCN7JGFkZEhvc3RTZWxlY3Rvcn0pICN7JHNlbGVjdG9yfVwiLCBjb21tYSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBAcmV0dXJuICRsaXN0O1xyXG59XHJcbiIsIi8qKlxyXG4gKiBJbXBvcnRlZCBpb25pYyBjb2xvciBmdW5jdGlvbnMgZm9yIFNDU1NcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiBFeHRyYWN0ZWQgZnJvbVxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vaW9uaWMtdGVhbS9pb25pYy1mcmFtZXdvcmsvYmxvYi9tYXN0ZXIvY29yZS9zcmMvdGhlbWVzL2lvbmljLmZ1bmN0aW9ucy5jb2xvci5zY3NzXHJcbiAqL1xyXG5cclxuLy8gR2V0cyB0aGUgYWN0aXZlIGNvbG9yJ3MgY3NzIHZhcmlhYmxlIGZyb20gYSB2YXJpYXRpb24uIEFscGhhIGlzIG9wdGlvbmFsLlxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBFeGFtcGxlIHVzYWdlOlxyXG4vLyBjdXJyZW50LWNvbG9yKGJhc2UpID0+IHZhcigtLWlvbi1jb2xvci1iYXNlKVxyXG4vLyBjdXJyZW50LWNvbG9yKGNvbnRyYXN0LCAwLjEpID0+IHJnYmEodmFyKC0taW9uLWNvbG9yLWNvbnRyYXN0LXJnYiksIDAuMSlcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuQGZ1bmN0aW9uIGN1cnJlbnQtY29sb3IoJHZhcmlhdGlvbiwgJGFscGhhOiBudWxsKSB7XHJcbiAgQGlmICRhbHBoYSA9PSBudWxsIHtcclxuICAgIEByZXR1cm4gdmFyKC0taW9uLWNvbG9yLSN7JHZhcmlhdGlvbn0pO1xyXG4gIH0gQGVsc2Uge1xyXG4gICAgQHJldHVybiByZ2JhKHZhcigtLWlvbi1jb2xvci0jeyR2YXJpYXRpb259LXJnYiksICN7JGFscGhhfSk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBHZXRzIHRoZSBzcGVjaWZpYyBjb2xvcidzIGNzcyB2YXJpYWJsZSBmcm9tIHRoZSBuYW1lIGFuZCB2YXJpYXRpb24uIEFscGhhL3JnYiBhcmUgb3B0aW9uYWwuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIEV4YW1wbGUgdXNhZ2U6XHJcbi8vIGlvbi1jb2xvcihwcmltYXJ5LCBiYXNlKSA9PiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSwgIzM4ODBmZilcclxuLy8gaW9uLWNvbG9yKHNlY29uZGFyeSwgY29udHJhc3QpID0+IHZhcigtLWlvbi1jb2xvci1zZWNvbmRhcnktY29udHJhc3QpXHJcbi8vIGlvbi1jb2xvcihwcmltYXJ5LCBiYXNlLCAwLjUpID0+IHJnYmEodmFyKC0taW9uLWNvbG9yLXByaW1hcnktcmdiLCA1NiwgMTI4LCAyNTUpLCAwLjUpXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbkBmdW5jdGlvbiBpb24tY29sb3IoJG5hbWUsICR2YXJpYXRpb24sICRhbHBoYTogbnVsbCwgJHJnYjogbnVsbCkge1xyXG4gICR2YWx1ZXM6IG1hcC1nZXQoJGNvbG9ycywgJG5hbWUpO1xyXG4gICR2YWx1ZTogbWFwLWdldCgkdmFsdWVzLCAkdmFyaWF0aW9uKTtcclxuICAkdmFyaWFibGU6IC0taW9uLWNvbG9yLSN7JG5hbWV9LSN7JHZhcmlhdGlvbn07XHJcblxyXG4gIEBpZiAoJHZhcmlhdGlvbiA9PSBiYXNlKSB7XHJcbiAgICAkdmFyaWFibGU6IC0taW9uLWNvbG9yLSN7JG5hbWV9O1xyXG4gIH1cclxuXHJcbiAgQGlmICgkYWxwaGEpIHtcclxuICAgICR2YWx1ZTogY29sb3ItdG8tcmdiLWxpc3QoJHZhbHVlKTtcclxuICAgIEByZXR1cm4gcmdiYSh2YXIoI3skdmFyaWFibGV9LXJnYiwgJHZhbHVlKSwgJGFscGhhKTtcclxuICB9XHJcbiAgQGlmICgkcmdiKSB7XHJcbiAgICAkdmFsdWU6IGNvbG9yLXRvLXJnYi1saXN0KCR2YWx1ZSk7XHJcbiAgICAkdmFyaWFibGU6ICN7JHZhcmlhYmxlfS1yZ2I7XHJcbiAgfVxyXG5cclxuICBAcmV0dXJuIHZhcigjeyR2YXJpYWJsZX0sICR2YWx1ZSk7XHJcbn1cclxuXHJcbi8vIE1peGVzIGEgY29sb3Igd2l0aCBibGFjayB0byBjcmVhdGUgaXRzIHNoYWRlLlxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5AZnVuY3Rpb24gZ2V0LWNvbG9yLXNoYWRlKCRjb2xvcikge1xyXG4gIEByZXR1cm4gbWl4KCMwMDAsICRjb2xvciwgMTIlKTtcclxufVxyXG5cclxuLy8gTWl4ZXMgYSBjb2xvciB3aXRoIHdoaXRlIHRvIGNyZWF0ZSBpdHMgdGludC5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuQGZ1bmN0aW9uIGdldC1jb2xvci10aW50KCRjb2xvcikge1xyXG4gIEByZXR1cm4gbWl4KCNmZmYsICRjb2xvciwgMTAlKTtcclxufVxyXG5cclxuLy8gQ29udmVydHMgYSBjb2xvciB0byBhIGNvbW1hIHNlcGFyYXRlZCByZ2IuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbkBmdW5jdGlvbiBjb2xvci10by1yZ2ItbGlzdCgkY29sb3IpIHtcclxuICBAcmV0dXJuICN7cmVkKCRjb2xvcil9LCN7Z3JlZW4oJGNvbG9yKX0sI3tibHVlKCRjb2xvcil9O1xyXG59XHJcbiIsIi8qKlxyXG4gKiBJbXBvcnRlZCBpb25pYyBtaXhpbnMgZm9yIFNDU1NcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiBFeHRyYWN0ZWQgZnJvbVxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vaW9uaWMtdGVhbS9pb25pYy1mcmFtZXdvcmsvYmxvYi9tYXN0ZXIvY29yZS9zcmMvdGhlbWVzL2lvbmljLm1peGlucy5zY3NzXHJcbiAqL1xyXG5cclxuQG1peGluIGlucHV0LWNvdmVyKCkge1xyXG4gIEBpbmNsdWRlIHBvc2l0aW9uKDAsIG51bGwsIG51bGwsIDApO1xyXG4gIEBpbmNsdWRlIG1hcmdpbigwKTtcclxuXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG5cclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcblxyXG4gIGJvcmRlcjogMDtcclxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gIGFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgb3V0bGluZTogbm9uZTtcclxuXHJcbiAgJjo6LW1vei1mb2N1cy1pbm5lciB7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gdmlzdWFsbHktaGlkZGVuKCkge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHJcbiAgdG9wOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgYm90dG9tOiAwO1xyXG5cclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcblxyXG4gIG1hcmdpbjogMDtcclxuICBwYWRkaW5nOiAwO1xyXG5cclxuICBib3JkZXI6IDA7XHJcbiAgb3V0bGluZTogMDtcclxuICBjbGlwOiByZWN0KDAgMCAwIDApO1xyXG5cclxuICBvcGFjaXR5OiAwO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxuICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7XHJcbn1cclxuXHJcbkBtaXhpbiB0ZXh0LWluaGVyaXQoKSB7XHJcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XHJcbiAgZm9udC1zaXplOiBpbmhlcml0O1xyXG4gIGZvbnQtc3R5bGU6IGluaGVyaXQ7XHJcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XHJcbiAgbGV0dGVyLXNwYWNpbmc6IGluaGVyaXQ7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBpbmhlcml0O1xyXG4gIHRleHQtaW5kZW50OiBpbmhlcml0O1xyXG4gIHRleHQtb3ZlcmZsb3c6IGluaGVyaXQ7XHJcbiAgdGV4dC10cmFuc2Zvcm06IGluaGVyaXQ7XHJcbiAgdGV4dC1hbGlnbjogaW5oZXJpdDtcclxuICB3aGl0ZS1zcGFjZTogaW5oZXJpdDtcclxuICBjb2xvcjogaW5oZXJpdDtcclxufVxyXG5cclxuQG1peGluIGJ1dHRvbi1zdGF0ZSgpIHtcclxuICBAaW5jbHVkZSBwb3NpdGlvbigwLCAwLCAwLCAwKTtcclxuXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG5cclxuICBjb250ZW50OiBcIlwiO1xyXG5cclxuICBvcGFjaXR5OiAwO1xyXG59XHJcblxyXG4vLyBGb250IHNtb290aGluZ1xyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuQG1peGluIGZvbnQtc21vb3RoaW5nKCkge1xyXG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XHJcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XHJcbn1cclxuXHJcbi8vIEdldCB0aGUga2V5IGZyb20gYSBtYXAgYmFzZWQgb24gdGhlIGluZGV4XHJcbkBmdW5jdGlvbiBpbmRleC10by1rZXkoJG1hcCwgJGluZGV4KSB7XHJcbiAgJGtleXM6IG1hcC1rZXlzKCRtYXApO1xyXG5cclxuICBAcmV0dXJuIG50aCgka2V5cywgJGluZGV4KTtcclxufVxyXG5cclxuXHJcbi8vIEJyZWFrcG9pbnQgTWl4aW5zXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuLy8gQnJlYWtwb2ludCB2aWV3cG9ydCBzaXplcyBhbmQgbWVkaWEgcXVlcmllcy5cclxuLy9cclxuLy8gQnJlYWtwb2ludHMgYXJlIGRlZmluZWQgYXMgYSBtYXAgb2YgKG5hbWU6IG1pbmltdW0gd2lkdGgpLCBvcmRlciBmcm9tIHNtYWxsIHRvIGxhcmdlOlxyXG4vL1xyXG4vLyAgICAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpXHJcbi8vXHJcbi8vIFRoZSBtYXAgZGVmaW5lZCBpbiB0aGUgYCRzY3JlZW4tYnJlYWtwb2ludHNgIGdsb2JhbCB2YXJpYWJsZSBpcyB1c2VkIGFzIHRoZSBgJGJyZWFrcG9pbnRzYCBhcmd1bWVudCBieSBkZWZhdWx0LlxyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4vLyBNaW5pbXVtIGJyZWFrcG9pbnQgd2lkdGguIE51bGwgZm9yIHRoZSBzbWFsbGVzdCAoZmlyc3QpIGJyZWFrcG9pbnQuXHJcbi8vXHJcbi8vICAgID4+IGJyZWFrcG9pbnQtbWluKHNtLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpKVxyXG4vLyAgICA1NzZweFxyXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50czogJHNjcmVlbi1icmVha3BvaW50cykge1xyXG4gICRtaW46IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkbmFtZSk7XHJcblxyXG4gIEByZXR1cm4gaWYoJG5hbWUgIT0gaW5kZXgtdG8ta2V5KCRicmVha3BvaW50cywgMSksICRtaW4sIG51bGwpO1xyXG59XHJcblxyXG4vLyBSZXR1cm5zIGEgYmxhbmsgc3RyaW5nIGlmIHNtYWxsZXN0IGJyZWFrcG9pbnQsIG90aGVyd2lzZSByZXR1cm5zIHRoZSBuYW1lIHdpdGggYSBkYXNoIGluZnJvbnQuXHJcbi8vIFVzZWZ1bCBmb3IgbWFraW5nIHJlc3BvbnNpdmUgdXRpbGl0aWVzLlxyXG4vL1xyXG4vLyAgICA+PiBicmVha3BvaW50LWluZml4KHhzLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpKVxyXG4vLyAgICBcIlwiICAoUmV0dXJucyBhIGJsYW5rIHN0cmluZylcclxuLy8gICAgPj4gYnJlYWtwb2ludC1pbmZpeChzbSwgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4KSlcclxuLy8gICAgXCItc21cIlxyXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1pbmZpeCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkc2NyZWVuLWJyZWFrcG9pbnRzKSB7XHJcbiAgQHJldHVybiBpZihicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzKSA9PSBudWxsLCBcIlwiLCBcIi0jeyRuYW1lfVwiKTtcclxufVxyXG5cclxuLy8gTWVkaWEgb2YgYXQgbGVhc3QgdGhlIG1pbmltdW0gYnJlYWtwb2ludCB3aWR0aC4gTm8gcXVlcnkgZm9yIHRoZSBzbWFsbGVzdCBicmVha3BvaW50LlxyXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgdG8gdGhlIGdpdmVuIGJyZWFrcG9pbnQgYW5kIHdpZGVyLlxyXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC11cCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkc2NyZWVuLWJyZWFrcG9pbnRzKSB7XHJcbiAgJG1pbjogYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50cyk7XHJcbiAgQGlmICRtaW4ge1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRtaW4pIHtcclxuICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbiAgfSBAZWxzZSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbi8vIE5hbWUgb2YgdGhlIG5leHQgYnJlYWtwb2ludCwgb3IgbnVsbCBmb3IgdGhlIGxhc3QgYnJlYWtwb2ludC5cclxuLy9cclxuLy8gICAgPj4gYnJlYWtwb2ludC1uZXh0KHNtKVxyXG4vLyAgICBtZFxyXG4vLyAgICA+PiBicmVha3BvaW50LW5leHQoc20sICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCkpXHJcbi8vICAgIG1kXHJcbi8vICAgID4+IGJyZWFrcG9pbnQtbmV4dChzbSwgJGJyZWFrcG9pbnQtbmFtZXM6ICh4cyBzbSBtZCBsZyB4bCkpXHJcbi8vICAgIG1kXHJcbkBmdW5jdGlvbiBicmVha3BvaW50LW5leHQoJG5hbWUsICRicmVha3BvaW50czogJHNjcmVlbi1icmVha3BvaW50cywgJGJyZWFrcG9pbnQtbmFtZXM6IG1hcC1rZXlzKCRicmVha3BvaW50cykpIHtcclxuICAkbjogaW5kZXgoJGJyZWFrcG9pbnQtbmFtZXMsICRuYW1lKTtcclxuICBAcmV0dXJuIGlmKCRuIDwgbGVuZ3RoKCRicmVha3BvaW50LW5hbWVzKSwgbnRoKCRicmVha3BvaW50LW5hbWVzLCAkbiArIDEpLCBudWxsKTtcclxufVxyXG5cclxuLy8gTWF4aW11bSBicmVha3BvaW50IHdpZHRoLiBOdWxsIGZvciB0aGUgc21hbGxlc3QgKGZpcnN0KSBicmVha3BvaW50LlxyXG4vLyBUaGUgbWF4aW11bSB2YWx1ZSBpcyByZWR1Y2VkIGJ5IDAuMDJweCB0byB3b3JrIGFyb3VuZCB0aGUgbGltaXRhdGlvbnMgb2ZcclxuLy8gYG1pbi1gIGFuZCBgbWF4LWAgcHJlZml4ZXMgYW5kIHZpZXdwb3J0cyB3aXRoIGZyYWN0aW9uYWwgd2lkdGhzLlxyXG4vL1xyXG4vLyBTZWUgaHR0cHM6Ly93d3cudzMub3JnL1RSL21lZGlhcXVlcmllcy00LyNtcS1taW4tbWF4XHJcbi8vIFVzZXMgMC4wMnB4IHJhdGhlciB0aGFuIDAuMDFweCB0byB3b3JrIGFyb3VuZCBhIGN1cnJlbnQgcm91bmRpbmcgYnVnIGluIFNhZmFyaS5cdC8vIFVzZXMgMC4wMnB4IHJhdGhlciB0aGFuIDAuMDFweCB0byB3b3JrIGFyb3VuZCBhIGN1cnJlbnQgcm91bmRpbmcgYnVnIGluIFNhZmFyaS5cclxuLy8gU2VlIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xNzgyNjFcdC8vIFNlZSBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTc4MjYxXHJcbi8vXHJcbi8vICAgID4+IGJyZWFrcG9pbnQtbWF4KG1kLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpKVxyXG4vLyAgICA3NjcuOThweFxyXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1tYXgoJG5hbWUsICRicmVha3BvaW50czogJHNjcmVlbi1icmVha3BvaW50cykge1xyXG4gICRtYXg6IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkbmFtZSk7XHJcbiAgQHJldHVybiBpZigkbWF4IGFuZCAkbWF4ID4gMCwgJG1heCAtIC4wMiwgbnVsbCk7XHJcbn1cclxuXHJcbi8vIE1lZGlhIG9mIGF0IG1vc3QgdGhlIG1heGltdW0gYnJlYWtwb2ludCB3aWR0aC4gTm8gcXVlcnkgZm9yIHRoZSBsYXJnZXN0IGJyZWFrcG9pbnQuXHJcbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSB0byB0aGUgZ2l2ZW4gYnJlYWtwb2ludCBhbmQgbmFycm93ZXIuXHJcbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LWRvd24oJG5hbWUsICRicmVha3BvaW50czogJHNjcmVlbi1icmVha3BvaW50cykge1xyXG4gICRtYXg6IGJyZWFrcG9pbnQtbWF4KCRuYW1lLCAkYnJlYWtwb2ludHMpO1xyXG4gIEBpZiAkbWF4IHtcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkbWF4KSB7XHJcbiAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG4gIH0gQGVsc2Uge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuLy8gVGV4dCBEaXJlY3Rpb24gLSBsdHIgLyBydGxcclxuLy9cclxuLy8gQ1NTIGRlZmF1bHRzIHRvIHVzZSB0aGUgbHRyIGNzcywgYW5kIGFkZHMgW2Rpcj1ydGxdIHNlbGVjdG9yc1xyXG4vLyB0byBvdmVycmlkZSBsdHIgZGVmYXVsdHMuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbkBtaXhpbiBtdWx0aS1kaXIoKSB7XHJcbiAgQGNvbnRlbnQ7XHJcblxyXG4gIC8vICRyb290OiAjeyZ9O1xyXG4gIC8vIEBhdC1yb290IFtkaXJdIHtcclxuICAvLyAgICN7JHJvb3R9IHtcclxuICAvLyAgICAgQGNvbnRlbnQ7XHJcbiAgLy8gICB9XHJcbiAgLy8gfVxyXG59XHJcblxyXG5AbWl4aW4gcnRsKCkge1xyXG4gICRyb290OiAjeyZ9O1xyXG5cclxuICBAYXQtcm9vdCAje2FkZC1yb290LXNlbGVjdG9yKCRyb290LCBcIltkaXI9cnRsXVwiKX0ge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gbHRyKCkge1xyXG4gIEBjb250ZW50O1xyXG59XHJcblxyXG5cclxuLy8gU1ZHIEJhY2tncm91bmQgSW1hZ2UgTWl4aW5cclxuLy8gQHBhcmFtIHtzdHJpbmd9ICRzdmdcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5AbWl4aW4gc3ZnLWJhY2tncm91bmQtaW1hZ2UoJHN2ZywgJGZsaXAtcnRsOiBmYWxzZSkge1xyXG4gICR1cmw6IHVybC1lbmNvZGUoJHN2Zyk7XHJcbiAgJHZpZXdCb3g6IHN0ci1zcGxpdChzdHItZXh0cmFjdCgkc3ZnLCBcInZpZXdCb3g9J1wiLCBcIidcIiksIFwiIFwiKTtcclxuXHJcbiAgQGlmICRmbGlwLXJ0bCAhPSB0cnVlIG9yICR2aWV3Qm94ID09IG51bGwge1xyXG4gICAgQGluY2x1ZGUgbXVsdGktZGlyKCkge1xyXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWw7Y2hhcnNldD11dGYtOCwjeyR1cmx9XCIpO1xyXG4gICAgfVxyXG4gIH0gQGVsc2Uge1xyXG4gICAgJHRyYW5zZm9ybTogXCJ0cmFuc2Zvcm09J3RyYW5zbGF0ZSgje250aCgkdmlld0JveCwgMyl9LCAwKSBzY2FsZSgtMSwgMSknXCI7XHJcbiAgICAkZmxpcHBlZC11cmw6ICRzdmc7XHJcbiAgICAkZmxpcHBlZC11cmw6IHN0ci1yZXBsYWNlKCRmbGlwcGVkLXVybCwgXCI8cGF0aFwiLCBcIjxwYXRoICN7JHRyYW5zZm9ybX1cIik7XHJcbiAgICAkZmxpcHBlZC11cmw6IHN0ci1yZXBsYWNlKCRmbGlwcGVkLXVybCwgXCI8bGluZVwiLCBcIjxsaW5lICN7JHRyYW5zZm9ybX1cIik7XHJcbiAgICAkZmxpcHBlZC11cmw6IHN0ci1yZXBsYWNlKCRmbGlwcGVkLXVybCwgXCI8cG9seWdvblwiLCBcIjxwb2x5Z29uICN7JHRyYW5zZm9ybX1cIik7XHJcbiAgICAkZmxpcHBlZC11cmw6IHVybC1lbmNvZGUoJGZsaXBwZWQtdXJsKTtcclxuXHJcbiAgICBAaW5jbHVkZSBsdHIgKCkge1xyXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWw7Y2hhcnNldD11dGYtOCwjeyR1cmx9XCIpO1xyXG4gICAgfVxyXG4gICAgQGluY2x1ZGUgcnRsKCkge1xyXG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWw7Y2hhcnNldD11dGYtOCwjeyRmbGlwcGVkLXVybH1cIik7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vLyBBZGQgcHJvcGVydHkgaG9yaXpvbnRhbFxyXG4vLyBAcGFyYW0ge3N0cmluZ30gJHN0YXJ0XHJcbi8vIEBwYXJhbSB7c3RyaW5nfSAkZW5kXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuQG1peGluIHByb3BlcnR5LWhvcml6b250YWwoJHByb3AsICRzdGFydCwgJGVuZDogJHN0YXJ0KSB7XHJcbiAgQGlmICRzdGFydCA9PSAwIGFuZCAkZW5kID09IDAge1xyXG4gICAgI3skcHJvcH0tbGVmdDogJHN0YXJ0O1xyXG4gICAgI3skcHJvcH0tcmlnaHQ6ICRlbmQ7XHJcblxyXG4gIH0gQGVsc2Uge1xyXG4gICAgI3skcHJvcH0tbGVmdDogJHN0YXJ0O1xyXG4gICAgI3skcHJvcH0tcmlnaHQ6ICRlbmQ7XHJcblxyXG4gICAgQGF0LXJvb3Qge1xyXG4gICAgICBAc3VwcG9ydHMgKChtYXJnaW4taW5saW5lLXN0YXJ0OiAwKSBvciAoLXdlYmtpdC1tYXJnaW4tc3RhcnQ6IDApKSB7XHJcbiAgICAgICAgJiB7XHJcbiAgICAgICAgICBAaWYgJHN0YXJ0ICE9IG51bGwge1xyXG4gICAgICAgICAgICAjeyRwcm9wfS1sZWZ0OiB1bnNldDtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIEBpZiAkZW5kICE9IG51bGwge1xyXG4gICAgICAgICAgICAjeyRwcm9wfS1yaWdodDogdW5zZXQ7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgLXdlYmtpdC0jeyRwcm9wfS1zdGFydDogJHN0YXJ0O1xyXG4gICAgICAgICAgI3skcHJvcH0taW5saW5lLXN0YXJ0OiAkc3RhcnQ7XHJcbiAgICAgICAgICAtd2Via2l0LSN7JHByb3B9LWVuZDogJGVuZDtcclxuICAgICAgICAgICN7JHByb3B9LWlubGluZS1lbmQ6ICRlbmQ7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vLyBBZGQgcHJvcGVydHkgZm9yIGFsbCBkaXJlY3Rpb25zXHJcbi8vIEBwYXJhbSB7c3RyaW5nfSAkcHJvcFxyXG4vLyBAcGFyYW0ge3N0cmluZ30gJHRvcFxyXG4vLyBAcGFyYW0ge3N0cmluZ30gJGVuZFxyXG4vLyBAcGFyYW0ge3N0cmluZ30gJGJvdHRvbVxyXG4vLyBAcGFyYW0ge3N0cmluZ30gJHN0YXJ0XHJcbi8vIEBwYXJhbSB7Ym9vbGVhbn0gJGNvbnRlbnQgaW5jbHVkZSBjb250ZW50IG9yIHVzZSBkZWZhdWx0XHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuQG1peGluIHByb3BlcnR5KCRwcm9wLCAkdG9wLCAkZW5kOiAkdG9wLCAkYm90dG9tOiAkdG9wLCAkc3RhcnQ6ICRlbmQpIHtcclxuICBAaW5jbHVkZSBwcm9wZXJ0eS1ob3Jpem9udGFsKCRwcm9wLCAkc3RhcnQsICRlbmQpO1xyXG4gICN7JHByb3B9LXRvcDogJHRvcDtcclxuICAjeyRwcm9wfS1ib3R0b206ICRib3R0b207XHJcbn1cclxuXHJcbi8vIEFkZCBwYWRkaW5nIGhvcml6b250YWxcclxuLy8gQHBhcmFtIHtzdHJpbmd9ICRzdGFydFxyXG4vLyBAcGFyYW0ge3N0cmluZ30gJGVuZFxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbkBtaXhpbiBwYWRkaW5nLWhvcml6b250YWwoJHN0YXJ0LCAkZW5kOiAkc3RhcnQpIHtcclxuICBAaW5jbHVkZSBwcm9wZXJ0eS1ob3Jpem9udGFsKHBhZGRpbmcsICRzdGFydCwgJGVuZCk7XHJcbn1cclxuXHJcbi8vIEFkZCBwYWRkaW5nIGZvciBhbGwgZGlyZWN0aW9uc1xyXG4vLyBAcGFyYW0ge3N0cmluZ30gJHRvcFxyXG4vLyBAcGFyYW0ge3N0cmluZ30gJGVuZFxyXG4vLyBAcGFyYW0ge3N0cmluZ30gJGJvdHRvbVxyXG4vLyBAcGFyYW0ge3N0cmluZ30gJHN0YXJ0XHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuQG1peGluIHBhZGRpbmcoJHRvcCwgJGVuZDogJHRvcCwgJGJvdHRvbTogJHRvcCwgJHN0YXJ0OiAkZW5kKSB7XHJcbiAgQGluY2x1ZGUgcHJvcGVydHkocGFkZGluZywgJHRvcCwgJGVuZCwgJGJvdHRvbSwgJHN0YXJ0KTtcclxufVxyXG5cclxuLy8gQWRkIG1hcmdpbiBob3Jpem9udGFsXHJcbi8vIEBwYXJhbSB7c3RyaW5nfSAkc3RhcnRcclxuLy8gQHBhcmFtIHtzdHJpbmd9ICRlbmRcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5AbWl4aW4gbWFyZ2luLWhvcml6b250YWwoJHN0YXJ0LCAkZW5kOiAkc3RhcnQpIHtcclxuICBAaW5jbHVkZSBwcm9wZXJ0eS1ob3Jpem9udGFsKG1hcmdpbiwgJHN0YXJ0LCAkZW5kKTtcclxufVxyXG5cclxuLy8gQWRkIG1hcmdpbiBmb3IgYWxsIGRpcmVjdGlvbnNcclxuLy8gQHBhcmFtIHtzdHJpbmd9ICR0b3BcclxuLy8gQHBhcmFtIHtzdHJpbmd9ICRlbmRcclxuLy8gQHBhcmFtIHtzdHJpbmd9ICRib3R0b21cclxuLy8gQHBhcmFtIHtzdHJpbmd9ICRzdGFydFxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbkBtaXhpbiBtYXJnaW4oJHRvcCwgJGVuZDogJHRvcCwgJGJvdHRvbTogJHRvcCwgJHN0YXJ0OiAkZW5kKSB7XHJcbiAgQGluY2x1ZGUgcHJvcGVydHkobWFyZ2luLCAkdG9wLCAkZW5kLCAkYm90dG9tLCAkc3RhcnQpO1xyXG59XHJcblxyXG4vLyBBZGQgcG9zaXRpb24gaG9yaXpvbnRhbFxyXG4vLyBAcGFyYW0ge3N0cmluZ30gJHN0YXJ0IC0gYW1vdW50IHRvIHBvc2l0aW9uIHN0YXJ0XHJcbi8vIEBwYXJhbSB7c3RyaW5nfSAkZW5kIC0gYW1vdW50IHRvIGxlZnQ6IDA7IGVuZFxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbkBtaXhpbiBwb3NpdGlvbi1ob3Jpem9udGFsKCRzdGFydDogbnVsbCwgJGVuZDogbnVsbCkge1xyXG4gIEBpZiAkc3RhcnQgPT0gJGVuZCB7XHJcbiAgICBAaW5jbHVkZSBtdWx0aS1kaXIoKSB7XHJcbiAgICAgIGxlZnQ6ICRzdGFydDtcclxuICAgICAgcmlnaHQ6ICRlbmQ7XHJcbiAgICB9XHJcbiAgfSBAZWxzZSB7XHJcbiAgICBAaW5jbHVkZSBsdHIoKSB7XHJcbiAgICAgIGxlZnQ6ICRzdGFydDtcclxuICAgICAgcmlnaHQ6ICRlbmQ7XHJcbiAgICB9XHJcbiAgICBAaW5jbHVkZSBydGwoKSB7XHJcbiAgICAgIGxlZnQ6IHVuc2V0O1xyXG4gICAgICByaWdodDogdW5zZXQ7XHJcblxyXG4gICAgICBsZWZ0OiAkZW5kO1xyXG4gICAgICByaWdodDogJHN0YXJ0O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLy8gQWRkIHBvc2l0aW9uIGZvciBhbGwgZGlyZWN0aW9uc1xyXG4vLyBAcGFyYW0ge3N0cmluZ30gJHRvcFxyXG4vLyBAcGFyYW0ge3N0cmluZ30gJGVuZFxyXG4vLyBAcGFyYW0ge3N0cmluZ30gJGJvdHRvbVxyXG4vLyBAcGFyYW0ge3N0cmluZ30gJHN0YXJ0XHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuQG1peGluIHBvc2l0aW9uKCR0b3A6IG51bGwsICRlbmQ6IG51bGwsICRib3R0b206IG51bGwsICRzdGFydDogbnVsbCkge1xyXG4gIEBpbmNsdWRlIHBvc2l0aW9uLWhvcml6b250YWwoJHN0YXJ0LCAkZW5kKTtcclxuICB0b3A6ICR0b3A7XHJcbiAgYm90dG9tOiAkYm90dG9tO1xyXG59XHJcblxyXG4vLyBBZGQgYm9yZGVyIGZvciBhbGwgZGlyZWN0aW9uc1xyXG4vLyBAcGFyYW0ge3N0cmluZ30gJHRvcFxyXG4vLyBAcGFyYW0ge3N0cmluZ30gJGVuZFxyXG4vLyBAcGFyYW0ge3N0cmluZ30gJGJvdHRvbVxyXG4vLyBAcGFyYW0ge3N0cmluZ30gJHN0YXJ0XHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuQG1peGluIGJvcmRlcigkdG9wLCAkZW5kOiAkdG9wLCAkYm90dG9tOiAkdG9wLCAkc3RhcnQ6ICRlbmQpIHtcclxuICBAaW5jbHVkZSBwcm9wZXJ0eShib3JkZXIsICR0b3AsICRlbmQsICRib3R0b20sICRzdGFydCk7XHJcbn1cclxuXHJcbi8vIEFkZCBib3JkZXIgcmFkaXVzIGZvciBhbGwgZGlyZWN0aW9uc1xyXG4vLyBAcGFyYW0ge3N0cmluZ30gJHRvcC1zdGFydFxyXG4vLyBAcGFyYW0ge3N0cmluZ30gJHRvcC1lbmRcclxuLy8gQHBhcmFtIHtzdHJpbmd9ICRib3R0b20tZW5kXHJcbi8vIEBwYXJhbSB7c3RyaW5nfSAkYm90dG9tLXN0YXJ0XHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuQG1peGluIGJvcmRlci1yYWRpdXMoJHRvcC1zdGFydCwgJHRvcC1lbmQ6ICR0b3Atc3RhcnQsICRib3R0b20tZW5kOiAkdG9wLXN0YXJ0LCAkYm90dG9tLXN0YXJ0OiAkdG9wLWVuZCkge1xyXG4gIEBpZiAkdG9wLXN0YXJ0ID09ICR0b3AtZW5kIGFuZCAkdG9wLXN0YXJ0ID09ICRib3R0b20tZW5kIGFuZCAkdG9wLXN0YXJ0ID09ICRib3R0b20tc3RhcnQge1xyXG4gICAgQGluY2x1ZGUgbXVsdGktZGlyKCkge1xyXG4gICAgICBib3JkZXItcmFkaXVzOiAkdG9wLXN0YXJ0O1xyXG4gICAgfVxyXG4gIH0gQGVsc2Uge1xyXG4gICAgQGluY2x1ZGUgbHRyKCkge1xyXG4gICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAkdG9wLXN0YXJ0O1xyXG4gICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogJHRvcC1lbmQ7XHJcbiAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAkYm90dG9tLWVuZDtcclxuICAgICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogJGJvdHRvbS1zdGFydDtcclxuICAgIH1cclxuXHJcbiAgICBAaW5jbHVkZSBydGwoKSB7XHJcbiAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6ICR0b3AtZW5kO1xyXG4gICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogJHRvcC1zdGFydDtcclxuICAgICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6ICRib3R0b20tc3RhcnQ7XHJcbiAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6ICRib3R0b20tZW5kO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLy8gQWRkIGRpcmVjdGlvbiBmb3IgYWxsIGRpcmVjdGlvbnNcclxuLy8gQHBhcmFtIHtzdHJpbmd9ICRkaXIgLSBEaXJlY3Rpb24gb24gTFRSXHJcbkBtaXhpbiBkaXJlY3Rpb24oJGRpcikge1xyXG4gICRvdGhlci1kaXI6IG51bGw7XHJcblxyXG4gIEBpZiAkZGlyID09IGx0ciB7XHJcbiAgICAkb3RoZXItZGlyOiBydGw7XHJcbiAgfSBAZWxzZSB7XHJcbiAgICAkb3RoZXItZGlyOiBsdHI7XHJcbiAgfVxyXG5cclxuICBAaW5jbHVkZSBsdHIoKSB7XHJcbiAgICBkaXJlY3Rpb246ICRkaXI7XHJcbiAgfVxyXG4gIEBpbmNsdWRlIHJ0bCgpIHtcclxuICAgIGRpcmVjdGlvbjogJG90aGVyLWRpcjtcclxuICB9XHJcbn1cclxuXHJcbi8vIEFkZCBmbG9hdCBmb3IgYWxsIGRpcmVjdGlvbnNcclxuLy8gQHBhcmFtIHtzdHJpbmd9ICRzaWRlXHJcbi8vIEBwYXJhbSB7c3RyaW5nfSAkZGVjb3JhdG9yIC0gIWltcG9ydGFudFxyXG5AbWl4aW4gZmxvYXQoJHNpZGUsICRkZWNvcmF0b3I6IG51bGwpIHtcclxuICBAaWYgJHNpZGUgPT0gc3RhcnQge1xyXG4gICAgQGluY2x1ZGUgbHRyKCkge1xyXG4gICAgICBmbG9hdDogbGVmdCAkZGVjb3JhdG9yO1xyXG4gICAgfVxyXG4gICAgQGluY2x1ZGUgcnRsKCkge1xyXG4gICAgICBmbG9hdDogcmlnaHQgJGRlY29yYXRvcjtcclxuICAgIH1cclxuICB9IEBlbHNlIGlmICRzaWRlID09IGVuZCB7XHJcbiAgICBAaW5jbHVkZSBsdHIoKSB7XHJcbiAgICAgIGZsb2F0OiByaWdodCAkZGVjb3JhdG9yO1xyXG4gICAgfVxyXG4gICAgQGluY2x1ZGUgcnRsKCkge1xyXG4gICAgICBmbG9hdDogbGVmdCAkZGVjb3JhdG9yO1xyXG4gICAgfVxyXG4gIH0gQGVsc2Uge1xyXG4gICAgQGluY2x1ZGUgbXVsdGktZGlyKCkge1xyXG4gICAgICBmbG9hdDogJHNpZGUgJGRlY29yYXRvcjtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBiYWNrZ3JvdW5kLXBvc2l0aW9uKCRob3Jpem9udGFsLCAkaG9yaXpvbnRhbC1hbW91bnQ6IG51bGwsICR2ZXJ0aWNhbDogbnVsbCwgJHZlcnRpY2FsLWFtb3VudDogbnVsbCkge1xyXG4gIEBpZiAkaG9yaXpvbnRhbCA9PSBzdGFydCBvciAkaG9yaXpvbnRhbCA9PSBlbmQge1xyXG4gICAgJGhvcml6b250YWwtbHRyOiBudWxsO1xyXG4gICAgJGhvcml6b250YWwtcnRsOiBudWxsO1xyXG4gICAgQGlmICRob3Jpem9udGFsID09IHN0YXJ0IHtcclxuICAgICAgJGhvcml6b250YWwtbHRyOiBsZWZ0O1xyXG4gICAgICAkaG9yaXpvbnRhbC1ydGw6IHJpZ2h0O1xyXG4gICAgfSBAZWxzZSB7XHJcbiAgICAgICRob3Jpem9udGFsLWx0cjogcmlnaHQ7XHJcbiAgICAgICRob3Jpem9udGFsLXJ0bDogbGVmdDtcclxuICAgIH1cclxuXHJcbiAgICBAaW5jbHVkZSBsdHIoKSB7XHJcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246ICRob3Jpem9udGFsLWx0ciAkaG9yaXpvbnRhbC1hbW91bnQgJHZlcnRpY2FsICR2ZXJ0aWNhbC1hbW91bnQ7XHJcbiAgICB9XHJcbiAgICBAaW5jbHVkZSBydGwoKSB7XHJcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246ICRob3Jpem9udGFsLXJ0bCAkaG9yaXpvbnRhbC1hbW91bnQgJHZlcnRpY2FsICR2ZXJ0aWNhbC1hbW91bnQ7XHJcbiAgICB9XHJcbiAgfSBAZWxzZSB7XHJcbiAgICBAaW5jbHVkZSBtdWx0aS1kaXIoKSB7XHJcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246ICRob3Jpem9udGFsICRob3Jpem9udGFsLWFtb3VudCAkdmVydGljYWwgJHZlcnRpY2FsLWFtb3VudDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiB0cmFuc2Zvcm0tb3JpZ2luKCR4LWF4aXMsICR5LWF4aXM6IG51bGwpIHtcclxuICBAaWYgJHgtYXhpcyA9PSBzdGFydCB7XHJcbiAgICBAaW5jbHVkZSBsdHIoKSB7XHJcbiAgICAgIHRyYW5zZm9ybS1vcmlnaW46IGxlZnQgJHktYXhpcztcclxuICAgIH1cclxuICAgIEBpbmNsdWRlIHJ0bCgpIHtcclxuICAgICAgdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgJHktYXhpcztcclxuICAgIH1cclxuICB9IEBlbHNlIGlmICR4LWF4aXMgPT0gZW5kIHtcclxuICAgIEBpbmNsdWRlIGx0cigpIHtcclxuICAgICAgdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgJHktYXhpcztcclxuICAgIH1cclxuICAgIEBpbmNsdWRlIHJ0bCgpIHtcclxuICAgICAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdCAkeS1heGlzO1xyXG4gICAgfVxyXG4gIH0gQGVsc2UgaWYgJHgtYXhpcyA9PSBsZWZ0IG9yICR4LWF4aXMgPT0gcmlnaHQge1xyXG4gICAgQGluY2x1ZGUgbXVsdGktZGlyKCkge1xyXG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiAkeC1heGlzICR5LWF4aXM7XHJcbiAgICB9XHJcbiAgfSBAZWxzZSB7XHJcbiAgICBAaW5jbHVkZSBsdHIoKSB7XHJcbiAgICAgIHRyYW5zZm9ybS1vcmlnaW46ICR4LWF4aXMgJHktYXhpcztcclxuICAgIH1cclxuICAgIEBpbmNsdWRlIHJ0bCgpIHtcclxuICAgICAgdHJhbnNmb3JtLW9yaWdpbjogY2FsYygxMDAlIC0gI3skeC1heGlzfSkgJHktYXhpcztcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8vIEFkZCB0cmFuc2Zvcm0gZm9yIGFsbCBkaXJlY3Rpb25zXHJcbi8vIEBwYXJhbSB7c3RyaW5nfSAkdHJhbnNmb3JtcyAtIGNvbW1hIHNlcGFyYXRlZCBsaXN0IG9mIHRyYW5zZm9ybXNcclxuQG1peGluIHRyYW5zZm9ybSgkdHJhbnNmb3Jtcy4uLikge1xyXG4gICRleHRyYTogbnVsbDtcclxuXHJcbiAgJHg6IG51bGw7XHJcbiAgJGx0ci10cmFuc2xhdGU6IG51bGw7XHJcbiAgJHJ0bC10cmFuc2xhdGU6IG51bGw7XHJcblxyXG4gIEBlYWNoICR0cmFuc2Zvcm0gaW4gJHRyYW5zZm9ybXMge1xyXG4gICAgQGlmIChzdHItaW5kZXgoJHRyYW5zZm9ybSwgdHJhbnNsYXRlM2QpKSB7XHJcbiAgICAgICR0cmFuc2Zvcm06IHN0ci1yZXBsYWNlKCR0cmFuc2Zvcm0sICd0cmFuc2xhdGUzZCgnKTtcclxuICAgICAgJHRyYW5zZm9ybTogc3RyLXJlcGxhY2UoJHRyYW5zZm9ybSwgJyknKTtcclxuXHJcbiAgICAgICRjb29yZGluYXRlczogc3RyLXNwbGl0KCR0cmFuc2Zvcm0sICcsJyk7XHJcblxyXG4gICAgICAkeDogbnRoKCRjb29yZGluYXRlcywgMSk7XHJcbiAgICAgICR5OiBudGgoJGNvb3JkaW5hdGVzLCAyKTtcclxuICAgICAgJHo6IG50aCgkY29vcmRpbmF0ZXMsIDMpO1xyXG5cclxuICAgICAgJGx0ci10cmFuc2xhdGU6IHRyYW5zbGF0ZTNkKCR4LCAkeSwgJHopO1xyXG4gICAgICAkcnRsLXRyYW5zbGF0ZTogdHJhbnNsYXRlM2QoY2FsYygtMSAqICN7JHh9KSwgJHksICR6KTtcclxuICAgIH0gQGVsc2Uge1xyXG4gICAgICBAaWYgJGV4dHJhID09IG51bGwge1xyXG4gICAgICAgICRleHRyYTogJHRyYW5zZm9ybTtcclxuICAgICAgfSBAZWxzZSB7XHJcbiAgICAgICAgJGV4dHJhOiAkZXh0cmEgJHRyYW5zZm9ybTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQGlmICR4ID09ICcwJyBvciAkeCA9PSBudWxsIHtcclxuICAgIEBpbmNsdWRlIG11bHRpLWRpcigpIHtcclxuICAgICAgdHJhbnNmb3JtOiAkbHRyLXRyYW5zbGF0ZSAkZXh0cmE7XHJcbiAgICB9XHJcbiAgfSBAZWxzZSB7XHJcbiAgICBAaW5jbHVkZSBsdHIoKSB7XHJcbiAgICAgIHRyYW5zZm9ybTogJGx0ci10cmFuc2xhdGUgJGV4dHJhO1xyXG4gICAgfVxyXG5cclxuICAgIEBpbmNsdWRlIHJ0bCgpIHtcclxuICAgICAgdHJhbnNmb3JtOiAkcnRsLXRyYW5zbGF0ZSAkZXh0cmE7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIi8qKlxyXG4gKiBJbXBvcnRlZCBpb25pYyBtaXhpbnMgZm9yIFNDU1MgZnJvbSBkaWZmZXJlbnQgY29tcG9uZW50c1xyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqIEV4dHJhY3RlZCBmcm9tXHJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9pb25pYy10ZWFtL2lvbmljLWZyYW1ld29yay9ibG9iL21hc3Rlci9jb3JlL3NyYy9jb21wb25lbnRzL2dyaWQvZ3JpZC5taXhpbnMuc2Nzc1xyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vaW9uaWMtdGVhbS9pb25pYy1mcmFtZXdvcmsvYmxvYi9tYXN0ZXIvY29yZS9zcmMvY29tcG9uZW50cy9pdGVtL2l0ZW0ubWl4aW5zLnNjc3NcclxuICovXHJcblxyXG4vLyBSZXNwb25zaXZlIE1peGluc1xyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuXHJcbi8vIENyZWF0ZXMgYSBmaXhlZCB3aWR0aCBmb3IgdGhlIGdyaWQgYmFzZWQgb24gdGhlIHNjcmVlbiBzaXplXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuQG1peGluIG1ha2UtZ3JpZC13aWR0aHMoJHdpZHRoczogJGdyaWQtd2lkdGhzLCAkYnJlYWtwb2ludHM6ICRzY3JlZW4tYnJlYWtwb2ludHMpIHtcclxuICBAZWFjaCAkYnJlYWtwb2ludCwgJHdpZHRoIGluICR3aWR0aHMge1xyXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkYnJlYWtwb2ludCwgJGJyZWFrcG9pbnRzKSB7XHJcbiAgICAgIHdpZHRoOiAkd2lkdGg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBtYXgtd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcblxyXG4vLyBBZGRzIHBhZGRpbmcgdG8gdGhlIGVsZW1lbnQgYmFzZWQgb24gYnJlYWtwb2ludHNcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5AbWl4aW4gbWFrZS1icmVha3BvaW50LXBhZGRpbmcoJHBhZGRpbmdzKSB7XHJcbiAgQGVhY2ggJGJyZWFrcG9pbnQgaW4gbWFwLWtleXMoJHBhZGRpbmdzKSB7XHJcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRicmVha3BvaW50KSB7XHJcbiAgICAgICRwYWRkaW5nOiBtYXAtZ2V0KCRwYWRkaW5ncywgJGJyZWFrcG9pbnQpO1xyXG5cclxuICAgICAgQGluY2x1ZGUgcGFkZGluZygkcGFkZGluZyk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5cclxuLy8gSXRlbSBNaXhpbnNcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbkBtaXhpbiBpdGVtLXB1c2gtc3ZnLXVybCgkZmlsbCkge1xyXG4gICRpdGVtLWRldGFpbC1wdXNoLXN2ZzogXCI8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nMCAwIDEyIDIwJz48cGF0aCBkPSdNMiwyMGwtMi0ybDgtOEwwLDJsMi0ybDEwLDEwTDIsMjB6JyBmaWxsPScjeyRmaWxsfScvPjwvc3ZnPlwiO1xyXG5cclxuICBAaW5jbHVkZSBzdmctYmFja2dyb3VuZC1pbWFnZSgkaXRlbS1kZXRhaWwtcHVzaC1zdmcsIHRydWUpO1xyXG59XHJcbiIsIkB1c2UgXCJzYXNzOm1hdGhcIiBhcyBtYXRoO1xyXG5cclxuLyoqXHJcbiAqIEFwcCBjdXN0b20gbWl4aW5zIGZvciBTQ1NTXHJcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogUGxhY2UgaGVyZSBvdXIgY3VzdG9tIG1peGlucy5cclxuICovXHJcblxyXG4vLyBNaXhlcyBhIGNvbG9yIHdpdGggYmxhY2sgdG8gY3JlYXRlIGl0cyBzaGFkZS5cclxuLy8gRGVmYXVsdCB0byBib290c3RyYXAgbGV2ZWwgNi5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuQGZ1bmN0aW9uIGdldC1jb2xvci1zaGFkZS1wZXJjZW50KCRjb2xvciwgJHBlcmNlbnQ6IDQ4JSkge1xyXG4gICAgQHJldHVybiBtaXgoIzAwMCwgJGNvbG9yLCAkcGVyY2VudCk7XHJcbiAgfVxyXG5cclxuICAvLyBNaXhlcyBhIGNvbG9yIHdpdGggd2hpdGUgdG8gY3JlYXRlIGl0cyB0aW50LlxyXG4gIC8vIERlZmF1bHQgdG8gYm9vdHN0cmFwIGxldmVsIC0xMC5cclxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIEBmdW5jdGlvbiBnZXQtY29sb3ItdGludC1wZXJjZW50KCRjb2xvciwgJHBlcmNlbnQ6IDgwJSkge1xyXG4gICAgQHJldHVybiBtaXgoI2ZmZiwgJGNvbG9yLCAkcGVyY2VudCk7XHJcbiAgfVxyXG5cclxuICAvLyBJb25pYyBDb2xvcnNcclxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIC8vIEdlbmVyYXRlcyB0aGUgY29sb3IgY2xhc3NlcyBhbmQgdmFyaWFibGVzIGJhc2VkIG9uIHRoZVxyXG4gIC8vIGNvbG9ycyBtYXBcclxuXHJcbiAgQG1peGluIGdlbmVyYXRlLWNvbG9yKCRjb2xvci1uYW1lLCAkY29sb3JzKSB7XHJcbiAgICAgICRiYXNlOiBtYXAtZ2V0KCRjb2xvcnMsICRjb2xvci1uYW1lKTtcclxuICAgICAgJGxpZ2h0OiBtYXAtZ2V0KCRiYXNlLCAnbGlnaHQnKTtcclxuXHJcbiAgICAgIEBpbmNsdWRlIGdlbmVyYXRlLWNvbG9yLXZhcmlhbnRzKCRjb2xvci1uYW1lLCAkbGlnaHQpO1xyXG5cclxuICAgICAgYm9keS5kYXJrIHtcclxuICAgICAgICAgICRkYXJrOiBtYXAtZ2V0KCRiYXNlLCAnZGFyaycpO1xyXG4gICAgICAgICAgJGRhcms6IG1peCgkbGlnaHQsIHdoaXRlLCA4MCUpICFkZWZhdWx0O1xyXG4gICAgICAgICAgQGluY2x1ZGUgZ2VuZXJhdGUtY29sb3ItdmFyaWFudHMoJGNvbG9yLW5hbWUsICRkYXJrKTtcclxuICAgICAgfVxyXG4gIH1cclxuXHJcbiAgQG1peGluIGdlbmVyYXRlLWNvbG9yLXZhcmlhbnRzKCRjb2xvci1uYW1lLCAkYmFzZSkge1xyXG4gICAgICAkY29udHJhc3Q6IGdldF9jb250cmFzdF9jb2xvcigkYmFzZSk7XHJcbiAgICAgICRzaGFkZTogZ2V0LWNvbG9yLXNoYWRlLXBlcmNlbnQoJGJhc2UpO1xyXG4gICAgICAkdGludDogZ2V0LWNvbG9yLXRpbnQtcGVyY2VudCgkYmFzZSk7XHJcblxyXG4gICAgICAtLSN7JGNvbG9yLW5hbWV9OiAjeyRiYXNlfTtcclxuICAgICAgLS0jeyRjb2xvci1uYW1lfS1zaGFkZTogI3skc2hhZGV9O1xyXG4gICAgICAtLSN7JGNvbG9yLW5hbWV9LXRpbnQ6ICN7JHRpbnR9O1xyXG4gICAgICAtLSN7JGNvbG9yLW5hbWV9LWNvbnRyYXN0OiAjeyRjb250cmFzdH07XHJcblxyXG4gICAgICAvLyBJbnRlcm5hbCBpb25pYyB1c2Ugb25seS5cclxuICAgICAgLS1pb24tY29sb3ItI3skY29sb3ItbmFtZX06IHZhcigtLSN7JGNvbG9yLW5hbWV9KTtcclxuICAgICAgLS1pb24tY29sb3ItI3skY29sb3ItbmFtZX0tYmFzZTogdmFyKC0taW9uLWNvbG9yLSN7JGNvbG9yLW5hbWV9KTtcclxuICAgICAgLS1pb24tY29sb3ItI3skY29sb3ItbmFtZX0tcmdiOiAje2NvbG9yLXRvLXJnYi1saXN0KCRiYXNlKX07XHJcbiAgICAgIC0taW9uLWNvbG9yLSN7JGNvbG9yLW5hbWV9LWNvbnRyYXN0OiAjeyRjb250cmFzdH07XHJcbiAgICAgIC0taW9uLWNvbG9yLSN7JGNvbG9yLW5hbWV9LWNvbnRyYXN0LXJnYjogI3tjb2xvci10by1yZ2ItbGlzdCgkY29udHJhc3QpfTtcclxuICAgICAgLS1pb24tY29sb3ItI3skY29sb3ItbmFtZX0tc2hhZGU6ICN7JHNoYWRlfTtcclxuICAgICAgLS1pb24tY29sb3ItI3skY29sb3ItbmFtZX0tdGludDogI3skdGludH07XHJcblxyXG4gICAgICAuaW9uLWNvbG9yLSN7JGNvbG9yLW5hbWV9IHtcclxuICAgICAgICAgIC0taW9uLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItI3skY29sb3ItbmFtZX0pO1xyXG4gICAgICAgICAgLS1pb24tY29sb3ItYmFzZTogdmFyKC0taW9uLWNvbG9yLSN7JGNvbG9yLW5hbWV9LWJhc2UpO1xyXG4gICAgICAgICAgLS1pb24tY29sb3ItcmdiOiB2YXIoLS1pb24tY29sb3ItI3skY29sb3ItbmFtZX0tcmdiKTtcclxuICAgICAgICAgIC0taW9uLWNvbG9yLWNvbnRyYXN0OiB2YXIoLS1pb24tY29sb3ItI3skY29sb3ItbmFtZX0tY29udHJhc3QpO1xyXG4gICAgICAgICAgLS1pb24tY29sb3ItY29udHJhc3QtcmdiOiB2YXIoLS1pb24tY29sb3ItI3skY29sb3ItbmFtZX0tY29udHJhc3QtcmdiKTtcclxuICAgICAgICAgIC0taW9uLWNvbG9yLXNoYWRlOiB2YXIoLS1pb24tY29sb3ItI3skY29sb3ItbmFtZX0tc2hhZGUpO1xyXG4gICAgICAgICAgLS1pb24tY29sb3ItdGludDogdmFyKC0taW9uLWNvbG9yLSN7JGNvbG9yLW5hbWV9LXRpbnQpO1xyXG4gICAgICB9XHJcbiAgfVxyXG5cclxuXHJcbiBAbWl4aW4gY29yZS1mb2N1cygpIHtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgICAgQGluY2x1ZGUgcG9zaXRpb24oMCwgMCwgMCwgMCk7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgIEBpbmNsdWRlIGNvcmUtZm9jdXMtc3R5bGUoKTtcclxuICAgIH1cclxuIH1cclxuXHJcbiBAbWl4aW4gY29yZS1mb2N1cy1zdHlsZSgpIHtcclxuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCB2YXIoLS1hMTF5LWZvY3VzLXdpZHRoKSAxcHggdmFyKC0tYTExeS1mb2N1cy1jb2xvcik7XHJcbiAgICAvLyBUaGlja2VyIG9wdGlvbjpcclxuICAgIC8vIGJvcmRlcjogdmFyKC0tYTExeS1mb2N1cy13aWR0aCkgc29saWQgdmFyKC0tYTExeS1mb2N1cy1jb2xvcik7XHJcbn1cclxuXHJcbkBtaXhpbiBjb3JlLXRyYW5zaXRpb24oJHByb3BlcnRpZXM6IGFsbCwgJGR1cmF0aW9uOiA1MDBtcywgJHRpbWluZy1mdW5jdGlvbjogZWFzZS1pbi1vdXQpIHtcclxuICAgICR0cmFuc2l0aW9uczogKCk7XHJcbiAgICBAZWFjaCAkcHJvcGVydHkgaW4gJHByb3BlcnRpZXMge1xyXG4gICAgICAkdHJhbnNpdGlvbnM6IGFwcGVuZCgkdHJhbnNpdGlvbnMsICRwcm9wZXJ0eSAkZHVyYXRpb24gJHRpbWluZy1mdW5jdGlvbiwgY29tbWEpO1xyXG4gICAgfVxyXG5cclxuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogJHRyYW5zaXRpb25zO1xyXG4gICAgdHJhbnNpdGlvbjogJHRyYW5zaXRpb25zO1xyXG59XHJcblxyXG4vKipcclxuICogU2FtZSBhcyBpdGVtLXB1c2gtc3ZnLXVybCBidXQgYWRtaXRzIGZsaXAtcnRsXHJcbiAqL1xyXG5AbWl4aW4gcHVzaC1hcnJvdy1jb2xvcigkZmlsbDogNjI2MjYyLCAkZmxpcC1ydGw6IGZhbHNlKSB7XHJcbiAgICAkaXRlbS1kZXRhaWwtcHVzaC1zdmc6IFwiPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAxMiAyMCc+PHBhdGggZD0nTTIsMjBsLTItMmw4LThMMCwybDItMmwxMCwxMEwyLDIweicgZmlsbD0nI3skZmlsbH0nLz48L3N2Zz5cIjtcclxuXHJcbiAgICBAaW5jbHVkZSBzdmctYmFja2dyb3VuZC1pbWFnZSgkaXRlbS1kZXRhaWwtcHVzaC1zdmcsICRmbGlwLXJ0bCk7XHJcbn1cclxuXHJcbkBtaXhpbiBib3JkZXItc3RhcnQoJHB4LCAkdHlwZTogbnVsbCwgJGNvbG9yOiBudWxsKSB7XHJcbiAgICBAaW5jbHVkZSBwcm9wZXJ0eS1ob3Jpem9udGFsKGJvcmRlciwgJHB4ICR0eXBlICRjb2xvciwgbnVsbCk7XHJcbn1cclxuXHJcbkBtaXhpbiBib3JkZXItZW5kKCRweCwgJHR5cGU6IG51bGwsICRjb2xvcjogbnVsbCkge1xyXG4gICAgQGluY2x1ZGUgcHJvcGVydHktaG9yaXpvbnRhbChib3JkZXIsIG51bGwsICRweCAkdHlwZSAkY29sb3IpO1xyXG59XHJcblxyXG5AbWl4aW4gc2FmZS1hcmVhLWJvcmRlci1zdGFydCgkcHgsICR0eXBlLCAkY29sb3IpIHtcclxuICAgICRzYWZlLWFyZWEtcG9zaXRpb246IGNhbGModmFyKC0taW9uLXNhZmUtYXJlYS1sZWZ0KSArICN7JHB4fSk7XHJcblxyXG4gICAgQGluY2x1ZGUgYm9yZGVyLXN0YXJ0KCRzYWZlLWFyZWEtcG9zaXRpb24sICR0eXBlLCAkY29sb3IpO1xyXG59XHJcblxyXG5AbWl4aW4gc2FmZS1hcmVhLWJvcmRlci1lbmQoJHB4LCAkdHlwZSwgJGNvbG9yKSB7XHJcbiAgICAkc2FmZS1hcmVhLXBvc2l0aW9uOiBjYWxjKHZhcigtLWlvbi1zYWZlLWFyZWEtcmlnaHQpICsgI3skcHh9KTtcclxuXHJcbiAgICBAaW5jbHVkZSBib3JkZXItZW5kKCRzYWZlLWFyZWEtcG9zaXRpb24sICR0eXBlLCAkY29sb3IpO1xyXG59XHJcblxyXG5AbWl4aW4gc2FmZS1hcmVhLW1hcmdpbi1ob3Jpem9udGFsKCRzdGFydCwgJGVuZDogJHN0YXJ0KSB7XHJcbiAgICAkc2FmZS1hcmVhLWVuZDogbnVsbDtcclxuICAgICRzYWZlLWFyZWEtc3RhcnQ6IG51bGw7XHJcblxyXG4gICAgQGlmICgkZW5kKSB7XHJcbiAgICAgICAgJHNhZmUtYXJlYS1lbmQ6IGNhbGModmFyKC0taW9uLXNhZmUtYXJlYS1yaWdodCkgKyAjeyRlbmR9KTtcclxuICAgIH1cclxuICAgIEBpZiAoJHN0YXJ0KSB7XHJcbiAgICAgICAgJHNhZmUtYXJlYS1zdGFydDogY2FsYyh2YXIoLS1pb24tc2FmZS1hcmVhLWxlZnQpICsgI3skc3RhcnR9KTtcclxuICAgIH1cclxuXHJcbiAgICBAaW5jbHVkZSBtYXJnaW4taG9yaXpvbnRhbCgkc2FmZS1hcmVhLXN0YXJ0LCAkc2FmZS1hcmVhLWVuZCk7XHJcbn1cclxuXHJcbkBtaXhpbiBzYWZlLWFyZWEtbWFyZ2luLXN0YXJ0KCRzdGFydCwgJGVuZCkge1xyXG4gICAgJHNhZmUtYXJlYS1zdGFydDogY2FsYyh2YXIoLS1pb24tc2FmZS1hcmVhLWxlZnQpICsgI3skc3RhcnR9KTtcclxuXHJcbiAgICBAaW5jbHVkZSBtYXJnaW4taG9yaXpvbnRhbCgkc2FmZS1hcmVhLXN0YXJ0LCAkZW5kKTtcclxufVxyXG5cclxuQG1peGluIHNhZmUtYXJlYS1tYXJnaW4tZW5kKCRzdGFydCwgJGVuZCkge1xyXG4gICAgJHNhZmUtYXJlYS1lbmQ6IGNhbGModmFyKC0taW9uLXNhZmUtYXJlYS1yaWdodCkgKyAjeyRlbmR9KTtcclxuXHJcbiAgICBAaW5jbHVkZSBtYXJnaW4taG9yaXpvbnRhbCgkc3RhcnQsICRzYWZlLWFyZWEtZW5kKTtcclxufVxyXG5cclxuQG1peGluIHNhZmUtYXJlYS1wYWRkaW5nLWhvcml6b250YWwoJHN0YXJ0LCAkZW5kOiAkc3RhcnQpIHtcclxuICAgICRzYWZlLWFyZWEtZW5kOiBudWxsO1xyXG4gICAgJHNhZmUtYXJlYS1zdGFydDogbnVsbDtcclxuXHJcbiAgICBAaWYgKCRlbmQpIHtcclxuICAgICAgICAkc2FmZS1hcmVhLWVuZDogY2FsYyh2YXIoLS1pb24tc2FmZS1hcmVhLXJpZ2h0KSArICN7JGVuZH0pO1xyXG4gICAgfVxyXG4gICAgQGlmICgkc3RhcnQpIHtcclxuICAgICAgICAkc2FmZS1hcmVhLXN0YXJ0OiBjYWxjKHZhcigtLWlvbi1zYWZlLWFyZWEtbGVmdCkgKyAjeyRzdGFydH0pO1xyXG4gICAgfVxyXG5cclxuICAgIEBpbmNsdWRlIHBhZGRpbmctaG9yaXpvbnRhbCgkc2FmZS1hcmVhLXN0YXJ0LCAkc2FmZS1hcmVhLWVuZCk7XHJcbn1cclxuXHJcbkBtaXhpbiBzYWZlLWFyZWEtcGFkZGluZy1zdGFydCgkc3RhcnQsICRlbmQpIHtcclxuICAgICRzYWZlLWFyZWEtc3RhcnQ6IGNhbGModmFyKC0taW9uLXNhZmUtYXJlYS1sZWZ0KSArICN7JHN0YXJ0fSk7XHJcblxyXG4gICAgQGluY2x1ZGUgcGFkZGluZy1ob3Jpem9udGFsKCRzYWZlLWFyZWEtc3RhcnQsICRlbmQpO1xyXG59XHJcblxyXG5AbWl4aW4gc2FmZS1hcmVhLXBhZGRpbmctZW5kKCRzdGFydCwgJGVuZCkge1xyXG4gICAgJHNhZmUtYXJlYS1lbmQ6IGNhbGModmFyKC0taW9uLXNhZmUtYXJlYS1yaWdodCkgKyAjeyRlbmR9KTtcclxuXHJcbiAgICBAaW5jbHVkZSBwYWRkaW5nLWhvcml6b250YWwoJHN0YXJ0LCAkc2FmZS1hcmVhLWVuZCk7XHJcbn1cclxuXHJcbkBtaXhpbiBzYWZlLWFyZWEtcG9zaXRpb24oJHRvcDogbnVsbCwgJGVuZDogbnVsbCwgJGJvdHRvbTogbnVsbCwgJHN0YXJ0OiBudWxsKSB7XHJcbiAgICAkc2FmZS1hcmVhLXN0YXJ0OiBjYWxjKHZhcigtLWlvbi1zYWZlLWFyZWEtbGVmdCkgKyAjeyRzdGFydH0pO1xyXG4gICAgJHNhZmUtYXJlYS1lbmQ6IGNhbGModmFyKC0taW9uLXNhZmUtYXJlYS1yaWdodCkgKyAjeyRlbmR9KTtcclxuXHJcbiAgICBAaW5jbHVkZSBwb3NpdGlvbigkdG9wLCAkc2FmZS1hcmVhLWVuZCwgJGJvdHRvbSwgJHNhZmUtYXJlYS1zdGFydCk7XHJcbn1cclxuXHJcbkBtaXhpbiBjb3JlLWhlYWRpbmdzKCkge1xyXG4gICAgaDEge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjZweDtcclxuICAgIH1cclxuICAgIGgyLCAuaXRlbS1oZWFkaW5nIHtcclxuICAgICAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICB9XHJcbiAgICBoMyB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyMnB4O1xyXG4gICAgfVxyXG4gICAgaDQge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIH1cclxuICAgIGg1IHtcclxuICAgICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICB9XHJcbiAgICBoNiB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gZGFya21vZGUoKSB7XHJcbiAgICAkcm9vdDogI3smfTtcclxuXHJcbiAgICBAYXQtcm9vdCAje2FkZC1yb290LXNlbGVjdG9yKCRyb290LCBcImJvZHkuZGFya1wiKX0ge1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gaG9yaXpvbnRhbF9zY3JvbGxfaXRlbSgkd2lkdGgsICRtaW4td2lkdGgsICRtYXgtd2lkdGgpIHtcclxuICAgIGZsZXg6IDAgMCAkd2lkdGg7XHJcbiAgICBtaW4td2lkdGg6ICRtaW4td2lkdGg7XHJcbiAgICBtYXgtd2lkdGg6ICRtYXgtd2lkdGg7XHJcbiAgICBhbGlnbi1zZWxmOiBzdHJldGNoO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcblxyXG4gICAgaW9uLWNhcmQge1xyXG4gICAgICAgIC0tdmVydGljYWwtbWFyZ2luOiAxMHB4O1xyXG4gICAgICAgIC0taG9yaXpvbnRhbC1tYXJnaW46IDEwcHg7XHJcblxyXG4gICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSB2YXIoLS1ob3Jpem9udGFsLW1hcmdpbikgLSB2YXIoLS1ob3Jpem9udGFsLW1hcmdpbikpO1xyXG4gICAgICAgIGhlaWdodDogY2FsYygxMDAlIC0gdmFyKC0tdmVydGljYWwtbWFyZ2luKSAtIHZhcigtLXZlcnRpY2FsLW1hcmdpbikpO1xyXG4gICAgICAgIG1hcmdpbjogdmFyKC0tdmVydGljYWwtbWFyZ2luKSB2YXIoLS1ob3Jpem9udGFsLW1hcmdpbik7XHJcblxyXG4gICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzNjBweCkge1xyXG4gICAgICAgICAgICAtLWhvcml6b250YWwtbWFyZ2luOiA2cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vLyBDb2xvciBtaXhpbnMuXHJcbkBmdW5jdGlvbiBnZXRfYnJpZ2h0bmVzcygkY29sb3IpIHtcclxuICAgIEByZXR1cm4gKHJlZCgkY29sb3IpICsgZ3JlZW4oJGNvbG9yKSArIGJsdWUoJGNvbG9yKSkgLyAzO1xyXG59XHJcblxyXG4vLyBHZXQgdGhlIGJldHRlciBjb2xvciBjb250cmFzdCB1c2luZyBXQ0FHIGFsZ29yeXRobS5cclxuQGZ1bmN0aW9uIGdldF9jb250cmFzdF9jb2xvcigkY29sb3IpIHtcclxuICAgICRsdW1pYW5jZTogbHVtaW5hbmNlKCRjb2xvcik7XHJcblxyXG4gICAgLy8gV2hpdGUgbHVtaWFuY2UgaXMgMS5cclxuICAgICR3aGl0ZUNvbnRyYXN0OiAoJGx1bWlhbmNlICsgMC4wNSkgLyAoMSArIDAuMDUpO1xyXG4gICAgLy8gV2hpdGUgbHVtaWFuY2UgaXMgMC5cclxuICAgICRibGFja0NvbnRyYXN0OiAoMC4wNSkgLyAoJGx1bWlhbmNlICsgMC4wNSk7XHJcblxyXG4gICAgQHJldHVybiBpZigkd2hpdGVDb250cmFzdCA8ICRibGFja0NvbnRyYXN0LCB3aGl0ZSwgYmxhY2spO1xyXG59XHJcblxyXG4vLyBDb2xvciBjb250cmFzdCB1c2luZyB5aXEgYXByb3hpbWF0aW9uIHdpdGggMTUwIHRocmVzaG9sZC5cclxuQGZ1bmN0aW9uIGdldF9jb250cmFzdF9jb2xvcl95aXEoJGNvbG9yLCAkZGFyazogYmxhY2ssICRsaWdodDogd2hpdGUpIHtcclxuICAgICRyOiByZWQoJGNvbG9yKTtcclxuICAgICRnOiBncmVlbigkY29sb3IpO1xyXG4gICAgJGI6IGJsdWUoJGNvbG9yKTtcclxuXHJcbiAgICAkeWlxOiAoKCRyICogMjk5KSArICgkZyAqIDU4NykgKyAoJGIgKiAxMTQpKSAvIDEwMDA7XHJcblxyXG4gICAgQHJldHVybiBpZigkeWlxID49IDEyOCwgJGRhcmssICRsaWdodCk7XHJcbn1cclxuXHJcbi8vIFdDQUcgY29udHJhc3QgYWxnb3J5dGhtXHJcbkBmdW5jdGlvbiBjaGVjay1jb250cmFzdCgkZm9yZWdyb3VuZCwgJGJhY2tncm91bmQpIHtcclxuICAgICRmb3JlZ3JvdW5kTHVtaWFuY2U6IGx1bWluYW5jZSgkZm9yZWdyb3VuZCk7XHJcbiAgICAkYmFja2dyb3VuZEx1bWluYW5jZTogbHVtaW5hbmNlKCRiYWNrZ3JvdW5kKTtcclxuXHJcbiAgICBAaWYgKCRiYWNrZ3JvdW5kTHVtaW5hbmNlIDwgJGZvcmVncm91bmRMdW1pYW5jZSkge1xyXG4gICAgICAgIEByZXR1cm4gKCRiYWNrZ3JvdW5kTHVtaW5hbmNlICsgMC4wNSkgLyAoJGZvcmVncm91bmRMdW1pYW5jZSArIDAuMDUpO1xyXG4gICAgfSBAZWxzZSB7XHJcbiAgICAgICAgQHJldHVybiAoJGZvcmVncm91bmRMdW1pYW5jZSArIDAuMDUpIC8gKCRiYWNrZ3JvdW5kTHVtaW5hbmNlICsgMC4wNSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBmdW5jdGlvbiBsdW1pbmFuY2UoJGNvbG9yKSB7XHJcbiAgICAkcjogcmVkKCRjb2xvcik7XHJcbiAgICAkZzogZ3JlZW4oJGNvbG9yKTtcclxuICAgICRiOiBibHVlKCRjb2xvcik7XHJcblxyXG4gICAgJHI6IGNvbXBvbmVudC1sdW1pbmFuY2UoJHIpO1xyXG4gICAgJGc6IGNvbXBvbmVudC1sdW1pbmFuY2UoJGcpO1xyXG4gICAgJGI6IGNvbXBvbmVudC1sdW1pbmFuY2UoJGIpO1xyXG5cclxuICAgIEByZXR1cm4gJHIgKiAwLjIxMjYgKyAkZyAqIDAuNzE1MiArICRiICogMC4wNzIyO1xyXG59XHJcblxyXG5AZnVuY3Rpb24gY29tcG9uZW50LWx1bWluYW5jZSgkdmFsdWUpIHtcclxuICAgICR2YWx1ZTogJHZhbHVlIC8gMjU1O1xyXG5cclxuICAgIEBpZiAoJHZhbHVlIDw9IDAuMDM5MjgpIHtcclxuICAgICAgICBAcmV0dXJuICR2YWx1ZSAvIDEyLjkyO1xyXG4gICAgfSBAZWxzZSB7XHJcbiAgICAgICAgQHJldHVybiBtYXRoLnBvdygoJHZhbHVlICsgMC4wNTUpIC8gMS4wNTUsIDIuNCk7XHJcbiAgICB9XHJcbn1cclxuIiwiLypcclxuICogQXBwIEN1c3RvbSBBcHAgdmFyaWFibGVzIFNDU1NcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiBQbGFjZSBoZXJlIGFsbCBjdXN0b20gYXBwIHZhcmlhYmxlcy5cclxuICovXHJcbiIsIi8qXHJcbiAqIEFwcCBHbG9iYWwgdmFyaWFibGVzIFNDU1NcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiBQbGFjZSBoZXJlIGFsbCBnbG9iYWwgdmFyaWFibGVzLlxyXG4gKi9cclxuXHJcbiR3aGl0ZTogICAgICAgI2ZmZmZmZiAhZGVmYXVsdDtcclxuJGdyYXktMTAwOiAgICAjZjhmOWZhICFkZWZhdWx0O1xyXG4kZ3JheS0yMDA6ICAgICNlOWVjZWYgIWRlZmF1bHQ7XHJcbiRncmF5LTMwMDogICAgI2RlZTJlNiAhZGVmYXVsdDsgLy8gU3Ryb2tlXHJcbiRncmF5LTQwMDogICAgI2NlZDRkYSAhZGVmYXVsdDtcclxuJGdyYXktNTAwOiAgICAjOGY5NTllICFkZWZhdWx0OyAvLyBTdHJva2Ugb24gaW5wdXRzXHJcbiRncmF5LTYwMDogICAgIzZhNzM3YiAhZGVmYXVsdDtcclxuJGdyYXktNzAwOiAgICAjNDk1MDU3ICFkZWZhdWx0O1xyXG4kZ3JheS04MDA6ICAgICMzNDNhNDAgIWRlZmF1bHQ7XHJcbiRncmF5LTkwMDogICAgIzFkMjEyNSAhZGVmYXVsdDsgLy8gQ29weSB0ZXh0XHJcbiRibGFjazogICAgICAgIzAwMDAwMCAhZGVmYXVsdDsgLy8gQXZvaWQgdXNhZ2VcclxuXHJcbiRibHVlOiAgICAgICAgIzBmNmNiZiAhZGVmYXVsdDtcclxuJGN5YW46ICAgICAgICAjMDA4MTk2ICFkZWZhdWx0OyAvLyBOb3QgdXNlZC5cclxuJGdyZWVuOiAgICAgICAjMzU3YTMyICFkZWZhdWx0O1xyXG4kcmVkOiAgICAgICAgICNjYTMxMjAgIWRlZmF1bHQ7XHJcbiR5ZWxsb3c6ICAgICAgI2YwYWQ0ZSAhZGVmYXVsdDtcclxuXHJcbiRicmFuZC1jb2xvcjogI2ZmNzUxOCAhZGVmYXVsdDtcclxuXHJcbiR0ZXh0LWNvbG9yOiAgICAgICAgICAgICAgICRncmF5LTkwMCAhZGVmYXVsdDtcclxuJHRleHQtY29sb3ItcmdiOiAgICAgICAgICAgY29sb3ItdG8tcmdiLWxpc3QoJHRleHQtY29sb3IpICFkZWZhdWx0O1xyXG4kdGV4dC1jb2xvci1kYXJrOiAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcbiR0ZXh0LWNvbG9yLWRhcmstcmdiOiAgICAgIGNvbG9yLXRvLXJnYi1saXN0KCR0ZXh0LWNvbG9yLWRhcmspICFkZWZhdWx0O1xyXG5cclxuJGJhY2tncm91bmQtY29sb3I6ICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcclxuJGJhY2tncm91bmQtY29sb3ItcmdiOiAgICAgIGNvbG9yLXRvLXJnYi1saXN0KCRiYWNrZ3JvdW5kLWNvbG9yKSAhZGVmYXVsdDtcclxuJGJhY2tncm91bmQtY29sb3ItZGFyazogICAgICRncmF5LTkwMCAhZGVmYXVsdDsgLy8gIzFhMWExYVxyXG4kYmFja2dyb3VuZC1jb2xvci1kYXJrLXJnYjogY29sb3ItdG8tcmdiLWxpc3QoJGJhY2tncm91bmQtY29sb3ItZGFyaykgIWRlZmF1bHQ7XHJcblxyXG4kaW9uLWl0ZW0tYmFja2dyb3VuZDogICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcbiRpb24taXRlbS1iYWNrZ3JvdW5kLXJnYjogIGNvbG9yLXRvLXJnYi1saXN0KCRpb24taXRlbS1iYWNrZ3JvdW5kKSAhZGVmYXVsdDtcclxuJGlvbi1pdGVtLWJhY2tncm91bmQtZGFyazogJGdyYXktOTAwICFkZWZhdWx0O1xyXG4kaW9uLWl0ZW0tYmFja2dyb3VuZC1kYXJrLXJnYjogY29sb3ItdG8tcmdiLWxpc3QoJGlvbi1pdGVtLWJhY2tncm91bmQtZGFyaykgIWRlZmF1bHQ7XHJcblxyXG4kcHJpbWFyeTogICAgJGJyYW5kLWNvbG9yICFkZWZhdWx0O1xyXG4kc2Vjb25kYXJ5OiAgJGdyYXktMzAwICFkZWZhdWx0O1xyXG4kZGFuZ2VyOiAgICAgJHJlZCAhZGVmYXVsdDtcclxuJHdhcm5pbmc6ICAgICR5ZWxsb3cgIWRlZmF1bHQ7XHJcbiRzdWNjZXNzOiAgICAkZ3JlZW4gIWRlZmF1bHQ7XHJcbiRpbmZvOiAgICAgICAkYmx1ZSAhZGVmYXVsdDtcclxuJGxpZ2h0OiAgICAgICRncmF5LTEwMCAhZGVmYXVsdDtcclxuJG1lZGl1bTogICAgICRncmF5LTcwMCAhZGVmYXVsdDtcclxuJGRhcms6ICAgICAgICRncmF5LTkwMCAhZGVmYXVsdDtcclxuXHJcbiRjb2xvcnM6ICAoXHJcbiAgICBwcmltYXJ5OiAobGlnaHQ6ICRwcmltYXJ5LCBkYXJrOiAkcHJpbWFyeSksXHJcbiAgICBzZWNvbmRhcnk6IChsaWdodDogJHNlY29uZGFyeSwgZGFyazogJGdyYXktNzAwKSxcclxuICAgIHN1Y2Nlc3M6IChsaWdodDogJHN1Y2Nlc3MpLFxyXG4gICAgd2FybmluZzogKGxpZ2h0OiAkd2FybmluZyksXHJcbiAgICBkYW5nZXI6ICAobGlnaHQ6ICRkYW5nZXIpLFxyXG4gICAgaW5mbzogKGxpZ2h0OiAkaW5mbyksXHJcbiAgICBsaWdodDogKGxpZ2h0OiAkbGlnaHQsIGRhcms6ICRkYXJrKSxcclxuICAgIG1lZGl1bTogKGxpZ2h0OiAkbWVkaXVtLCBkYXJrOiAkZ3JheS0yMDApLFxyXG4gICAgZGFyazogKGxpZ2h0OiAkZGFyaywgZGFyazogJGxpZ2h0KSxcclxuKSAhZGVmYXVsdDtcclxuXHJcbi8qKlxyXG4gKiBMYXlvdXQgQnJlYWtwb2ludHNcclxuICpcclxuICogaHR0cHM6Ly9pb25pY2ZyYW1ld29yay5jb20vZG9jcy9sYXlvdXQvZ3JpZCNkZWZhdWx0LWJyZWFrcG9pbnRzXHJcbiAqL1xyXG5cclxuLy8gVGhlIG1pbmltdW0gZGltZW5zaW9ucyBhdCB3aGljaCB5b3VyIGxheW91dCB3aWxsIGNoYW5nZSxcclxuLy8gYWRhcHRpbmcgdG8gZGlmZmVyZW50IHNjcmVlbiBzaXplcywgZm9yIHVzZSBpbiBtZWRpYSBxdWVyaWVzXHJcbiRzY3JlZW4tYnJlYWtwb2ludHM6IChcclxuICAgIHhzOiAwLFxyXG4gICAgc206IDU3NnB4LFxyXG4gICAgbWQ6IDc2OHB4LFxyXG4gICAgbGc6IDk5MnB4LFxyXG4gICAgdGFibGV0OiA5OTJweCxcclxuICAgIHhsOiAxMjAwcHhcclxuKSAhZGVmYXVsdDtcclxuXHJcbiRjb3JlLWNvdXJzZS1pbWFnZS1iYWNrZ3JvdW5kOiAjODFlY2VjLCAjNzRiOWZmLCAjYTI5YmZlLCAjZGZlNmU5LCAjMDBiODk0LCAjMDk4NGUzLCAjYjJiZWMzLCAjZmRjYjZlLCAjZmQ3OWE4LCAjNmM1Y2U3ICFkZWZhdWx0O1xyXG4kY29yZS1kZC1xdWVzdGlvbi1jb2xvcnM6ICNGRkZGRkYsICNCMEM0REUsICNEQ0RDREMsICNEOEJGRDgsICM4N0NFRkEsICNEQUE1MjAsICNGRkQ3MDAsICNGMEU2OEMgIWRlZmF1bHQ7XHJcbiRjb3JlLXRleHQtaGlnaHRsaWdodC1iYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKCRibHVlLCA0MCUpICFkZWZhdWx0O1xyXG5cclxuJGNvcmUtZml4ZWQtdXJsOiBmYWxzZSAhZGVmYXVsdDtcclxuJGNvcmUtZGFzaGJvYXJkLWxvZ286IGZhbHNlICFkZWZhdWx0O1xyXG4kY29yZS1hbHdheXMtc2hvdy1tYWluLW1lbnU6IGZhbHNlICFkZWZhdWx0O1xyXG4kY29yZS1mb3JtYXQtdGV4dC1uZXZlci1zaG9ydGVuOiBmYWxzZSAhZGVmYXVsdDtcclxuXHJcbiRjb3JlLWhpZGUtY291cnNlaW1hZ2Utb24tY291cnNlOiBmYWxzZSAhZGVmYXVsdDtcclxuJGNvcmUtaGlkZS1wcm9ncmVzcy1vbi1jb3Vyc2U6IGZhbHNlICFkZWZhdWx0O1xyXG4kY29yZS1oaWRlLXByb2dyZXNzLW9uLXNlY3Rpb24tc2VsZWN0b3I6IGZhbHNlICFkZWZhdWx0O1xyXG5cclxuJGNvcmUtY291cnNlLWhpZGUtdGh1bWItb24tY2FyZHM6IGZhbHNlICFkZWZhdWx0O1xyXG4kY29yZS1jb3Vyc2UtdGh1bWItb24tY2FyZHMtYmFja2dyb3VuZDogbnVsbCAhZGVmYXVsdDtcclxuJGNvcmUtY291cnNlLWhpZGUtcHJvZ3Jlc3Mtb24tY2FyZHM6IGZhbHNlICFkZWZhdWx0O1xyXG5cclxuLy8gQ29uZmlndXJhdGlvbiBvcHRpb25zIGZvciBsb2dpbiBwYWdlLlxyXG4kY29yZS1sb2dpbi1idXR0b24tb3V0bGluZTogZmFsc2UgIWRlZmF1bHQ7XHJcbiRjb3JlLWxvZ2luLWJ1dHRvbi1vdXRsaW5lLWRhcms6ICRjb3JlLWxvZ2luLWJ1dHRvbi1vdXRsaW5lICFkZWZhdWx0O1xyXG4kY29yZS1sb2dpbi1sb2FkaW5nLWNvbG9yOiBmYWxzZSAhZGVmYXVsdDtcclxuJGNvcmUtbG9naW4tbG9hZGluZy1jb2xvci1kYXJrOiAkdGV4dC1jb2xvci1kYXJrICFkZWZhdWx0O1xyXG4kY29yZS1sb2dpbi1oaWRlLWZvcmdvdC1wYXNzd29yZDogZmFsc2UgIWRlZmF1bHQ7XHJcbiRjb3JlLWxvZ2luLWhpZGUtbmVlZC1oZWxwOiBmYWxzZSAhZGVmYXVsdDtcclxuXHJcbi8vIENvbmZpZ3VyYXRpb24gb3B0aW9ucyBmb3IgbW9yZSBwYWdlLiAoZGVwcmVjYXRlZCBvbiA0LjApXHJcbiRjb3JlLW1vcmUtaGlkZS1zaXRlaW5mbzogZmFsc2UgIWRlZmF1bHQ7XHJcbiRjb3JlLW1vcmUtaGlkZS1zaXRlbmFtZTogZmFsc2UgIWRlZmF1bHQ7XHJcbiRjb3JlLW1vcmUtaGlkZS1zaXRldXJsOiBmYWxzZSAhZGVmYXVsdDtcclxuXHJcbi8vIENvbmZpZ3VyYXRpb24gb3B0aW9ucyBmb3IgdXNlciBwYWdlLlxyXG4kY29yZS11c2VyLWhpZGUtc2l0ZWluZm86ICRjb3JlLW1vcmUtaGlkZS1zaXRlaW5mbyAhZGVmYXVsdDtcclxuJGNvcmUtdXNlci1oaWRlLXNpdGVuYW1lOiAkY29yZS1tb3JlLWhpZGUtc2l0ZW5hbWUgIWRlZmF1bHQ7XHJcbiRjb3JlLXVzZXItaGlkZS1zaXRldXJsOiAkY29yZS1tb3JlLWhpZGUtc2l0ZXVybCAhZGVmYXVsdDtcclxuXHJcbi8vIEFjdGl2aXR5IGljb24gYmFja2dyb3VuZCBjb2xvcnMuXHJcbiRhY3Rpdml0eS1pY29uLWNvbG9yczogKFxyXG4gICAgYWRtaW5pc3RyYXRpb246ICM1ZDYzZjYsXHJcbiAgICBhc3Nlc3NtZW50OiAjZWI2NmEyLFxyXG4gICAgY29sbGFib3JhdGlvbjogI2Y3NjM0ZCxcclxuICAgIGNvbW11bmljYXRpb246ICMxMWE2NzYsXHJcbiAgICBjb250ZW50OiAjMzk5YmUyLFxyXG4gICAgaW50ZXJmYWNlOiAjYTM3OGZmXHJcbikgIWRlZmF1bHQ7XHJcblxyXG4vLyBDYWxlbmRhciBldmVudCBjYXRlZ29yeSBiYWNrZ3JvdW5kIGNvbG9ycy5cclxuJGNhbGVuZGFyLWV2ZW50LWNhdGVnb3J5LWNvbG9yczogKFxyXG4gICAgY2F0ZWdvcnk6ICM4ZTI0YWEsXHJcbiAgICBjb3Vyc2U6ICRyZWQsXHJcbiAgICBncm91cDogJHllbGxvdyxcclxuICAgIHVzZXI6ICRibHVlLFxyXG4gICAgc2l0ZTogJGdyZWVuXHJcbikgIWRlZmF1bHQ7XHJcbiIsIkBpbXBvcnQgXCJ+dGhlbWUvZ2xvYmFsc1wiO1xyXG5cclxuOmhvc3Qge1xyXG4gICAgLS1saXN0LWl0ZW0tbWF4LXdpZHRoOiA2MDBweDtcclxufVxyXG5cclxuLml0ZW0taW5wdXQ6bGFzdC1jaGlsZCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4uaXRlbSB7XHJcbiAgICAmLmNvcmUtbG9naW4tbmVlZC1oZWxwIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxNnB4O1xyXG4gICAgfVxyXG4gICAgJi5jb3JlLWxvZ2luLXNpdGUtcXJjb2RlIHtcclxuICAgICAgICAuaXRlbS1pbm5lciB7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uY29yZS1sb2dpbi1zaXRlLWNvbm5lY3Qge1xyXG4gICAgbWFyZ2luLXRvcDogMS40cmVtO1xyXG59XHJcblxyXG4uaXRlbSBpb24tdGh1bWJuYWlsIHtcclxuICAgIG1pbi13aWR0aDogNTBweDtcclxuICAgIG1pbi1oZWlnaHQ6IDUwcHg7XHJcbiAgICB3aWR0aDogNTBweDtcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIwJTtcclxuICAgIGJveC1zaGFkb3c6IDAgMCA0cHggdmFyKC0tZ3JheS0yMDApO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgICBpbWcge1xyXG4gICAgICAgIG1heC1oZWlnaHQ6IDUwcHg7XHJcbiAgICAgICAgbWF4LXdpZHRoOiBmaXQtY29udGVudDtcclxuICAgICAgICB3aWR0aDogYXV0bztcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDUwJTtcclxuICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0odHJhbnNsYXRlM2QoLTUwJSwwLDApKTtcclxuICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgICAgICBvYmplY3QtcG9zaXRpb246IDUwJSA1MCU7XHJcbiAgICB9XHJcbiAgICBpb24taWNvbiB7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgZm9udC1zaXplOiAzNXB4O1xyXG4gICAgICAgIGhlaWdodDogNTBweDtcclxuICAgIH1cclxufVxyXG5cclxuOmhvc3QtY29udGV4dChbZGlyPVwicnRsXCJdKSB7XHJcblxyXG4gICAgLml0ZW0gaW9uLXRodW1ibmFpbCBpbWcge1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogNTAlO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuLmNvcmUtbG9naW4tc2l0ZS1sb2dvLFxyXG4uY29yZS1sb2dpbi1zaXRlLWxpc3QsXHJcbi5jb3JlLWxvZ2luLXNpdGUtbGlzdC1mb3VuZCB7XHJcbiAgICB0cmFuc2l0aW9uLWRlbGF5OiAwcztcclxuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuN3MgZWFzZS1pbi1vdXQ7XHJcbiAgICBtYXgtaGVpZ2h0OiA5OTk5cHg7XHJcblxyXG4gICAgJi5oaWRkZW4ge1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgIG1heC1oZWlnaHQ6IDA7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5jb3JlLWxvZ2luLXNpdGUtbGlzdC1mb3VuZC5kaW1tZWQge1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5jb3JlLWxvZ2luLXNpdGUtbGlzdC1sb2FkaW5nIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XHJcbiAgICB6LWluZGV4OiAxO1xyXG4gICAgaW9uLXNwaW5uZXIge1xyXG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgfVxyXG59XHJcblxyXG4uY29yZS1sb2dpbi1zaXRlLW5vbGlzdC1sb2FkaW5nIHtcclxuICAgIG1hcmdpbi10b3A6IDE2cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5pdGVtLmNvcmUtbG9naW4tc2l0ZS1saXN0LXRpdGxlIHtcclxuICAgIGlvbi1sYWJlbCwgaW9uLWxhYmVsIGgyLml0ZW0taGVhZGluZyB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcclxuICAgIH1cclxufVxyXG5cclxuQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChtZCkge1xyXG4gICAgaW9uLWNvbnRlbnQgLmNvcmUtbG9naW4tc2l0ZS1sb2dvIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAyMCU7XHJcbiAgICAgICAgJi5oaWRkZW4ge1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLmNvcmUtbG9naW4tZW50ZXJlZC1zaXRlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWxpZ2h0KTtcclxuXHJcbiAgICBpb24tdGh1bWJuYWlsIHtcclxuICAgICAgICBib3gtc2hhZG93OiAwIDAgNHB4IHZhcigtLWdyYXktMzAwKTtcclxuICAgIH1cclxufVxyXG5cclxuLmNvcmUtbG9naW4tZGVmYXVsdC1pY29uIHtcclxuICAgIGZpbHRlcjogZ3JheXNjYWxlKDEwMCUpO1xyXG59XHJcbiJdfQ== */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, ValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\n\nimport { CoreApp } from '@services/app';\nimport { CoreConfig } from '@services/config';\nimport { CoreSites, CoreSiteCheckResponse, CoreLoginSiteInfo, CoreSitesDemoSiteData } from '@services/sites';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreLoginHelper, CoreLoginHelperProvider, CoreLoginSiteSelectorListMethod } from '@features/login/services/login-helper';\nimport { CoreSite } from '@classes/site';\nimport { CoreError } from '@classes/errors/error';\nimport { CoreConstants } from '@/core/constants';\nimport { Translate } from '@singletons';\nimport { CoreUrl } from '@singletons/url';\nimport { CoreUrlUtils } from '@services/utils/url';\nimport { CoreLoginSiteHelpComponent } from '@features/login/components/site-help/site-help';\nimport { CoreLoginSiteOnboardingComponent } from '@features/login/components/site-onboarding/site-onboarding';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreCustomURLSchemes, CoreCustomURLSchemesHandleError } from '@services/urlschemes';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreForms } from '@singletons/form';\nimport { AlertButton } from '@ionic/core';\n\n/**\n * Site (url) chooser when adding a new site.\n */\n@Component({\n    selector: 'page-core-login-site',\n    templateUrl: 'site.html',\n    styleUrls: ['site.scss', '../../login.scss'],\n})\nexport class CoreLoginSitePage implements OnInit {\n\n    @ViewChild('siteFormEl') formElement?: ElementRef;\n\n    siteForm: FormGroup;\n    fixedSites?: CoreLoginSiteInfoExtended[];\n    filteredSites?: CoreLoginSiteInfoExtended[];\n    siteSelector: CoreLoginSiteSelectorListMethod = 'sitefinder';\n    showKeyboard = false;\n    filter = '';\n    sites: CoreLoginSiteInfoExtended[] = [];\n    hasSites = false;\n    loadingSites = false;\n    searchFunction: (search: string) => void;\n    showScanQR: boolean;\n    enteredSiteUrl?: CoreLoginSiteInfoExtended;\n    siteFinderSettings: SiteFinderSettings;\n\n    constructor(\n        protected formBuilder: FormBuilder,\n    ) {\n\n        let url = '';\n        this.siteSelector = CoreConstants.CONFIG.multisitesdisplay;\n\n        const siteFinderSettings: Partial<SiteFinderSettings> = CoreConstants.CONFIG.sitefindersettings || {};\n        this.siteFinderSettings = {\n            displaysitename: true,\n            displayimage: true,\n            displayalias: true,\n            displaycity: true,\n            displaycountry: true,\n            displayurl: true,\n            ...siteFinderSettings,\n        };\n\n        // Load fixed sites if they're set.\n        if (CoreLoginHelper.hasSeveralFixedSites()) {\n            url = this.initSiteSelector();\n        } else if (CoreConstants.CONFIG.enableonboarding && !CoreApp.isIOS()) {\n            this.initOnboarding();\n        }\n\n        this.showScanQR = CoreLoginHelper.displayQRInSiteScreen();\n\n        this.siteForm = this.formBuilder.group({\n            siteUrl: [url, this.moodleUrlValidator()],\n        });\n\n        this.searchFunction = CoreUtils.debounce(async (search: string) => {\n            search = search.trim();\n\n            if (search.length >= 3) {\n                // Update the sites list.\n                const sites = await CoreSites.findSites(search);\n\n                // Add UI tweaks.\n                this.sites = this.extendCoreLoginSiteInfo(<CoreLoginSiteInfoExtended[]> sites);\n\n                this.hasSites = !!this.sites.length;\n            } else {\n                // Not reseting the array to allow animation to be displayed.\n                this.hasSites = false;\n            }\n\n            this.loadingSites = false;\n        }, 1000);\n    }\n\n    /**\n     * Initialize the component.\n     */\n    ngOnInit(): void {\n        this.showKeyboard = !!CoreNavigator.getRouteBooleanParam('showKeyboard');\n    }\n\n    /**\n     * Initialize the site selector.\n     *\n     * @return URL of the first site.\n     */\n    protected initSiteSelector(): string {\n        this.fixedSites = this.extendCoreLoginSiteInfo(<CoreLoginSiteInfoExtended[]> CoreLoginHelper.getFixedSites());\n        this.siteSelector = 'list'; // In case it's not defined\n\n        // Do not show images if none are set.\n        if (!this.fixedSites.some((site) => !!site.imageurl)) {\n            this.siteFinderSettings.displayimage = false;\n        }\n\n        this.filteredSites = this.fixedSites;\n\n        return this.fixedSites[0].url;\n    }\n\n    /**\n     * Initialize and show onboarding if needed.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async initOnboarding(): Promise<void> {\n        const onboardingDone = await CoreConfig.get(CoreLoginHelperProvider.ONBOARDING_DONE, false);\n\n        if (!onboardingDone) {\n            // Check onboarding.\n            this.showOnboarding();\n        }\n    }\n\n    /**\n     * Extend info of Login Site Info to get UI tweaks.\n     *\n     * @param sites Sites list.\n     * @return Sites list with extended info.\n     */\n    protected extendCoreLoginSiteInfo(sites: CoreLoginSiteInfoExtended[]): CoreLoginSiteInfoExtended[] {\n        return sites.map((site) => {\n            site.noProtocolUrl = this.siteFinderSettings.displayurl && site.url ? CoreUrl.removeProtocol(site.url) : '';\n\n            const name = this.siteFinderSettings.displaysitename ? site.name : '';\n            const alias = this.siteFinderSettings.displayalias && site.alias ? site.alias : '';\n\n            // Set title with parenthesis if both name and alias are present.\n            site.title = name && alias ? name + ' (' + alias + ')' : name + alias;\n\n            const country = this.siteFinderSettings.displaycountry && site.countrycode ?\n                CoreUtils.getCountryName(site.countrycode) : '';\n            const city = this.siteFinderSettings.displaycity && site.city ?\n                site.city : '';\n\n            // Separate location with hiphen if both country and city are present.\n            site.location = city && country ? city + ' - ' + country : city + country;\n\n            return site;\n        });\n    }\n\n    /**\n     * Validate Url.\n     *\n     * @return {ValidatorFn} Validation results.\n     */\n    protected moodleUrlValidator(): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            const value = control.value.trim();\n            let valid = value.length >= 3 && CoreUrl.isValidMoodleUrl(value);\n\n            if (!valid) {\n                const demo = !!CoreSites.getDemoSiteData(value);\n\n                if (demo) {\n                    valid = true;\n                }\n            }\n\n            return valid ? null : { siteUrl: { value: control.value } };\n        };\n    }\n\n    /**\n     * Show a help modal.\n     */\n    async showHelp(): Promise<void> {\n        await CoreDomUtils.openModal({\n            component: CoreLoginSiteHelpComponent,\n            cssClass: 'core-modal-fullscreen',\n        });\n    }\n\n    /**\n     * Show an onboarding modal.\n     */\n    async showOnboarding(): Promise<void> {\n        await CoreDomUtils.openModal({\n            component: CoreLoginSiteOnboardingComponent,\n            cssClass: 'core-modal-fullscreen',\n        });\n    }\n\n    /**\n     * Try to connect to a site.\n     *\n     * @param e Event.\n     * @param url The URL to connect to.\n     * @param foundSite The site clicked, if any, from the found sites list.\n     * @return Promise resolved when done.\n     */\n    async connect(e: Event, url: string, foundSite?: CoreLoginSiteInfoExtended): Promise<void> {\n        e.preventDefault();\n        e.stopPropagation();\n\n        CoreApp.closeKeyboard();\n\n        if (!url) {\n            CoreDomUtils.showErrorModal('core.login.siteurlrequired', true);\n\n            return;\n        }\n\n        if (!CoreApp.isOnline()) {\n            CoreDomUtils.showErrorModal('core.networkerrormsg', true);\n\n            return;\n        }\n\n        url = url.trim();\n\n        if (url.match(/^(https?:\\/\\/)?campus\\.example\\.edu/)) {\n            this.showLoginIssue(null, new CoreError(Translate.instant('core.login.errorexampleurl')));\n\n            return;\n        }\n\n        const siteData = CoreSites.getDemoSiteData(url);\n\n        if (siteData) {\n            // It's a demo site.\n            await this.loginDemoSite(siteData);\n\n        } else {\n            // Not a demo site.\n            const modal = await CoreDomUtils.showModalLoading();\n\n            let checkResult: CoreSiteCheckResponse;\n\n            try {\n                checkResult = await CoreSites.checkSite(url);\n            } catch (error) {\n                // Attempt guessing the domain if the initial check failed\n                const domain = CoreUrl.guessMoodleDomain(url);\n\n                if (domain && domain != url) {\n                    try {\n                        checkResult = await CoreSites.checkSite(domain);\n                    } catch (secondError) {\n                        // Try to use the first error.\n                        modal.dismiss();\n\n                        return this.showLoginIssue(url, error || secondError);\n                    }\n                } else {\n                    modal.dismiss();\n\n                    return this.showLoginIssue(url, error);\n                }\n            }\n\n            await this.login(checkResult, foundSite);\n\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Authenticate in a demo site.\n     *\n     * @param siteData Site data.\n     * @return Promise resolved when done.\n     */\n    protected async loginDemoSite(siteData: CoreSitesDemoSiteData): Promise<void> {\n        const modal = await CoreDomUtils.showModalLoading();\n\n        try {\n            const data = await CoreSites.getUserToken(siteData.url, siteData.username, siteData.password);\n\n            await CoreSites.newSite(data.siteUrl, data.token, data.privateToken);\n\n            CoreForms.triggerFormSubmittedEvent(this.formElement, true);\n\n            await CoreNavigator.navigateToSiteHome();\n\n            return;\n        } catch (error) {\n            CoreLoginHelper.treatUserTokenError(siteData.url, error, siteData.username, siteData.password);\n\n            if (error.loggedout) {\n                CoreNavigator.navigate('/login/sites', { reset: true });\n            }\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Process login to a site.\n     *\n     * @param response Response obtained from the site check request.\n     * @param foundSite The site clicked, if any, from the found sites list.\n     *\n     * @return Promise resolved after logging in.\n     */\n    protected async login(response: CoreSiteCheckResponse, foundSite?: CoreLoginSiteInfoExtended): Promise<void> {\n        try {\n            await CoreSites.checkApplication(response.config);\n\n            CoreForms.triggerFormSubmittedEvent(this.formElement, true);\n\n            if (CoreLoginHelper.isSSOLoginNeeded(response.code)) {\n                // SSO. User needs to authenticate in a browser.\n                CoreLoginHelper.confirmAndOpenBrowserForSSOLogin(\n                    response.siteUrl,\n                    response.code,\n                    response.service,\n                    response.config?.launchurl,\n                );\n            } else {\n                const pageParams = { siteUrl: response.siteUrl, siteConfig: response.config };\n                if (foundSite && !this.fixedSites) {\n                    pageParams['siteName'] = foundSite.name;\n                    pageParams['logoUrl'] = foundSite.imageurl;\n                }\n\n                CoreNavigator.navigate('/login/credentials', {\n                    params: pageParams,\n                });\n            }\n        } catch (error) {\n            // Ignore errors.\n        }\n    }\n\n    /**\n     * Show an error that aims people to solve the issue.\n     *\n     * @param url The URL the user was trying to connect to.\n     * @param error Error to display.\n     */\n    protected showLoginIssue(url: string | null, error: CoreError): void {\n        let errorMessage = CoreDomUtils.getErrorMessage(error);\n\n        if (errorMessage == Translate.instant('core.cannotconnecttrouble')) {\n            const found = this.sites.find((site) => site.url == url);\n\n            if (!found) {\n                errorMessage += ' ' + Translate.instant('core.cannotconnectverify');\n            }\n        }\n\n        let message = '<p>' + errorMessage + '</p>';\n        if (url) {\n            const fullUrl = CoreUrlUtils.isAbsoluteURL(url) ? url : 'https://' + url;\n            message += '<p padding><a href=\"' + fullUrl + '\" core-link>' + url + '</a></p>';\n        }\n\n        const buttons: AlertButton[] = [\n            {\n                text: Translate.instant('core.needhelp'),\n                cssClass: 'core-login-need-help',\n                handler: (): void => {\n                    this.showHelp();\n                },\n            },\n            {\n                text: Translate.instant('core.tryagain'),\n                role: 'cancel',\n            },\n        ];\n\n        // @TODO: Remove CoreSite.MINIMUM_MOODLE_VERSION, not used on translations since 3.9.0.\n        CoreDomUtils.showAlertWithOptions({\n            header: Translate.instant('core.cannotconnect', { $a: CoreSite.MINIMUM_MOODLE_VERSION }),\n            message,\n            buttons,\n        });\n    }\n\n    /**\n     * The filter has changed.\n     *\n     * @param event Received Event.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    filterChanged(event?: any): void {\n        const newValue = event?.target.value?.trim().toLowerCase();\n        if (!newValue || !this.fixedSites) {\n            this.filteredSites = this.fixedSites;\n        } else {\n            this.filteredSites = this.fixedSites.filter((site) =>\n                site.title.toLowerCase().indexOf(newValue) > -1 || site.noProtocolUrl.toLowerCase().indexOf(newValue) > -1 ||\n                site.location.toLowerCase().indexOf(newValue) > -1);\n        }\n    }\n\n    /**\n     * Find a site on the backend.\n     *\n     * @param e Event.\n     * @param search Text to search.\n     */\n    searchSite(e: Event, search: string): void {\n        this.loadingSites = true;\n\n        search = search.trim();\n\n        if (this.siteForm.valid && search.length >= 3) {\n            this.enteredSiteUrl = {\n                url: search,\n                name: 'connect',\n                title: '',\n                location: '',\n                noProtocolUrl: CoreUrl.removeProtocol(search),\n            };\n        } else {\n            this.enteredSiteUrl = undefined;\n        }\n\n        this.searchFunction(search.trim());\n    }\n\n    /**\n     * Show instructions and scan QR code.\n     *\n     * @return Promise resolved when done.\n     */\n    async showInstructionsAndScanQR(): Promise<void> {\n        try {\n            await CoreLoginHelper.showScanQRInstructions();\n\n            await this.scanQR();\n        } catch {\n            // Ignore errors.\n        }\n    }\n\n    /**\n     * Scan a QR code and put its text in the URL input.\n     *\n     * @return Promise resolved when done.\n     */\n    async scanQR(): Promise<void> {\n        // Scan for a QR code.\n        const text = await CoreUtils.scanQR();\n\n        if (!text) {\n            return;\n        }\n\n        if (CoreCustomURLSchemes.isCustomURL(text)) {\n            try {\n                await CoreCustomURLSchemes.handleCustomURL(text);\n            } catch (error) {\n                if (error && error.data && error.data.isAuthenticationURL && error.data.siteUrl) {\n                    // An error ocurred, but it's an authentication URL and we have the site URL.\n                    this.treatErrorInAuthenticationCustomURL(text, error);\n                } else {\n                    CoreCustomURLSchemes.treatHandleCustomURLError(error);\n                }\n            }\n\n            return;\n        }\n\n        // Not a custom URL scheme, check if it's a URL scheme to another app.\n        const scheme = CoreUrlUtils.getUrlProtocol(text);\n\n        if (scheme && scheme != 'http' && scheme != 'https') {\n            CoreDomUtils.showErrorModal(Translate.instant('core.errorurlschemeinvalidscheme', { $a: text }));\n\n            return;\n        }\n\n        const allowed = await CoreLoginHelper.isSiteUrlAllowed(text);\n        if (allowed) {\n            // Put the text in the field (if present).\n            this.siteForm.controls.siteUrl.setValue(text);\n\n            this.connect(new Event('click'), text);\n        } else {\n            CoreDomUtils.showErrorModal('core.errorurlschemeinvalidsite', true);\n        }\n    }\n\n    /**\n     * Treat an error while handling a custom URL meant to perform an authentication.\n     * If the site doesn't use SSO, the user will be sent to the credentials screen.\n     *\n     * @param customURL Custom URL handled.\n     * @param error Error data.\n     * @return Promise resolved when done.\n     */\n    protected async treatErrorInAuthenticationCustomURL(customURL: string, error: CoreCustomURLSchemesHandleError): Promise<void> {\n        const siteUrl = error.data?.siteUrl || '';\n        const modal = await CoreDomUtils.showModalLoading();\n\n        // Set the site URL in the input.\n        this.siteForm.controls.siteUrl.setValue(siteUrl);\n\n        try {\n            // Check if site uses SSO.\n            const response = await CoreSites.checkSite(siteUrl);\n\n            await CoreSites.checkApplication(response.config);\n\n            if (!CoreLoginHelper.isSSOLoginNeeded(response.code)) {\n                // No SSO, go to credentials page.\n                await CoreNavigator.navigate('/login/credentials', {\n                    params: {\n                        siteUrl: response.siteUrl,\n                        siteConfig: response.config,\n                    },\n                });\n            }\n        } catch (error) {\n            // Ignore errors.\n        } finally {\n            modal.dismiss();\n        }\n\n        // Now display the error.\n        error.error = CoreTextUtils.addTextToError(\n            error.error,\n            '<br><br>' + Translate.instant('core.login.youcanstillconnectwithcredentials'),\n        );\n\n        CoreCustomURLSchemes.treatHandleCustomURLError(error);\n    }\n\n    /**\n     * Open settings page.\n     */\n    openSettings(): void {\n        CoreNavigator.navigate('/settings');\n    }\n\n}\n\n/**\n * Extended data for UI implementation.\n */\ntype CoreLoginSiteInfoExtended = CoreLoginSiteInfo & {\n    noProtocolUrl: string; // Url wihtout protocol.\n    location: string; // City + country.\n    title: string; // Name + alias.\n};\n\ntype SiteFinderSettings = {\n    displayalias: boolean;\n    displaycity: boolean;\n    displaycountry: boolean;\n    displayimage: boolean;\n    displaysitename: boolean;\n    displayurl: boolean;\n};\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Params } from '@angular/router';\nimport { CoreRoutedItemsManagerSource } from '@classes/items-management/routed-items-manager-source';\nimport { CoreSettingsDelegate, CoreSettingsHandlerToDisplay } from '../services/settings-delegate';\n\n/**\n * Provides a collection of site settings.\n */\nexport class CoreSettingsHandlersSource extends CoreRoutedItemsManagerSource<CoreSettingsHandlerToDisplay> {\n\n    /**\n     * @inheritdoc\n     */\n    protected async loadPageItems(): Promise<{ items: CoreSettingsHandlerToDisplay[] }> {\n        return { items: CoreSettingsDelegate.getHandlers() };\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getItemPath(handler: CoreSettingsHandlerToDisplay): string {\n        return handler.page;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    getItemQueryParams(handler: CoreSettingsHandlerToDisplay): Params {\n        return handler.params || {};\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Injector, NgModule } from '@angular/core';\r\nimport { RouterModule, ROUTES, Routes } from '@angular/router';\r\n\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\nimport { CoreSitePreferencesPage } from './site';\r\nimport { conditionalRoutes, resolveModuleRoutes } from '@/app/app-routing.module';\r\nimport { SITE_PREFERENCES_ROUTES } from './site-routing';\r\nimport { CoreScreen } from '@services/screen';\r\n\r\nfunction buildRoutes(injector: Injector): Routes {\r\n    const routes = resolveModuleRoutes(injector, SITE_PREFERENCES_ROUTES);\r\n\r\n    const mobileRoutes: Routes = [\r\n        {\r\n            path: '',\r\n            component: CoreSitePreferencesPage,\r\n        },\r\n        ...routes.siblings,\r\n\r\n    ];\r\n\r\n    const tabletRoutes: Routes = [\r\n        {\r\n            path: '',\r\n            component: CoreSitePreferencesPage,\r\n            children: routes.siblings,\r\n        },\r\n    ];\r\n\r\n    return [\r\n        ...conditionalRoutes(mobileRoutes, () => CoreScreen.isMobile),\r\n        ...conditionalRoutes(tabletRoutes, () => CoreScreen.isTablet),\r\n    ];\r\n}\r\n\r\n@NgModule({\r\n    providers: [\r\n        { provide: ROUTES, multi: true, useFactory: buildRoutes, deps: [Injector] },\r\n    ],\r\n    declarations: [\r\n        CoreSitePreferencesPage,\r\n    ],\r\n    imports: [\r\n        CoreSharedModule,\r\n    ],\r\n    exports: [RouterModule],\r\n})\r\nexport class CoreSitePreferencesPageModule {}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\n\nimport { CoreSettingsHandlerToDisplay } from '../../services/settings-delegate';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreSettingsHandlersSource } from '@features/settings/classes/settings-handlers-source';\nimport { CoreSettingsHelper } from '@features/settings/services/settings-helper';\nimport { CoreDomUtils } from '@services/utils/dom';\n\n/**\n * Page that displays the list of site settings pages.\n */\n@Component({\n    selector: 'page-core-site-preferences',\n    templateUrl: 'site.html',\n})\nexport class CoreSitePreferencesPage implements AfterViewInit, OnDestroy {\n\n    @ViewChild(CoreSplitViewComponent) splitView!: CoreSplitViewComponent;\n\n    handlers: CoreListItemsManager<CoreSettingsHandlerToDisplay>;\n\n    protected siteId: string;\n    protected sitesObserver: CoreEventObserver;\n    protected isDestroyed = false;\n\n    constructor() {\n        this.siteId = CoreSites.getCurrentSiteId();\n\n        const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(CoreSettingsHandlersSource, []);\n\n        this.handlers = new CoreListItemsManager(source, CoreSitePreferencesPage);\n\n        this.sitesObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, () => {\n            this.refreshData();\n        }, this.siteId);\n    }\n\n    /**\n     * View loaded.\n     */\n    async ngAfterViewInit(): Promise<void> {\n        const pageToOpen = CoreNavigator.getRouteParam('page');\n\n        try {\n            await this.fetchData();\n        } finally {\n            const handler = pageToOpen ? this.handlers.items.find(handler => handler.page == pageToOpen) : undefined;\n\n            if (handler) {\n                this.handlers.watchSplitViewOutlet(this.splitView);\n\n                await this.handlers.select(handler);\n            } else {\n                await this.handlers.start(this.splitView);\n            }\n        }\n    }\n\n    /**\n     * Fetch Data.\n     */\n    protected async fetchData(): Promise<void> {\n        await this.handlers.load();\n    }\n\n    /**\n     * Syncrhonizes the site.\n     */\n    async synchronize(): Promise<void> {\n        try {\n            // Using syncOnlyOnWifi false to force manual sync.\n            await CoreSettingsHelper.synchronizeSite(false, this.siteId);\n        } catch (error) {\n            if (this.isDestroyed) {\n                return;\n            }\n            CoreDomUtils.showErrorModalDefault(error, 'core.settings.errorsyncsite', true);\n        }\n\n    }\n\n    /**\n     * Returns true if site is beeing synchronized.\n     *\n     * @return True if site is beeing synchronized, false otherwise.\n     */\n    isSynchronizing(): boolean {\n        return !!CoreSettingsHelper.getSiteSyncPromise(this.siteId);\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     */\n    refreshData(refresher?: IonRefresher): void {\n        this.handlers.getSource().setDirty(true);\n        this.fetchData().finally(() => {\n            refresher?.complete();\n        });\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.isDestroyed = true;\n        this.sitesObserver?.off();\n    }\n\n}\n"],"sourceRoot":"webpack:///"}