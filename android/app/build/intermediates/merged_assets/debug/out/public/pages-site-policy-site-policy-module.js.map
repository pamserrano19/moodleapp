{"version":3,"sources":["./src/core/features/login/pages/site-policy/site-policy.html","./src/core/features/login/pages/site-policy/site-policy.module.ts","./src/core/features/login/pages/site-policy/site-policy.scss","./src/core/features/login/pages/site-policy/site-policy.ts"],"names":[],"mappings":"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","file":"pages-site-policy-site-policy-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>\\r\\n            <h1>{{ 'core.login.policyagreement' | translate }}</h1>\\r\\n        </ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <core-loading [hideUntil]=\\\"policyLoaded\\\">\\r\\n        <ion-list *ngIf=\\\"sitePolicy\\\">\\r\\n            <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                <ion-label>\\r\\n                    <p>{{ 'core.login.policyagree' | translate }}</p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-item class=\\\"ion-text-wrap\\\">\\r\\n                <ion-label>\\r\\n                    <p>\\r\\n                        <a [href]=\\\"sitePolicy\\\" core-link [capture]=\\\"false\\\">{{ 'core.login.policyagreementclick' | translate }}</a>\\r\\n                    </p>\\r\\n                </ion-label>\\r\\n            </ion-item>\\r\\n            <ion-card *ngIf=\\\"showInline\\\" class=\\\"core-site-policy-iframe-container\\\">\\r\\n                <core-iframe [src]=\\\"sitePolicy\\\"></core-iframe>\\r\\n            </ion-card>\\r\\n            <ion-button class=\\\"ion-text-wrap ion-margin-horizontal\\\" expand=\\\"block\\\" (click)=\\\"accept()\\\">\\r\\n                {{ 'core.login.policyacceptmandatory' | translate }}\\r\\n            </ion-button>\\r\\n            <ion-button class=\\\"ion-text-wrap ion-margin-horizontal ion-margin-bottom\\\" expand=\\\"block\\\" fill=\\\"outline\\\" (click)=\\\"cancel()\\\">\\r\\n                {{ 'core.login.cancel' | translate }}\\r\\n            </ion-button>\\r\\n        </ion-list>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\nimport { CoreLoginSitePolicyPage } from './site-policy';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: CoreLoginSitePolicyPage,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n    ],\r\n    declarations: [\r\n        CoreLoginSitePolicyPage,\r\n    ],\r\n    exports: [RouterModule],\r\n})\r\nexport class CoreLoginSitePolicyPageModule {}\r\n","export default \":host ion-list {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n}\\n:host ion-list ion-item {\\n  flex-shrink: 0;\\n}\\n:host ion-list .core-site-policy-iframe-container {\\n  height: 100%;\\n}\\n:host ion-list .core-site-policy-iframe-container core-iframe {\\n  height: 100%;\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb3JlL2ZlYXR1cmVzL2xvZ2luL3BhZ2VzL3NpdGUtcG9saWN5L3NpdGUtcG9saWN5LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDSSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxZQUFBO0FBQVI7QUFFUTtFQUNJLGNBQUE7QUFBWjtBQUdRO0VBQ0ksWUFBQTtBQURaO0FBR1k7RUFDSSxZQUFBO0VBQ0EsV0FBQTtBQURoQiIsImZpbGUiOiJzcmMvY29yZS9mZWF0dXJlcy9sb2dpbi9wYWdlcy9zaXRlLXBvbGljeS9zaXRlLXBvbGljeS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gICAgaW9uLWxpc3Qge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcblxyXG4gICAgICAgIGlvbi1pdGVtIHtcclxuICAgICAgICAgICAgZmxleC1zaHJpbms6IDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuY29yZS1zaXRlLXBvbGljeS1pZnJhbWUtY29udGFpbmVyIHtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG5cclxuICAgICAgICAgICAgY29yZS1pZnJhbWUge1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19 */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\n\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreMimetypeUtils } from '@services/utils/mimetype';\nimport { CoreLoginHelper } from '@features/login/services/login-helper';\nimport { CoreSite } from '@classes/site';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreEvents } from '@singletons/events';\n\n/**\n * Page to accept a site policy.\n */\n@Component({\n    selector: 'page-core-login-site-policy',\n    templateUrl: 'site-policy.html',\n    styleUrls: ['site-policy.scss'],\n})\nexport class CoreLoginSitePolicyPage implements OnInit {\n\n    sitePolicy?: string;\n    showInline?: boolean;\n    policyLoaded?: boolean;\n    protected siteId?: string;\n    protected currentSite!: CoreSite;\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.siteId = CoreNavigator.getRouteParam('siteId');\n\n        try {\n            this.currentSite = CoreSites.getRequiredCurrentSite();\n        } catch {\n            // Not logged in, stop.\n            this.cancel();\n\n            return;\n        }\n\n        const currentSiteId = this.currentSite.id;\n        this.siteId = this.siteId || currentSiteId;\n\n        if (this.siteId != currentSiteId) {\n            // Not current site, stop.\n            this.cancel();\n\n            return;\n        }\n\n        this.fetchSitePolicy();\n    }\n\n    /**\n     * Fetch the site policy URL.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchSitePolicy(): Promise<void> {\n        try {\n            this.sitePolicy = await CoreLoginHelper.getSitePolicy(this.siteId);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting site policy.');\n            this.cancel();\n\n            return;\n        }\n\n        // Try to get the mime type.\n        try {\n            const mimeType = await CoreUtils.getMimeTypeFromUrl(this.sitePolicy);\n\n            const extension = CoreMimetypeUtils.getExtension(mimeType, this.sitePolicy);\n            this.showInline = extension == 'html' || extension == 'htm';\n        } catch {\n            // Unable to get mime type, assume it's not supported.\n            this.showInline = false;\n        } finally {\n            this.policyLoaded = true;\n        }\n    }\n\n    /**\n     * Cancel.\n     *\n     * @return Promise resolved when done.\n     */\n    async cancel(): Promise<void> {\n        await CoreUtils.ignoreErrors(CoreSites.logout());\n\n        await CoreNavigator.navigate('/login/sites', { reset: true });\n    }\n\n    /**\n     * Accept the site policy.\n     *\n     * @return Promise resolved when done.\n     */\n    async accept(): Promise<void> {\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            await CoreLoginHelper.acceptSitePolicy(this.siteId);\n\n            // Success accepting, go to site initial page.\n            // Invalidate cache since some WS don't return error if site policy is not accepted.\n            await CoreUtils.ignoreErrors(this.currentSite.invalidateWsCache());\n\n            CoreEvents.trigger(CoreEvents.SITE_POLICY_AGREED, {}, this.siteId);\n\n            await CoreNavigator.navigateToSiteHome();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error accepting site policy.');\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n}\n"],"sourceRoot":"webpack:///"}