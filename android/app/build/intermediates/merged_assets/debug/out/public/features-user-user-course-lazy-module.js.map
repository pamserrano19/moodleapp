{"version":3,"sources":["./src/core/features/user/pages/participants/participants.html","./src/core/features/user/pages/participants/participants.page.ts","./src/core/features/user/user-course-lazy.module.ts"],"names":[],"mappings":"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","file":"features-user-user-course-lazy-module.js","sourcesContent":["export default \"<core-navbar-buttons slot=\\\"end\\\">\\r\\n    <ion-button [hidden]=\\\"!searchEnabled\\\" (click)=\\\"toggleSearch()\\\" [attr.aria-label]=\\\"'core.search' | translate\\\">\\r\\n        <ion-icon name=\\\"fas-search\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n    </ion-button>\\r\\n</core-navbar-buttons>\\r\\n\\r\\n<ion-content>\\r\\n    <core-split-view>\\r\\n        <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!participants.loaded || searchInProgress\\\" (ionRefresh)=\\\"refreshParticipants($event.target)\\\">\\r\\n            <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n        </ion-refresher>\\r\\n\\r\\n        <core-search-box *ngIf=\\\"showSearchBox\\\" [disabled]=\\\"searchInProgress\\\" [spellcheck]=\\\"false\\\" [autoFocus]=\\\"true\\\" [lengthCheck]=\\\"1\\\"\\r\\n            autocorrect=\\\"off\\\" searchArea=\\\"CoreUserParticipants\\\" (onSubmit)=\\\"search($event)\\\" (onClear)=\\\"clearSearch()\\\">\\r\\n        </core-search-box>\\r\\n\\r\\n        <core-loading [hideUntil]=\\\"participants.loaded\\\">\\r\\n            <core-empty-box *ngIf=\\\"participants.empty && !searchInProgress && !searchQuery\\\" icon=\\\"far-user\\\"\\r\\n                [message]=\\\"'core.user.noparticipants' | translate\\\">\\r\\n            </core-empty-box>\\r\\n\\r\\n            <core-empty-box *ngIf=\\\"participants.empty && !searchInProgress && searchQuery\\\" icon=\\\"fas-search\\\"\\r\\n                [message]=\\\"'core.noresults' | translate\\\">\\r\\n            </core-empty-box>\\r\\n\\r\\n            <ion-list *ngIf=\\\"!participants.empty\\\">\\r\\n                <ion-item *ngFor=\\\"let participant of participants.items\\\" class=\\\"ion-text-wrap\\\"\\r\\n                    [attr.aria-current]=\\\"participants.getItemAriaCurrent(participant)\\\" [attr.aria-label]=\\\"participant.fullname\\\"\\r\\n                    (click)=\\\"participants.select(participant)\\\" button detail=\\\"true\\\">\\r\\n\\r\\n                    <core-user-avatar [user]=\\\"participant\\\" [linkProfile]=\\\"false\\\" [checkOnline]=\\\"true\\\" slot=\\\"start\\\">\\r\\n                    </core-user-avatar>\\r\\n\\r\\n                    <ion-label>\\r\\n                        <ng-container *ngIf=\\\"!searchQuery\\\">\\r\\n                            <p class=\\\"item-heading\\\">{{ participant.fullname }}</p>\\r\\n                            <p *ngIf=\\\"participant.lastcourseaccess\\\">\\r\\n                                <strong>{{ 'core.lastaccess' | translate }}: </strong>\\r\\n                                {{ participant.lastcourseaccess | coreTimeAgo }}\\r\\n                            </p>\\r\\n                            <p *ngIf=\\\"!participant.lastcourseaccess && participant.lastaccess\\\">\\r\\n                                <strong>{{ 'core.lastaccess' | translate }}: </strong>\\r\\n                                {{ participant.lastaccess | coreTimeAgo }}\\r\\n                            </p>\\r\\n                        </ng-container>\\r\\n\\r\\n                        <ng-container *ngIf=\\\"searchQuery\\\">\\r\\n                            <p class=\\\"item-heading\\\">\\r\\n                                <core-format-text [text]=\\\"participant.fullname\\\" [highlight]=\\\"searchQuery\\\" [filter]=\\\"false\\\">\\r\\n                                </core-format-text>\\r\\n                            </p>\\r\\n                        </ng-container>\\r\\n                    </ion-label>\\r\\n\\r\\n                </ion-item>\\r\\n            </ion-list>\\r\\n            <core-infinite-loading [enabled]=\\\"participants.loaded && !participants.completed\\\" (action)=\\\"fetchMoreParticipants($event)\\\"\\r\\n                [error]=\\\"fetchMoreParticipantsFailed\\\">\\r\\n            </core-infinite-loading>\\r\\n        </core-loading>\\r\\n    </core-split-view>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\n\nimport { CoreApp } from '@services/app';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreUser, CoreUserParticipant, CoreUserData } from '@features/user/services/user';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreUserParticipantsSource } from '@features/user/classes/participants-source';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\n\n/**\n * Page that displays the list of course participants.\n */\n@Component({\n    selector: 'page-core-user-participants',\n    templateUrl: 'participants.html',\n})\nexport class CoreUserParticipantsPage implements OnInit, AfterViewInit, OnDestroy {\n\n    courseId!: number;\n    participants!: CoreUserParticipantsManager;\n    searchQuery: string | null = null;\n    searchInProgress = false;\n    searchEnabled = false;\n    showSearchBox = false;\n    fetchMoreParticipantsFailed = false;\n\n    @ViewChild(CoreSplitViewComponent) splitView!: CoreSplitViewComponent;\n\n    constructor() {\n        try {\n            this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            this.participants = new CoreUserParticipantsManager(\n                CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(CoreUserParticipantsSource, [this.courseId]),\n                CoreUserParticipantsPage,\n            );\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        this.searchEnabled = await CoreUser.canSearchParticipantsInSite();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngAfterViewInit(): Promise<void> {\n        await this.fetchInitialParticipants();\n\n        this.participants.start(this.splitView);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.participants.destroy();\n    }\n\n    /**\n     * Show or hide search box.\n     */\n    toggleSearch(): void {\n        this.showSearchBox = !this.showSearchBox;\n\n        if (this.showSearchBox) {\n            // Make search bar visible.\n            this.splitView.menuContent.scrollToTop();\n        } else {\n            this.clearSearch();\n        }\n    }\n\n    /**\n     * Clear search.\n     */\n    async clearSearch(): Promise<void> {\n        if (this.searchQuery === null) {\n            // Nothing to clear.\n            return;\n        }\n\n        const newSource = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(CoreUserParticipantsSource, [this.courseId]);\n\n        this.searchQuery = null;\n        this.searchInProgress = false;\n        this.participants.setSource(newSource);\n\n        await this.fetchInitialParticipants();\n    }\n\n    /**\n     * Start a new search.\n     *\n     * @param query Text to search for.\n     */\n    async search(query: string): Promise<void> {\n        CoreApp.closeKeyboard();\n\n        const newSource = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(\n            CoreUserParticipantsSource,\n            [this.courseId, query],\n        );\n\n        this.searchInProgress = true;\n        this.searchQuery = query;\n        this.participants.setSource(newSource);\n\n        await this.fetchInitialParticipants();\n\n        this.searchInProgress = false;\n    }\n\n    /**\n     * Refresh participants.\n     *\n     * @param refresher Refresher.\n     */\n    async refreshParticipants(refresher: IonRefresher): Promise<void> {\n        await CoreUtils.ignoreErrors(CoreUser.invalidateParticipantsList(this.courseId));\n        await CoreUtils.ignoreErrors(this.fetchParticipants(true));\n\n        refresher?.complete();\n    }\n\n    /**\n     * Load a new batch of participants.\n     *\n     * @param complete Completion callback.\n     */\n    async fetchMoreParticipants(complete: () => void): Promise<void> {\n        try {\n            await this.fetchParticipants(false);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error loading more participants');\n\n            this.fetchMoreParticipantsFailed = true;\n        }\n\n        complete();\n    }\n\n    /**\n     * Obtain the initial batch of participants.\n     */\n    private async fetchInitialParticipants(): Promise<void> {\n        try {\n            await this.fetchParticipants(true);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error loading participants');\n\n            this.participants.reset();\n        }\n    }\n\n    /**\n     * Update the list of participants.\n     *\n     * @param reload Whether to reload the list or load the next page.\n     */\n    private async fetchParticipants(reload: boolean): Promise<void> {\n        reload\n            ? await this.participants.reload()\n            : await this.participants.load();\n\n        this.fetchMoreParticipantsFailed = false;\n    }\n\n}\n\n/**\n * Helper to manage the list of participants.\n */\nclass CoreUserParticipantsManager extends CoreListItemsManager<CoreUserParticipant | CoreUserData, CoreUserParticipantsSource> {\n\n    /**\n     * @inheritdoc\n     */\n    protected async logActivity(): Promise<void> {\n        await CoreUser.logParticipantsView(this.getSource().COURSE_ID);\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreSearchComponentsModule } from '@features/search/components/components.module';\n\nimport { CoreUserParticipantsPage } from './pages/participants/participants.page';\nimport { conditionalRoutes } from '@/app/app-routing.module';\nimport { CoreScreen } from '@services/screen';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CoreUserParticipantsPage,\n        children: conditionalRoutes([\n            {\n                path: ':userId',\n                loadChildren: () => import('@features/user/pages/profile/profile.module').then(m => m.CoreUserProfilePageModule),\n            },\n        ], () => CoreScreen.isTablet),\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        CoreSearchComponentsModule,\n    ],\n    declarations: [\n        CoreUserParticipantsPage,\n    ],\n})\nexport class CoreUserCourseLazyModule {}\n"],"sourceRoot":"webpack:///"}