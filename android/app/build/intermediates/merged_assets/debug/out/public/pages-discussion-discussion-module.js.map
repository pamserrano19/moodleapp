{"version":3,"sources":["./src/addons/messages/components/conversation-info/conversation-info.html","./src/addons/messages/pages/discussion/discussion.html","./src/addons/mod/forum/pages/discussion/discussion.html","./src/addons/messages/components/components.module.ts","./src/addons/messages/components/conversation-info/conversation-info.ts","./src/addons/messages/pages/discussion/discussion.module.ts","./src/addons/messages/pages/discussion/discussion.page.ts","./src/addons/messages/pages/discussion/discussion.scss","./src/addons/mod/forum/pages/discussion/discussion.module.ts","./src/addons/mod/forum/pages/discussion/discussion.page.ts","./src/addons/mod/forum/pages/discussion/discussion.scss","./src/core/classes/items-management/swipe-navigation-items-manager.ts"],"names":[],"mappings":"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","file":"pages-discussion-discussion-module.js","sourcesContent":["export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-title>\\r\\n            <h2>{{ 'addon.messages.groupinfo' | translate }}</h2>\\r\\n        </ion-title>\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"closeModal()\\\" [attr.aria-label]=\\\"'core.close' | translate\\\">\\r\\n                <ion-icon name=\\\"fas-times\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"refreshData($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n\\r\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\r\\n        <ion-item class=\\\"ion-text-center\\\" *ngIf=\\\"conversation\\\">\\r\\n            <ion-label>\\r\\n                <div class=\\\"large-avatar\\\">\\r\\n                    <img class=\\\"avatar\\\" [src]=\\\"conversation!.imageurl\\\" core-external-content [alt]=\\\"conversation!.name\\\"\\r\\n                        onError=\\\"this.src='assets/img/group-avatar.svg'\\\">\\r\\n                </div>\\r\\n                <h2>\\r\\n                    <core-format-text [text]=\\\"conversation!.name\\\" contextLevel=\\\"system\\\" [contextInstanceId]=\\\"0\\\"></core-format-text>\\r\\n                </h2>\\r\\n                <p>\\r\\n                    <core-format-text *ngIf=\\\"conversation!.subname\\\" [text]=\\\"conversation!.subname\\\" contextLevel=\\\"system\\\"\\r\\n                        [contextInstanceId]=\\\"0\\\">\\r\\n                    </core-format-text>\\r\\n                </p>\\r\\n                <p>{{ 'addon.messages.numparticipants' | translate:{$a: conversation!.membercount} }}</p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n\\r\\n        <ion-item class=\\\"ion-text-wrap addon-messages-conversation-item\\\" *ngFor=\\\"let member of members\\\" (click)=\\\"closeModal(member.id)\\\"\\r\\n            detail=\\\"true\\\" button>\\r\\n            <core-user-avatar [user]=\\\"member\\\" [linkProfile]=\\\"false\\\" [checkOnline]=\\\"member.showonlinestatus\\\" slot=\\\"start\\\">\\r\\n            </core-user-avatar>\\r\\n            <ion-label>\\r\\n                <p class=\\\"item-heading\\\">\\r\\n                    {{ member.fullname }}\\r\\n                    <ion-icon name=\\\"fas-user-slash\\\" *ngIf=\\\"member.isblocked\\\"\\r\\n                        [attr.aria-label]=\\\"'addon.messages.contactblocked' | translate\\\">\\r\\n                    </ion-icon>\\r\\n                </p>\\r\\n            </ion-label>\\r\\n        </ion-item>\\r\\n\\r\\n        <core-infinite-loading [enabled]=\\\"canLoadMore\\\" (action)=\\\"loadMoreMembers($event)\\\" [error]=\\\"loadMoreError\\\">\\r\\n        </core-infinite-loading>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1>\\r\\n                <img *ngIf=\\\"loaded && !otherMember && conversationImage\\\" class=\\\"core-bar-button-image\\\" [src]=\\\"conversationImage\\\" alt=\\\"\\\"\\r\\n                    onError=\\\"this.src='assets/img/group-avatar.svg'\\\" core-external-content role=\\\"presentation\\\" [siteId]=\\\"siteId || null\\\">\\r\\n                <core-user-avatar *ngIf=\\\"loaded && otherMember\\\" class=\\\"core-bar-button-image\\\" [user]=\\\"otherMember\\\" [linkProfile]=\\\"false\\\"\\r\\n                    [checkOnline]=\\\"otherMember.showonlinestatus\\\">\\r\\n                </core-user-avatar>\\r\\n                <core-format-text [text]=\\\"title\\\" contextLevel=\\\"system\\\" [contextInstanceId]=\\\"0\\\"></core-format-text>\\r\\n                <ion-icon *ngIf=\\\"conversation && conversation.isfavourite\\\" name=\\\"fas-star\\\"\\r\\n                    [attr.aria-label]=\\\"'core.favourites' | translate\\\">\\r\\n                </ion-icon>\\r\\n                <ion-icon *ngIf=\\\"conversation && conversation.ismuted\\\" name=\\\"fas-bell-slash\\\"\\r\\n                    [attr.aria-label]=\\\"'addon.messages.mutedconversation' | translate\\\">\\r\\n                </ion-icon>\\r\\n            </h1>\\r\\n        </ion-title>\\r\\n        <ion-buttons slot=\\\"end\\\"></ion-buttons>\\r\\n    </ion-toolbar>\\r\\n    <core-navbar-buttons slot=\\\"end\\\">\\r\\n        <core-context-menu [attr.aria-label]=\\\"'addon.messages.conversationactions' | translate\\\">\\r\\n            <core-context-menu-item [hidden]=\\\"isSelf || !showInfo || isGroup\\\" [priority]=\\\"1000\\\"\\r\\n                [content]=\\\"'addon.messages.info' | translate\\\" (action)=\\\"viewInfo()\\\" iconAction=\\\"fas-info-circle\\\"></core-context-menu-item>\\r\\n            <core-context-menu-item [hidden]=\\\"isSelf || !showInfo || !isGroup\\\" [priority]=\\\"1000\\\"\\r\\n                [content]=\\\"'addon.messages.groupinfo' | translate\\\" (action)=\\\"viewInfo()\\\" iconAction=\\\"fas-info-circle\\\">\\r\\n            </core-context-menu-item>\\r\\n            <core-context-menu-item [hidden]=\\\"!groupMessagingEnabled || !conversation\\\" [priority]=\\\"800\\\" (action)=\\\"changeFavourite($event)\\\"\\r\\n                [closeOnClick]=\\\"false\\\" [content]=\\\"(conversation && conversation.isfavourite ? 'addon.messages.removefromfavourites' :\\r\\n                'addon.messages.addtofavourites') | translate\\\" [iconAction]=\\\"favouriteIcon\\\" [iconSlash]=\\\"favouriteIconSlash\\\">\\r\\n            </core-context-menu-item>\\r\\n            <core-context-menu-item [hidden]=\\\"isSelf || !otherMember || otherMember.isblocked\\\" [priority]=\\\"700\\\"\\r\\n                [content]=\\\"'addon.messages.blockuser' | translate\\\" (action)=\\\"blockUser()\\\" [iconAction]=\\\"blockIcon\\\">\\r\\n            </core-context-menu-item>\\r\\n            <core-context-menu-item [hidden]=\\\"isSelf || !otherMember || !otherMember.isblocked\\\" [priority]=\\\"700\\\"\\r\\n                [content]=\\\"'addon.messages.unblockuser' | translate\\\" (action)=\\\"unblockUser()\\\" [iconAction]=\\\"blockIcon\\\">\\r\\n            </core-context-menu-item>\\r\\n            <core-context-menu-item [hidden]=\\\"isSelf || !muteEnabled || !conversation\\\" [priority]=\\\"600\\\" (action)=\\\"changeMute($event)\\\"\\r\\n                [closeOnClick]=\\\"false\\\" [content]=\\\"(conversation && conversation.ismuted ? 'addon.messages.unmuteconversation' :\\r\\n                'addon.messages.muteconversation') | translate\\\" [iconAction]=\\\"muteIcon\\\"></core-context-menu-item>\\r\\n            <core-context-menu-item [hidden]=\\\"!canDelete || !messages || !messages.length\\\" [priority]=\\\"400\\\"\\r\\n                [content]=\\\"'addon.messages.showdeletemessages' | translate\\\" iconAction=\\\"toggle\\\" [(toggle)]=\\\"showDelete\\\">\\r\\n            </core-context-menu-item>\\r\\n            <core-context-menu-item [hidden]=\\\"!groupMessagingEnabled || !conversationId || isGroup || !messages || !messages.length\\\"\\r\\n                [priority]=\\\"200\\\" [content]=\\\"'addon.messages.deleteconversation' | translate\\\" (action)=\\\"deleteConversation($event)\\\"\\r\\n                [closeOnClick]=\\\"false\\\" [iconAction]=\\\"deleteIcon\\\"></core-context-menu-item>\\r\\n            <core-context-menu-item\\r\\n                [hidden]=\\\"isSelf || !otherMember || otherMember.iscontact || requestContactSent || requestContactReceived\\\" [priority]=\\\"100\\\"\\r\\n                [content]=\\\"'addon.messages.addtoyourcontacts' | translate\\\" (action)=\\\"createContactRequest()\\\" [iconAction]=\\\"addRemoveIcon\\\">\\r\\n            </core-context-menu-item>\\r\\n            <core-context-menu-item [hidden]=\\\"isSelf || !otherMember || !otherMember.iscontact\\\" [priority]=\\\"100\\\"\\r\\n                [content]=\\\"'addon.messages.removefromyourcontacts' | translate\\\" (action)=\\\"removeContact()\\\" [iconAction]=\\\"addRemoveIcon\\\"\\r\\n                [iconSlash]=\\\"true\\\"></core-context-menu-item>\\r\\n        </core-context-menu>\\r\\n    </core-navbar-buttons>\\r\\n</ion-header>\\r\\n<ion-content (ionScroll)=\\\"scrollFunction()\\\">\\r\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\r\\n        <!-- Load previous messages. -->\\r\\n        <core-infinite-loading [enabled]=\\\"canLoadMore\\\" (action)=\\\"loadPrevious($event)\\\" position=\\\"top\\\" [error]=\\\"loadMoreError\\\">\\r\\n        </core-infinite-loading>\\r\\n\\r\\n        <ng-container *ngIf=\\\"isSelf && !canLoadMore\\\">\\r\\n            <p class=\\\"ion-text-center\\\">{{ 'addon.messages.selfconversation' | translate }}</p>\\r\\n            <p class=\\\"ion-text-center\\\"><i>{{ 'addon.messages.selfconversationdefaultmessage' | translate }}</i></p>\\r\\n        </ng-container>\\r\\n\\r\\n        <h2 class=\\\"sr-only\\\">{{ title }}</h2>\\r\\n\\r\\n        <ion-list class=\\\"addon-messages-discussion-container\\\" [class.addon-messages-discussion-group]=\\\"isGroup\\\" [attr.aria-live]=\\\"'polite'\\\">\\r\\n            <ng-container *ngFor=\\\"let message of messages; index as index; last as last\\\">\\r\\n                <h3 class=\\\"ion-text-center addon-messages-date\\\" *ngIf=\\\"message.showDate\\\">\\r\\n                    {{ message.timecreated | coreFormatDate: \\\"strftimedayshort\\\" }}\\r\\n                </h3>\\r\\n\\r\\n                <ion-chip class=\\\"addon-messages-unreadfrom\\\" *ngIf=\\\"unreadMessageFrom && message.id == unreadMessageFrom\\\" color=\\\"light\\\">\\r\\n                    <ion-label>{{ 'addon.messages.newmessages' | translate }}</ion-label>\\r\\n                    <ion-icon name=\\\"fas-arrow-down\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                </ion-chip>\\r\\n\\r\\n                <ion-item class=\\\"ion-text-wrap addon-message\\\" (longPress)=\\\"copyMessage(message)\\\"\\r\\n                    [class.addon-message-mine]=\\\"message.useridfrom == currentUserId\\\"\\r\\n                    [class.addon-message-not-mine]=\\\"message.useridfrom != currentUserId\\\"\\r\\n                    [class.addon-message-no-user]=\\\"!message.showUserData\\\"\\r\\n                    [@coreSlideInOut]=\\\"message.useridfrom == currentUserId ? '' : 'fromLeft'\\\">\\r\\n                    <ion-label>\\r\\n                        <!-- User data. -->\\r\\n                        <div *ngIf=\\\"message.showUserData\\\" class=\\\"item-heading addon-message-user\\\">\\r\\n                            <core-user-avatar slot=\\\"start\\\" [user]=\\\"members[message.useridfrom]\\\" [linkProfile]=\\\"false\\\" aria-hidden=\\\"true\\\">\\r\\n                            </core-user-avatar>\\r\\n                            <div>{{ members[message.useridfrom].fullname }}</div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"!message.showUserData\\\" class=\\\"sr-only\\\">\\r\\n                            {{ message.useridfrom == currentUserId\\r\\n                            ? ('addon.messages.you' | translate)\\r\\n                            : members[message.useridfrom].fullname }}\\r\\n                        </div>\\r\\n\\r\\n                        <!-- Some messages have <p> and some others don't. Add a <p> so they all have same styles. -->\\r\\n                        <div class=\\\"addon-message-text\\\">\\r\\n                            <core-format-text (afterRender)=\\\"last && scrollToBottom()\\\" [text]=\\\"message.text\\\" contextLevel=\\\"system\\\"\\r\\n                                [contextInstanceId]=\\\"0\\\"></core-format-text>\\r\\n                        </div>\\r\\n                    </ion-label>\\r\\n                    <ion-note *ngIf=\\\"!message.pending\\\" slot=\\\"end\\\">{{ message.timecreated | coreFormatDate: \\\"strftimetime\\\" }}</ion-note>\\r\\n                    <ion-note *ngIf=\\\"message.pending\\\" slot=\\\"end\\\">\\r\\n                        <ion-icon name=\\\"fas-clock\\\" [attr.aria-label]=\\\"'core.notsent' | translate\\\" role=\\\"status\\\"></ion-icon>\\r\\n                    </ion-note>\\r\\n                    <ion-button fill=\\\"clear\\\" *ngIf=\\\"!message.sending && showDelete\\\" (click)=\\\"deleteMessage(message, index)\\\"\\r\\n                        class=\\\"addon-messages-delete-button\\\" [@coreSlideInOut]=\\\"'fromRight'\\\"\\r\\n                        [attr.aria-label]=\\\" 'addon.messages.deletemessage' | translate\\\" slot=\\\"end\\\">\\r\\n                        <ion-icon name=\\\"fas-trash\\\" color=\\\"danger\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                    </ion-button>\\r\\n\\r\\n                    <div class=\\\"tail\\\" *ngIf=\\\"message.showTail\\\"></div>\\r\\n                </ion-item>\\r\\n            </ng-container>\\r\\n        </ion-list>\\r\\n\\r\\n        <core-empty-box *ngIf=\\\"!messages || messages.length <= 0\\\" icon=\\\"far-comments\\\"\\r\\n            [message]=\\\"'addon.messages.nomessagesfound' | translate\\\"></core-empty-box>\\r\\n    </core-loading>\\r\\n    <!-- Scroll bottom. -->\\r\\n    <ion-fab slot=\\\"fixed\\\" core-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" *ngIf=\\\"loaded && newMessages > 0\\\">\\r\\n        <ion-fab-button size=\\\"small\\\" (click)=\\\"scrollToFirstUnreadMessage()\\\" color=\\\"light\\\"\\r\\n            [attr.aria-label]=\\\"'addon.messages.newmessages' | translate\\\">\\r\\n            <ion-icon name=\\\"fas-arrow-down\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n            <span class=\\\"sr-only\\\">{{ 'addon.messages.newmessages' | translate }}</span>\\r\\n        </ion-fab-button>\\r\\n        <ion-badge class=\\\"core-discussion-messages-badge\\\">{{ newMessages }}</ion-badge>\\r\\n    </ion-fab>\\r\\n</ion-content>\\r\\n<ion-footer class=\\\"footer-adjustable\\\" *ngIf=\\\"loaded && (!conversationId || conversation)\\\">\\r\\n    <ion-toolbar [color]=\\\"footerType == 'message' ? 'contrast' : 'light'\\\">\\r\\n        <p *ngIf=\\\"footerType == 'unable'\\\" class=\\\"ion-text-center ion-margin-horizontal\\\">\\r\\n            {{ 'addon.messages.unabletomessage' | translate }}\\r\\n        </p>\\r\\n        <div *ngIf=\\\"footerType == 'blocked'\\\" class=\\\"ion-padding-horizontal\\\">\\r\\n            <p class=\\\"ion-text-center\\\">{{ 'addon.messages.youhaveblockeduser' | translate }}</p>\\r\\n            <ion-button expand=\\\"block\\\" class=\\\"ion-text-wrap ion-margin-bottom\\\" (click)=\\\"unblockUser()\\\">\\r\\n                {{ 'addon.messages.unblockuser' | translate }}\\r\\n            </ion-button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"footerType == 'requiresContact' && otherMember\\\" class=\\\"ion-padding-horizontal\\\">\\r\\n            <p class=\\\"ion-text-center\\\">\\r\\n                <strong>{{ 'addon.messages.isnotinyourcontacts' | translate: {$a: otherMember.fullname} }}</strong>\\r\\n            </p>\\r\\n            <p class=\\\"ion-text-center\\\">{{ 'addon.messages.requirecontacttomessage' | translate: {$a: otherMember.fullname} }}</p>\\r\\n            <ion-button expand=\\\"block\\\" class=\\\"ion-text-wrap ion-margin-bottom\\\" (click)=\\\"createContactRequest()\\\">\\r\\n                {{ 'addon.messages.sendcontactrequest' | translate }}\\r\\n            </ion-button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"footerType == 'requestReceived' && otherMember\\\" class=\\\"ion-padding-horizontal\\\">\\r\\n            <p class=\\\"ion-text-center\\\">{{ 'addon.messages.userwouldliketocontactyou' | translate: {$a: otherMember.fullname} }}</p>\\r\\n            <ion-button expand=\\\"block\\\" class=\\\"ion-text-wrap ion-margin-bottom\\\" (click)=\\\"confirmContactRequest()\\\">\\r\\n                {{ 'addon.messages.acceptandaddcontact' | translate }}\\r\\n            </ion-button>\\r\\n            <ion-button expand=\\\"block\\\" class=\\\"ion-text-wrap ion-margin-bottom\\\" fill=\\\"outline\\\" (click)=\\\"declineContactRequest()\\\">\\r\\n                {{ 'addon.messages.decline' | translate }}\\r\\n            </ion-button>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"footerType == 'requestSent' || (footerType == 'message' && requestContactSent)\\\" class=\\\"ion-padding-horizontal\\\">\\r\\n            <p class=\\\"ion-text-center\\\"><strong>{{ 'addon.messages.contactrequestsent' | translate }}</strong></p>\\r\\n            <p class=\\\"ion-text-center\\\" *ngIf=\\\"otherMember\\\">\\r\\n                {{ 'addon.messages.yourcontactrequestpending' | translate: {$a: otherMember.fullname} }}\\r\\n            </p>\\r\\n        </div>\\r\\n        <core-send-message-form *ngIf=\\\"footerType == 'message'\\\" (onSubmit)=\\\"sendMessage($event)\\\" [showKeyboard]=\\\"showKeyboard\\\"\\r\\n            [placeholder]=\\\"'addon.messages.newmessage' | translate\\\"></core-send-message-form>\\r\\n    </ion-toolbar>\\r\\n</ion-footer>\\r\\n\";","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-title>\\r\\n            <h1 *ngIf=\\\"startingPost\\\">\\r\\n                <core-format-text contextLevel=\\\"module\\\" [text]=\\\"startingPost.subject\\\" [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\">\\r\\n                </core-format-text>\\r\\n            </h1>\\r\\n        </ion-title>\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <!-- The context menu will be added in here. -->\\r\\n        </ion-buttons>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n<core-navbar-buttons slot=\\\"end\\\">\\r\\n    <core-context-menu>\\r\\n        <core-context-menu-item *ngIf=\\\"discussionLoaded && !postHasOffline && isOnline\\\" [priority]=\\\"650\\\"\\r\\n            [content]=\\\"'addon.mod_forum.refreshposts' | translate\\\" [iconAction]=\\\"refreshIcon\\\" [closeOnClick]=\\\"false\\\"\\r\\n            (action)=\\\"doRefresh(null, $event)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item *ngIf=\\\"discussionLoaded && isMobile && postHasOffline && isOnline\\\" [priority]=\\\"550\\\"\\r\\n            [content]=\\\"'core.settings.synchronizenow' | translate\\\" [iconAction]=\\\"syncIcon\\\" [closeOnClick]=\\\"false\\\"\\r\\n            (action)=\\\"doRefresh(null, $event, true)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"sort == 'flat-oldest'\\\" [priority]=\\\"500\\\"\\r\\n            [content]=\\\"'addon.mod_forum.modeflatoldestfirst' | translate\\\" iconAction=\\\"fas-arrow-down\\\" (action)=\\\"changeSort('flat-oldest')\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"sort == 'flat-newest'\\\" [priority]=\\\"450\\\"\\r\\n            [content]=\\\"'addon.mod_forum.modeflatnewestfirst' | translate\\\" iconAction=\\\"fas-arrow-up\\\" (action)=\\\"changeSort('flat-newest')\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"sort == 'nested'\\\" [priority]=\\\"400\\\" [content]=\\\"'addon.mod_forum.modenested' | translate\\\"\\r\\n            iconAction=\\\"fas-exchange-alt\\\" (action)=\\\"changeSort('nested')\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!discussion || !discussion.canlock || discussion.locked\\\" [priority]=\\\"300\\\"\\r\\n            [content]=\\\"'addon.mod_forum.lockdiscussion' | translate\\\" iconAction=\\\"fas-lock\\\" (action)=\\\"setLockState(true)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!discussion || !discussion.canlock || !discussion.locked\\\" [priority]=\\\"300\\\"\\r\\n            [content]=\\\"'addon.mod_forum.unlockdiscussion' | translate\\\" iconAction=\\\"fas-unlock\\\" (action)=\\\"setLockState(false)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!discussion || !canPin || discussion.pinned\\\" [priority]=\\\"250\\\"\\r\\n            [content]=\\\"'addon.mod_forum.pindiscussion' | translate\\\" iconAction=\\\"fas-map-pin\\\" (action)=\\\"setPinState(true)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!discussion || !canPin || !discussion.pinned\\\" [priority]=\\\"250\\\"\\r\\n            [content]=\\\"'addon.mod_forum.unpindiscussion' | translate\\\" [iconSlash]=\\\"true\\\" iconAction=\\\"fas-map-pin\\\"\\r\\n            (action)=\\\"setPinState(false)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!discussion || !discussion.canfavourite || discussion.starred\\\" [priority]=\\\"200\\\"\\r\\n            [content]=\\\"'addon.mod_forum.addtofavourites' | translate\\\" iconAction=\\\"fas-star\\\" (action)=\\\"toggleFavouriteState(true)\\\">\\r\\n        </core-context-menu-item>\\r\\n        <core-context-menu-item [hidden]=\\\"!discussion || !discussion.canfavourite || !discussion.starred\\\" [priority]=\\\"200\\\"\\r\\n            [content]=\\\"'addon.mod_forum.removefromfavourites' | translate\\\" iconAction=\\\"fas-star\\\" [iconSlash]=\\\"true\\\"\\r\\n            (action)=\\\"toggleFavouriteState(false)\\\">\\r\\n        </core-context-menu-item>\\r\\n    </core-context-menu>\\r\\n</core-navbar-buttons>\\r\\n<ion-content [core-swipe-navigation]=\\\"discussions\\\" class=\\\"limited-width\\\">\\r\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!discussionLoaded\\\" (ionRefresh)=\\\"doRefresh($event.target)\\\">\\r\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n\\r\\n    <core-loading [hideUntil]=\\\"discussionLoaded\\\">\\r\\n        <!-- Discussion replies found to be synchronized -->\\r\\n        <ion-card class=\\\"core-warning-card\\\" *ngIf=\\\"postHasOffline || hasOfflineRatings\\\">\\r\\n            <ion-item>\\r\\n                <ion-icon name=\\\"fas-exclamation-triangle\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label>{{ 'core.hasdatatosync' | translate:{$a: discussionStr} }}</ion-label>\\r\\n            </ion-item>\\r\\n        </ion-card>\\r\\n\\r\\n        <!-- Cut-off date or due date message -->\\r\\n        <ion-card class=\\\"core-info-card\\\" *ngIf=\\\"availabilityMessage\\\">\\r\\n            <ion-item>\\r\\n                <ion-icon name=\\\"fas-info-circle\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label>{{ availabilityMessage }}</ion-label>\\r\\n            </ion-item>\\r\\n        </ion-card>\\r\\n\\r\\n        <ion-card class=\\\"core-info-card\\\" *ngIf=\\\"discussion && discussion.locked\\\">\\r\\n            <ion-item>\\r\\n                <ion-icon name=\\\"fas-lock\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\r\\n                <ion-label>{{ 'addon.mod_forum.discussionlocked' | translate }}</ion-label>\\r\\n            </ion-item>\\r\\n        </ion-card>\\r\\n\\r\\n        <div *ngIf=\\\"startingPost\\\" class=\\\"ion-margin-bottom\\\">\\r\\n            <addon-mod-forum-post [post]=\\\"startingPost\\\" [discussion]=\\\"discussion\\\" [courseId]=\\\"courseId\\\" [highlight]=\\\"true\\\"\\r\\n                [discussionId]=\\\"discussionId\\\" [component]=\\\"component\\\" [componentId]=\\\"cmId\\\" [formData]=\\\"formData\\\"\\r\\n                [originalData]=\\\"originalData\\\" [forum]=\\\"forum\\\" [accessInfo]=\\\"accessInfo\\\" [trackPosts]=\\\"trackPosts\\\" [ratingInfo]=\\\"ratingInfo\\\"\\r\\n                [leavingPage]=\\\"leavingPage\\\" (onPostChange)=\\\"postListChanged()\\\">\\r\\n            </addon-mod-forum-post>\\r\\n        </div>\\r\\n\\r\\n        <ion-card *ngIf=\\\"sort != 'nested'\\\">\\r\\n            <ng-container *ngFor=\\\"let post of posts; first as first\\\">\\r\\n                <core-spacer *ngIf=\\\"!first\\\"></core-spacer>\\r\\n                <addon-mod-forum-post [post]=\\\"post\\\" [courseId]=\\\"courseId\\\" [discussionId]=\\\"discussionId\\\" [component]=\\\"component\\\"\\r\\n                    [componentId]=\\\"cmId\\\" [formData]=\\\"formData\\\" [originalData]=\\\"originalData\\\" [parentSubject]=\\\"postSubjects[post.parentid]\\\"\\r\\n                    [forum]=\\\"forum\\\" [accessInfo]=\\\"accessInfo\\\" [trackPosts]=\\\"trackPosts\\\" [ratingInfo]=\\\"ratingInfo\\\"\\r\\n                    [leavingPage]=\\\"leavingPage\\\" (onPostChange)=\\\"postListChanged()\\\">\\r\\n                </addon-mod-forum-post>\\r\\n            </ng-container>\\r\\n        </ion-card>\\r\\n\\r\\n        <ng-container *ngIf=\\\"sort == 'nested'\\\">\\r\\n            <ng-container *ngFor=\\\"let post of posts\\\">\\r\\n                <ng-container *ngTemplateOutlet=\\\"nestedPosts; context: {post: post}\\\"></ng-container>\\r\\n            </ng-container>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-template #nestedPosts let-post=\\\"post\\\">\\r\\n            <ion-card>\\r\\n                <addon-mod-forum-post [post]=\\\"post\\\" [courseId]=\\\"courseId\\\" [discussionId]=\\\"discussionId\\\" [component]=\\\"component\\\"\\r\\n                    [componentId]=\\\"cmId\\\" [formData]=\\\"formData\\\" [originalData]=\\\"originalData\\\" [parentSubject]=\\\"postSubjects[post.parentid]\\\"\\r\\n                    [forum]=\\\"forum\\\" [accessInfo]=\\\"accessInfo\\\" [trackPosts]=\\\"trackPosts\\\" [ratingInfo]=\\\"ratingInfo\\\"\\r\\n                    [leavingPage]=\\\"leavingPage\\\" (onPostChange)=\\\"postListChanged()\\\">\\r\\n                </addon-mod-forum-post>\\r\\n            </ion-card>\\r\\n            <div class=\\\"ion-padding-start\\\" *ngIf=\\\"post.children && post.children.length && post.children[0].subject\\\">\\r\\n                <ng-container *ngFor=\\\"let child of post.children\\\">\\r\\n                    <ng-container *ngTemplateOutlet=\\\"nestedPosts; context: {post: child}\\\"></ng-container>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </core-loading>\\r\\n</ion-content>\\r\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\n\r\nimport { AddonMessagesConversationInfoComponent } from './conversation-info/conversation-info';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AddonMessagesConversationInfoComponent,\r\n    ],\r\n    imports: [\r\n        CoreSharedModule,\r\n    ],\r\n})\r\nexport class AddonMessagesComponentsModule {}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { IonRefresher } from '@ionic/angular';\r\nimport {\r\n    AddonMessagesConversationFormatted,\r\n    AddonMessagesConversationMember,\r\n    AddonMessages,\r\n} from '../../services/messages';\r\nimport { CoreDomUtils } from '@services/utils/dom';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModalController } from '@singletons';\r\n\r\n/**\r\n * Component that displays the list of conversations, including group conversations.\r\n */\r\n@Component({\r\n    selector: 'page-addon-messages-conversation-info',\r\n    templateUrl: 'conversation-info.html',\r\n})\r\nexport class AddonMessagesConversationInfoComponent implements OnInit {\r\n\r\n    @Input() conversationId = 0;\r\n\r\n    loaded = false;\r\n    conversation?: AddonMessagesConversationFormatted;\r\n    members: AddonMessagesConversationMember[] = [];\r\n    canLoadMore = false;\r\n    loadMoreError = false;\r\n\r\n    constructor(\r\n        protected route: ActivatedRoute,\r\n    ) {\r\n    }\r\n\r\n    /**\r\n     * Component loaded.\r\n     */\r\n    ngOnInit(): void {\r\n        this.fetchData().finally(() => {\r\n            this.loaded = true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fetch the required data.\r\n     *\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async fetchData(): Promise<void> {\r\n        // Get the conversation data first.\r\n        try {\r\n            const conversation = await AddonMessages.getConversation(this.conversationId, false, true, 0, 0);\r\n            this.conversation = conversation;\r\n\r\n            // Now get the members.\r\n            await this.fetchMembers();\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting members.');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get conversation members.\r\n     *\r\n     * @param loadingMore Whether we are loading more data or just the first ones.\r\n     * @return Promise resolved when done.\r\n     */\r\n    protected async fetchMembers(loadingMore?: boolean): Promise<void> {\r\n        this.loadMoreError = false;\r\n\r\n        const limitFrom = loadingMore ? this.members.length : 0;\r\n\r\n        const data = await AddonMessages.getConversationMembers(this.conversationId, limitFrom);\r\n        if (loadingMore) {\r\n            this.members = this.members.concat(data.members);\r\n        } else {\r\n            this.members = data.members;\r\n        }\r\n\r\n        this.canLoadMore = data.canLoadMore;\r\n    }\r\n\r\n    /**\r\n     * Function to load more members.\r\n     *\r\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\r\n     * @return Resolved when done.\r\n     */\r\n    async loadMoreMembers(infiniteComplete?: () => void): Promise<void> {\r\n        try {\r\n            await this.fetchMembers(true);\r\n        } catch (error) {\r\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting members.');\r\n            this.loadMoreError = true;\r\n        } finally {\r\n            infiniteComplete && infiniteComplete();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh the data.\r\n     *\r\n     * @param refresher Refresher.\r\n     * @return Promise resolved when done.\r\n     */\r\n    async refreshData(refresher?: IonRefresher): Promise<void> {\r\n        const promises: Promise<void>[] = [];\r\n\r\n        promises.push(AddonMessages.invalidateConversation(this.conversationId));\r\n        promises.push(AddonMessages.invalidateConversationMembers(this.conversationId));\r\n\r\n        await Promise.all(promises);\r\n\r\n        await this.fetchData().finally(() => {\r\n            refresher?.complete();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Close modal.\r\n     *\r\n     * @param userId User conversation to load.\r\n     */\r\n    closeModal(userId?: number): void {\r\n        ModalController.dismiss(userId);\r\n    }\r\n\r\n}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\n\r\nimport { AddonMessagesDiscussionPage } from './discussion.page';\r\nimport { AddonMessagesComponentsModule } from '@addons/messages/components/components.module';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AddonMessagesDiscussionPage,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n        AddonMessagesComponentsModule,\r\n    ],\r\n    declarations: [\r\n        AddonMessagesDiscussionPage,\r\n    ],\r\n    exports: [RouterModule],\r\n})\r\nexport class AddonMessagesDiscussionPageModule {}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IonContent } from '@ionic/angular';\nimport { AlertOptions } from '@ionic/core';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport {\n    AddonMessagesProvider,\n    AddonMessagesConversationFormatted,\n    AddonMessagesConversationMember,\n    AddonMessagesGetMessagesMessage,\n    AddonMessages,\n    AddonMessagesConversationMessageFormatted,\n    AddonMessagesSendMessageResults,\n} from '../../services/messages';\nimport { AddonMessagesOffline, AddonMessagesOfflineMessagesDBRecordFormatted } from '../../services/messages-offline';\nimport { AddonMessagesSync, AddonMessagesSyncProvider } from '../../services/messages-sync';\nimport { CoreUser } from '@features/user/services/user';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreTextUtils } from '@services/utils/text';\nimport { CoreLogger } from '@singletons/logger';\nimport { CoreApp } from '@services/app';\nimport { CoreInfiniteLoadingComponent } from '@components/infinite-loading/infinite-loading';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport moment from 'moment';\nimport { CoreAnimations } from '@components/animations';\nimport { CoreError } from '@classes/errors/error';\nimport { Translate } from '@singletons';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreIonLoadingElement } from '@classes/ion-loading';\nimport { ActivatedRoute } from '@angular/router';\nimport { AddonMessagesConversationInfoComponent } from '../../components/conversation-info/conversation-info';\nimport { CoreConstants } from '@/core/constants';\nimport { CoreDom } from '@singletons/dom';\n\n/**\n * Page that displays a message discussion page.\n */\n@Component({\n    selector: 'page-addon-messages-discussion',\n    templateUrl: 'discussion.html',\n    animations: [CoreAnimations.SLIDE_IN_OUT],\n    styleUrls: ['discussion.scss'],\n})\nexport class AddonMessagesDiscussionPage implements OnInit, OnDestroy, AfterViewInit {\n\n    @ViewChild(IonContent) content?: IonContent;\n    @ViewChild(CoreInfiniteLoadingComponent) infinite?: CoreInfiniteLoadingComponent;\n\n    siteId: string;\n    protected fetching = false;\n    protected polling?: number;\n    protected logger: CoreLogger;\n\n    protected messagesBeingSent = 0;\n    protected pagesLoaded = 1;\n    protected lastMessage = { text: '', timecreated: 0 };\n    protected keepMessageMap: {[hash: string]: boolean} = {};\n    protected syncObserver: CoreEventObserver;\n    protected oldContentHeight = 0;\n    protected scrollBottom = true;\n    protected viewDestroyed = false;\n    protected memberInfoObserver: CoreEventObserver;\n    protected showLoadingModal = false; // Whether to show a loading modal while fetching data.\n    protected hostElement: HTMLElement;\n\n    conversationId?: number; // Conversation ID. Undefined if it's a new individual conversation.\n    conversation?: AddonMessagesConversationFormatted; // The conversation object (if it exists).\n    userId?: number; // User ID you're talking to (only if group messaging not enabled or it's a new individual conversation).\n    currentUserId: number;\n    title?: string;\n    showInfo = false;\n    conversationImage?: string;\n    loaded = false;\n    showKeyboard = false;\n    canLoadMore = false;\n    loadMoreError = false;\n    messages: AddonMessagesConversationMessageFormatted[] = [];\n    showDelete = false;\n    canDelete = false;\n    groupMessagingEnabled: boolean;\n    isGroup = false;\n    members: {[id: number]: AddonMessagesConversationMember} = {}; // Members that wrote a message, indexed by ID.\n    favouriteIcon = 'fa-star';\n    deleteIcon = 'fas-trash';\n    blockIcon = 'fas-user-lock';\n    addRemoveIcon = 'fas-user-plus';\n    muteIcon = 'fas-bell-slash';\n    favouriteIconSlash = false;\n    muteEnabled = false;\n    otherMember?: AddonMessagesConversationMember; // Other member information (individual conversations only).\n    footerType: 'message' | 'blocked' | 'requiresContact' | 'requestSent' | 'requestReceived' | 'unable' = 'unable';\n    requestContactSent = false;\n    requestContactReceived = false;\n    isSelf = false;\n    newMessages = 0;\n    scrollElement?: HTMLElement;\n    unreadMessageFrom = 0;\n    initialized = false;\n\n    constructor(\n        protected route: ActivatedRoute,\n        protected elementRef: ElementRef<HTMLElement>,\n    ) {\n        this.hostElement = elementRef.nativeElement;\n        this.siteId = CoreSites.getCurrentSiteId();\n        this.currentUserId = CoreSites.getCurrentSiteUserId();\n        this.groupMessagingEnabled = AddonMessages.isGroupMessagingEnabled();\n        this.muteEnabled = AddonMessages.isMuteConversationEnabled();\n\n        this.logger = CoreLogger.getInstance('AddonMessagesDiscussionPage');\n\n        // Refresh data if this discussion is synchronized automatically.\n        this.syncObserver = CoreEvents.on(AddonMessagesSyncProvider.AUTO_SYNCED, (data) => {\n            if ((data.userId && data.userId == this.userId) ||\n                    (data.conversationId && data.conversationId == this.conversationId)) {\n                // Fetch messages.\n                this.fetchMessages();\n\n                // Show first warning if any.\n                if (data.warnings && data.warnings[0]) {\n                    CoreDomUtils.showErrorModal(data.warnings[0]);\n                }\n            }\n        }, this.siteId);\n\n        // Refresh data if info of a mamber of the conversation have changed.\n        this.memberInfoObserver = CoreEvents.on(\n            AddonMessagesProvider.MEMBER_INFO_CHANGED_EVENT,\n            (data) => {\n                if (data.userId && (this.members[data.userId] || this.otherMember && data.userId == this.otherMember.id)) {\n                    this.fetchData();\n                }\n            },\n            this.siteId,\n        );\n    }\n\n    /**\n     * Runs when the page has loaded. This event only happens once per page being created.\n     * If a page leaves but is cached, then this event will not fire again on a subsequent viewing.\n     * Setup code for the page.\n     */\n    async ngOnInit(): Promise<void> {\n\n        this.route.queryParams.subscribe(async (params) => {\n            const oldConversationId = this.conversationId;\n            const oldUserId = this.userId;\n            let forceScrollToBottom = false;\n            this.conversationId = CoreNavigator.getRouteNumberParam('conversationId', { params }) || undefined;\n            this.userId = CoreNavigator.getRouteNumberParam('userId', { params }) || undefined;\n            this.showInfo = !params.hideInfo;\n\n            if (oldConversationId != this.conversationId || oldUserId != this.userId) {\n                // Showing reload again can break animations.\n                this.loaded = false;\n                this.initialized = false;\n                forceScrollToBottom = true;\n            }\n\n            this.showKeyboard = CoreNavigator.getRouteBooleanParam('showKeyboard', { params }) || false;\n\n            await this.fetchData();\n\n            this.scrollToBottom(forceScrollToBottom);\n        });\n    }\n\n    /**\n     * View has been initialized.\n     */\n    async ngAfterViewInit(): Promise<void> {\n        this.scrollElement = await this.content?.getScrollElement();\n    }\n\n    /**\n     * Adds a new message to the message list.\n     *\n     * @param message Message to be added.\n     * @param keep If set the keep flag or not.\n     * @return If message is not mine and was recently added.\n     */\n    protected addMessage(\n        message: AddonMessagesConversationMessageFormatted,\n        keep: boolean = true,\n    ): boolean {\n\n        /* Create a hash to identify the message. The text of online messages isn't reliable because it can have random data\n           like VideoJS ID. Try to use id and fallback to text for offline messages. */\n        const id = 'id' in message ? message.id : '';\n        message.hash = Md5.hashAsciiStr(String(id || message.text || '')) + '#' + message.timecreated + '#' +\n                message.useridfrom;\n\n        let added = false;\n        if (this.keepMessageMap[message.hash] === undefined) {\n            // Message not added to the list. Add it now.\n            this.messages.push(message);\n            added = message.useridfrom != this.currentUserId;\n        }\n        // Message needs to be kept in the list.\n        this.keepMessageMap[message.hash] = keep;\n\n        return added;\n    }\n\n    /**\n     * Remove a message if it shouldn't be in the list anymore.\n     *\n     * @param hash Hash of the message to be removed.\n     */\n    protected removeMessage(hash: string): void {\n        if (this.keepMessageMap[hash]) {\n            // Selected to keep it, clear the flag.\n            this.keepMessageMap[hash] = false;\n\n            return;\n        }\n\n        delete this.keepMessageMap[hash];\n\n        const position = this.messages.findIndex((message) => message.hash == hash);\n        if (position >= 0) {\n            this.messages.splice(position, 1);\n        }\n    }\n\n    /**\n     * Convenience function to fetch the conversation data.\n     *\n     * @return Resolved when done.\n     */\n    protected async fetchData(): Promise<void> {\n        let loader: CoreIonLoadingElement | undefined;\n        if (this.showLoadingModal) {\n            loader = await CoreDomUtils.showModalLoading();\n        }\n\n        if (!this.groupMessagingEnabled && this.userId) {\n            // Get the user profile to retrieve the user fullname and image.\n            CoreUser.getProfile(this.userId, undefined, true).then((user) => {\n                if (!this.title) {\n                    this.title = user.fullname;\n                }\n                this.conversationImage = user.profileimageurl;\n                this.members[user.id] = <AddonMessagesConversationMember>user;\n\n                return;\n            }).catch(() => {\n                // Ignore errors.\n            });\n        }\n\n        // Synchronize messages if needed.\n        try {\n            const syncResult = await AddonMessagesSync.syncDiscussion(this.conversationId, this.userId);\n            if (syncResult.warnings && syncResult.warnings[0]) {\n                CoreDomUtils.showErrorModal(syncResult.warnings[0]);\n            }\n        } catch {\n            // Ignore errors;\n        }\n\n        try {\n            const promises: Promise<void>[] = [];\n            if (this.groupMessagingEnabled) {\n                // Get the conversation ID if it exists and we don't have it yet.\n                const exists = await this.getConversation(this.conversationId, this.userId);\n\n                if (exists) {\n                    // Fetch the messages for the first time.\n                    promises.push(this.fetchMessages());\n                }\n\n                if (this.userId) {\n                    // Get the member info. Invalidate first to make sure we get the latest status.\n                    promises.push(AddonMessages.invalidateMemberInfo(this.userId).then(async () => {\n                        this.otherMember = await AddonMessages.getMemberInfo(this.userId!);\n\n                        if (!exists && this.otherMember) {\n                            this.conversationImage = this.otherMember.profileimageurl;\n                            this.title = this.otherMember.fullname;\n                        }\n                        this.blockIcon = this.otherMember.isblocked ? 'fas-user-check' : 'fas-user-lock';\n\n                        return;\n                    }));\n                } else {\n                    this.otherMember = undefined;\n                }\n\n            } else {\n                if (this.userId) {\n                    // Fake the user member info.\n                    promises.push(CoreUser.getProfile(this.userId!).then(async (user) => {\n                        this.otherMember = {\n                            id: user.id,\n                            fullname: user.fullname,\n                            profileurl: '',\n                            profileimageurl: user.profileimageurl || '',\n                            profileimageurlsmall: user.profileimageurlsmall || '',\n                            isonline: false,\n                            showonlinestatus: false,\n                            isblocked: false,\n                            iscontact: false,\n                            isdeleted: false,\n                            canmessageevenifblocked: true,\n                            canmessage: true,\n                            requirescontact: false,\n                        };\n                        this.otherMember.isblocked = await AddonMessages.isBlocked(this.userId!);\n                        this.otherMember.iscontact = await AddonMessages.isContact(this.userId!);\n                        this.blockIcon = this.otherMember.isblocked ? 'fas-user-check' : 'fas-user-lock';\n\n                        return;\n                    }));\n\n                }\n\n                // Fetch the messages for the first time.\n                promises.push(this.fetchMessages().then(() => {\n                    if (!this.title && this.messages.length) {\n                        // Didn't receive the fullname via argument. Try to get it from messages.\n                        // It's possible that name cannot be resolved when no messages were yet exchanged.\n                        const firstMessage = this.messages[0];\n                        if ('usertofullname' in firstMessage) {\n                            if (firstMessage.useridto != this.currentUserId) {\n                                this.title = firstMessage.usertofullname || '';\n                            } else {\n                                this.title = firstMessage.userfromfullname || '';\n                            }\n                        }\n                    }\n\n                    return;\n                }));\n            }\n\n            await Promise.all(promises);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.messages.errorwhileretrievingmessages', true);\n        } finally {\n            this.checkCanDelete();\n            this.loaded = true;\n            this.setPolling(); // Make sure we're polling messages.\n            this.setContactRequestInfo();\n            this.setFooterType();\n            loader && loader.dismiss();\n        }\n    }\n\n    /**\n     * Runs when the page has fully entered and is now the active page.\n     * This event will fire, whether it was the first load or a cached page.\n     */\n    ionViewDidEnter(): void {\n        this.setPolling();\n    }\n\n    /**\n     * Runs when the page is about to leave and no longer be the active page.\n     */\n    ionViewWillLeave(): void {\n        this.unsetPolling();\n    }\n\n    /**\n     * Convenience function to fetch messages.\n     *\n     * @param messagesAreNew If messages loaded are new messages.\n     * @return Resolved when done.\n     */\n    protected async fetchMessages(messagesAreNew: boolean = true): Promise<void> {\n        this.loadMoreError = false;\n\n        if (this.messagesBeingSent > 0) {\n            // We do not poll while a message is being sent or we could confuse the user.\n            // Otherwise, his message would disappear from the list, and he'd have to wait for the interval to check for messages.\n            return;\n        } else if (this.fetching) {\n            // Already fetching.\n            return;\n        } else if (this.groupMessagingEnabled && !this.conversationId) {\n            // Don't have enough data to fetch messages.\n            throw new CoreError('No enough data provided to fetch messages');\n        }\n\n        if (this.conversationId) {\n            this.logger.debug(`Polling new messages for conversation '${this.conversationId}'`);\n        } else if (this.userId) {\n            this.logger.debug(`Polling new messages for discussion with user '${this.userId}'`);\n        } else {\n            // Should not happen.\n            throw new CoreError('No enough data provided to fetch messages');\n        }\n\n        this.fetching = true;\n\n        try {\n            // Wait for synchronization process to finish.\n            await AddonMessagesSync.waitForSyncConversation(this.conversationId, this.userId);\n\n            let messages: AddonMessagesConversationMessageFormatted[] = [];\n            // Fetch messages. Invalidate the cache before fetching.\n            if (this.groupMessagingEnabled) {\n                await AddonMessages.invalidateConversationMessages(this.conversationId!);\n                messages = await this.getConversationMessages(this.pagesLoaded);\n            } else {\n                await AddonMessages.invalidateDiscussionCache(this.userId!);\n                messages = await this.getDiscussionMessages(this.pagesLoaded);\n            }\n\n            this.loadMessages(messages, messagesAreNew);\n\n        } finally {\n            this.fetching = false;\n        }\n    }\n\n    /**\n     * Format and load a list of messages into the view.\n     *\n     * @param messagesAreNew If messages loaded are new messages.\n     * @param messages Messages to load.\n     */\n    protected loadMessages(\n        messages: AddonMessagesConversationMessageFormatted[],\n        messagesAreNew: boolean = true,\n    ): void {\n\n        if (this.viewDestroyed) {\n            return;\n        }\n\n        // Check if we are at the bottom to scroll it after render.\n        // Use a 5px error margin because in iOS there is 1px difference for some reason.\n        this.scrollBottom = CoreDom.scrollIsBottom(this.scrollElement, 5);\n\n        if (this.messagesBeingSent > 0) {\n            // Ignore polling due to a race condition.\n            return;\n        }\n\n        // Add new messages to the list and mark the messages that should still be displayed.\n        const newMessages = messages.reduce((val, message) => val + (this.addMessage(message) ? 1 : 0), 0);\n\n        // Set the new badges message if we're loading new messages.\n        if (messagesAreNew) {\n            this.setNewMessagesBadge(this.newMessages + newMessages);\n        }\n\n        // Remove messages that shouldn't be in the list anymore.\n        for (const hash in this.keepMessageMap) {\n            this.removeMessage(hash);\n        }\n\n        // Sort the messages.\n        AddonMessages.sortMessages(this.messages);\n\n        // Calculate which messages need to display the date or user data.\n        this.messages.forEach((message, index) => {\n            message.showDate = this.showDate(message, this.messages[index - 1]);\n            message.showUserData = this.showUserData(message, this.messages[index - 1]);\n            message.showTail = this.showTail(message, this.messages[index + 1]);\n        });\n\n        // If we received a new message while using group messaging, force mark messages as read.\n        const last = this.messages[this.messages.length - 1];\n        const forceMark = this.groupMessagingEnabled && last && last.useridfrom != this.currentUserId && this.lastMessage.text != ''\n                    && (last.text !== this.lastMessage.text || last.timecreated !== this.lastMessage.timecreated);\n\n        // Notify that there can be a new message.\n        this.notifyNewMessage();\n\n        // Mark retrieved messages as read if they are not.\n        this.markMessagesAsRead(forceMark);\n    }\n\n    /**\n     * Set the new message badge number and set scroll listener if needed.\n     *\n     * @param addMessages Number of messages still to be read.\n     */\n    protected setNewMessagesBadge(addMessages: number): void {\n        if (this.newMessages == 0 && addMessages > 0) {\n            this.scrollFunction();\n        }\n\n        this.newMessages = addMessages;\n    }\n\n    /**\n     * The scroll was moved. Update new messages count.\n     */\n    scrollFunction(): void {\n        if (this.newMessages == 0) {\n            return;\n        }\n\n        if (CoreDom.scrollIsBottom(this.scrollElement, 40)) {\n            // At the bottom, reset.\n            this.setNewMessagesBadge(0);\n\n            return;\n        }\n\n        const scrollElRect = this.scrollElement?.getBoundingClientRect();\n        const scrollBottomPos = (scrollElRect && scrollElRect.bottom) || 0;\n\n        if (scrollBottomPos == 0) {\n            return;\n        }\n\n        const messages = Array.from(this.hostElement.querySelectorAll('.addon-message-not-mine'))\n            .slice(-this.newMessages)\n            .reverse();\n\n        const newMessagesUnread = messages.findIndex((message) => {\n            const elementRect = message.getBoundingClientRect();\n            if (!elementRect) {\n                return false;\n            }\n\n            return elementRect.bottom <= scrollBottomPos;\n        });\n\n        if (newMessagesUnread > 0 && newMessagesUnread < this.newMessages) {\n            this.setNewMessagesBadge(newMessagesUnread);\n        }\n    }\n\n    /**\n     * Get the conversation.\n     *\n     * @param conversationId Conversation ID.\n     * @param userId User ID.\n     * @return Promise resolved with a boolean: whether the conversation exists or not.\n     */\n    protected async getConversation(conversationId?: number, userId?: number): Promise<boolean> {\n        let fallbackConversation: AddonMessagesConversationFormatted | undefined;\n\n        // Try to get the conversationId if we don't have it.\n        if (!conversationId && userId) {\n            try {\n                if (userId == this.currentUserId && AddonMessages.isSelfConversationEnabled()) {\n                    fallbackConversation = await AddonMessages.getSelfConversation();\n                } else {\n                    fallbackConversation = await AddonMessages.getConversationBetweenUsers(userId, undefined, true);\n                }\n                conversationId = fallbackConversation.id;\n            } catch (error) {\n                // Probably conversation does not exist or user is offline. Try to load offline messages.\n                this.isSelf = userId == this.currentUserId;\n\n                const messages = await AddonMessagesOffline.getMessages(userId);\n\n                if (messages && messages.length) {\n                // We have offline messages, this probably means that the conversation didn't exist. Don't display error.\n                    messages.forEach((message) => {\n                        message.pending = true;\n                        message.text = message.smallmessage;\n                    });\n\n                    this.loadMessages(messages);\n                } else if (error.errorcode != 'errorconversationdoesnotexist') {\n                    // Display the error.\n                    throw error;\n                }\n\n                return false;\n            }\n        }\n\n        // Retrieve the conversation. Invalidate data first to get the right unreadcount.\n        await AddonMessages.invalidateConversation(conversationId!);\n\n        try {\n            this.conversation = await AddonMessages.getConversation(conversationId!, undefined, true);\n        } catch (error) {\n            // Get conversation failed, use the fallback one if we have it.\n            if (fallbackConversation) {\n                this.conversation = fallbackConversation;\n            } else {\n                throw error;\n            }\n        }\n\n        if (this.conversation) {\n            this.conversationId = this.conversation.id;\n            this.title = this.conversation.name;\n            this.conversationImage = this.conversation.imageurl;\n            this.isGroup = this.conversation.type == AddonMessagesProvider.MESSAGE_CONVERSATION_TYPE_GROUP;\n            this.favouriteIcon = 'fas-star';\n            this.favouriteIconSlash = this.conversation.isfavourite;\n            this.muteIcon = this.conversation.ismuted ? 'fas-bell' : 'fas-bell-slash';\n            if (!this.isGroup) {\n                this.userId = this.conversation.userid;\n            }\n            this.isSelf = this.conversation.type == AddonMessagesProvider.MESSAGE_CONVERSATION_TYPE_SELF;\n\n            return true;\n        } else {\n            return false;\n        }\n\n    }\n\n    /**\n     * Get the messages of the conversation. Used if group messaging is supported.\n     *\n     * @param pagesToLoad Number of \"pages\" to load.\n     * @param offset Offset for message list.\n     * @return Promise resolved with the list of messages.\n     */\n    protected async getConversationMessages(\n        pagesToLoad: number,\n        offset: number = 0,\n    ): Promise<AddonMessagesConversationMessageFormatted[]> {\n\n        if (!this.conversationId) {\n            return [];\n        }\n\n        const excludePending = offset > 0;\n\n        const result = await AddonMessages.getConversationMessages(this.conversationId, {\n            excludePending: excludePending,\n            limitFrom: offset,\n        });\n\n        pagesToLoad--;\n\n        // Treat members. Don't use CoreUtilsProvider.arrayToObject because we don't want to override the existing object.\n        if (result.members) {\n            result.members.forEach((member) => {\n                this.members[member.id] = member;\n            });\n        }\n\n        const messages: AddonMessagesConversationMessageFormatted[] = result.messages;\n\n        if (pagesToLoad > 0 && result.canLoadMore) {\n            offset += AddonMessagesProvider.LIMIT_MESSAGES;\n\n            // Get more messages.\n            const nextMessages = await this.getConversationMessages(pagesToLoad, offset);\n\n            return messages.concat(nextMessages);\n        }\n\n        // No more messages to load, return them.\n        this.canLoadMore = !!result.canLoadMore;\n\n        return messages;\n\n    }\n\n    /**\n     * Get a discussion. Can load several \"pages\".\n     *\n     * @param pagesToLoad Number of pages to load.\n     * @param lfReceivedUnread Number of unread received messages already fetched, so fetch will be done from this.\n     * @param lfReceivedRead Number of read received messages already fetched, so fetch will be done from this.\n     * @param lfSentUnread Number of unread sent messages already fetched, so fetch will be done from this.\n     * @param lfSentRead Number of read sent messages already fetched, so fetch will be done from this.\n     * @return Resolved when done.\n     */\n    protected async getDiscussionMessages(\n        pagesToLoad: number,\n        lfReceivedUnread: number = 0,\n        lfReceivedRead: number = 0,\n        lfSentUnread: number = 0,\n        lfSentRead: number = 0,\n    ): Promise<(AddonMessagesGetMessagesMessage | AddonMessagesOfflineMessagesDBRecordFormatted)[]> {\n\n        // Only get offline messages if we're loading the first \"page\".\n        const excludePending = lfReceivedUnread > 0 || lfReceivedRead > 0 || lfSentUnread > 0 || lfSentRead > 0;\n\n        // Get next messages.\n        const result = await AddonMessages.getDiscussion(\n            this.userId!,\n            excludePending,\n            lfReceivedUnread,\n            lfReceivedRead,\n            lfSentUnread,\n            lfSentRead,\n        );\n\n        pagesToLoad--;\n        if (pagesToLoad > 0 && result.canLoadMore) {\n            // More pages to load. Calculate new limit froms.\n            result.messages.forEach((message) => {\n                if (!message.pending && 'read' in message) {\n                    if (message.useridfrom == this.userId) {\n                        if (message.read) {\n                            lfReceivedRead++;\n                        } else {\n                            lfReceivedUnread++;\n                        }\n                    } else {\n                        if (message.read) {\n                            lfSentRead++;\n                        } else {\n                            lfSentUnread++;\n                        }\n                    }\n                }\n            });\n\n            // Get next messages.\n            const nextMessages =\n                await this.getDiscussionMessages(pagesToLoad, lfReceivedUnread, lfReceivedRead, lfSentUnread, lfSentRead);\n\n            return result.messages.concat(nextMessages);\n        } else {\n            // No more messages to load, return them.\n            this.canLoadMore = result.canLoadMore;\n\n            return result.messages;\n        }\n    }\n\n    /**\n     * Mark messages as read.\n     */\n    protected async markMessagesAsRead(forceMark: boolean): Promise<void> {\n        let readChanged = false;\n        let messageUnreadFound = false;\n\n        // Mark all messages at a time if there is any unread message.\n        if (forceMark) {\n            messageUnreadFound = true;\n        } else if (this.groupMessagingEnabled) {\n            messageUnreadFound = !!((this.conversation?.unreadcount && this.conversation?.unreadcount > 0) &&\n                (this.conversationId && this.conversationId > 0));\n        } else {\n            // If an unread message is found, mark all messages as read.\n            messageUnreadFound = this.messages.some((message) =>\n                message.useridfrom != this.currentUserId && ('read' in message && !message.read));\n        }\n\n        if (messageUnreadFound) {\n            this.setUnreadLabelPosition();\n\n            if (this.groupMessagingEnabled) {\n                await AddonMessages.markAllConversationMessagesRead(this.conversationId!);\n            } else {\n                await AddonMessages.markAllMessagesRead(this.userId);\n\n                // Mark all messages as read.\n                this.messages.forEach((message) => {\n                    if ('read' in message) {\n                        message.read = true;\n                    }\n                });\n            }\n\n            readChanged = true;\n        }\n\n        if (readChanged) {\n            CoreEvents.trigger(AddonMessagesProvider.READ_CHANGED_EVENT, {\n                conversationId: this.conversationId,\n                userId: this.userId,\n            }, this.siteId);\n        }\n    }\n\n    /**\n     * Notify the last message found so discussions list controller can tell if last message should be updated.\n     */\n    protected notifyNewMessage(): void {\n        const last = this.messages[this.messages.length - 1];\n\n        let trigger = false;\n\n        if (!last) {\n            this.lastMessage = { text: '', timecreated: 0 };\n            trigger = true;\n        } else if (last.text !== this.lastMessage.text || last.timecreated !== this.lastMessage.timecreated) {\n            this.lastMessage = { text: last.text || '', timecreated: last.timecreated };\n            trigger = true;\n        }\n\n        if (trigger) {\n            // Update discussions last message.\n            CoreEvents.trigger(AddonMessagesProvider.NEW_MESSAGE_EVENT, {\n                conversationId: this.conversationId,\n                userId: this.userId,\n                message: this.lastMessage.text,\n                timecreated: this.lastMessage.timecreated,\n                isfavourite: !!this.conversation?.isfavourite,\n                type: this.conversation?.type,\n            }, this.siteId);\n\n            // Update navBar links and buttons.\n            const newCanDelete = (last && 'id' in last && last.id && this.messages.length == 1) || this.messages.length > 1;\n            if (this.canDelete != newCanDelete) {\n                this.checkCanDelete();\n            }\n        }\n    }\n\n    /**\n     * Set the place where the unread label position has to be.\n     */\n    protected setUnreadLabelPosition(): void {\n        if (this.unreadMessageFrom != 0) {\n            return;\n        }\n\n        if (this.groupMessagingEnabled) {\n            // Use the unreadcount from the conversation to calculate where should the label be placed.\n            if (this.conversation && (this.conversation?.unreadcount && this.conversation?.unreadcount > 0) && this.messages) {\n                // Iterate over messages to find the right message using the unreadcount. Skip offline messages and own messages.\n                let found = 0;\n\n                for (let i = this.messages.length - 1; i >= 0; i--) {\n                    const message = this.messages[i];\n                    if (!message.pending && message.useridfrom != this.currentUserId && 'id' in message) {\n                        found++;\n                        if (found == this.conversation.unreadcount) {\n                            this.unreadMessageFrom = Number(message.id);\n                            break;\n                        }\n                    }\n                }\n            }\n        } else {\n            let previousMessageRead = false;\n\n            for (const x in this.messages) {\n                const message = this.messages[x];\n                if (message.useridfrom != this.currentUserId && 'read' in message) {\n                    const unreadFrom = !message.read && previousMessageRead;\n\n                    if (unreadFrom) {\n                        // Save where the label is placed.\n                        this.unreadMessageFrom = Number(message.id);\n                        break;\n                    }\n\n                    previousMessageRead = !!message.read;\n                }\n            }\n        }\n\n        // Do not update the message unread from label on next refresh.\n        if (this.unreadMessageFrom == 0) {\n            // Using negative to indicate the label is not placed but should not be placed.\n            this.unreadMessageFrom = -1;\n        }\n    }\n\n    /**\n     * Check if there's any message in the list that can be deleted.\n     */\n    protected checkCanDelete(): void {\n        // All messages being sent should be at the end of the list.\n        const first = this.messages[0];\n        this.canDelete = first && !first.sending;\n    }\n\n    /**\n     * Hide unread label when sending messages.\n     */\n    protected hideUnreadLabel(): void {\n        if (this.unreadMessageFrom > 0) {\n            this.unreadMessageFrom = -1;\n        }\n    }\n\n    /**\n     * Wait until fetching is false.\n     *\n     * @return Resolved when done.\n     */\n    protected waitForFetch(): Promise<void> {\n        if (!this.fetching) {\n            return Promise.resolve();\n        }\n\n        const deferred = CoreUtils.promiseDefer<void>();\n\n        setTimeout(() => this.waitForFetch().finally(() => {\n            deferred.resolve();\n        }), 400);\n\n        return deferred.promise;\n    }\n\n    /**\n     * Set a polling to get new messages every certain time.\n     */\n    protected setPolling(): void {\n        if (this.groupMessagingEnabled && !this.conversationId) {\n            // Don't have enough data to poll messages.\n            return;\n        }\n\n        if (!this.polling) {\n            // Start polling.\n            this.polling = window.setInterval(() => {\n                this.fetchMessages().catch(() => {\n                    // Ignore errors.\n                });\n            }, AddonMessagesProvider.POLL_INTERVAL);\n        }\n    }\n\n    /**\n     * Unset polling.\n     */\n    protected unsetPolling(): void {\n        if (this.polling) {\n            this.logger.debug(`Cancelling polling for conversation with user '${this.userId}'`);\n            clearInterval(this.polling);\n            this.polling = undefined;\n        }\n    }\n\n    /**\n     * Copy message to clipboard.\n     *\n     * @param message Message to be copied.\n     */\n    copyMessage(message: AddonMessagesConversationMessageFormatted): void {\n        const text = 'smallmessage' in message ? message.smallmessage || message.text || '' : message.text || '';\n        CoreUtils.copyToClipboard(CoreTextUtils.decodeHTMLEntities(text));\n    }\n\n    /**\n     * Function to delete a message.\n     *\n     * @param message Message object to delete.\n     * @param index Index where the message is to delete it from the view.\n     */\n    async deleteMessage(\n        message: AddonMessagesConversationMessageFormatted,\n        index: number,\n    ): Promise<void> {\n\n        const canDeleteAll = this.conversation && this.conversation.candeletemessagesforallusers;\n        const langKey = message.pending || canDeleteAll || this.isSelf ? 'core.areyousure' :\n            'addon.messages.deletemessageconfirmation';\n        const options: AlertOptions = {};\n\n        if (canDeleteAll && !message.pending) {\n            // Show delete for all checkbox.\n            options.inputs = [{\n                type: 'checkbox',\n                name: 'deleteforall',\n                checked: false,\n                value: true,\n                label: Translate.instant('addon.messages.deleteforeveryone'),\n            }];\n        }\n\n        try {\n            const data: boolean[] = await CoreDomUtils.showConfirm(\n                Translate.instant(langKey),\n                undefined,\n                undefined,\n                undefined,\n                options,\n            );\n\n            const modal = await CoreDomUtils.showModalLoading('core.deleting', true);\n\n            try {\n                await AddonMessages.deleteMessage(message, data && data[0]);\n                // Remove message from the list without having to wait for re-fetch.\n                this.messages.splice(index, 1);\n                this.removeMessage(message.hash!);\n                this.notifyNewMessage();\n\n                this.fetchMessages(); // Re-fetch messages to update cached data.\n            } finally {\n                modal.dismiss();\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.messages.errordeletemessage', true);\n        }\n    }\n\n    /**\n     * Function to load previous messages.\n     *\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n     * @return Resolved when done.\n     */\n    async loadPrevious(infiniteComplete?: () => void): Promise<void> {\n        if (!this.initialized) {\n            // Don't load previous if the view isn't fully initialized.\n            // Don't put the initialized condition in the \"enabled\" input because then the load more is hidden and\n            // the scroll height changes when it appears.\n            infiniteComplete && infiniteComplete();\n\n            return;\n        }\n\n        let infiniteHeight = this.infinite?.hostElement.getBoundingClientRect().height || 0;\n        const scrollHeight = (this.scrollElement?.scrollHeight || 0);\n\n        // If there is an ongoing fetch, wait for it to finish.\n        try {\n            await this.waitForFetch();\n        } finally {\n            this.pagesLoaded++;\n\n            try {\n                await this.fetchMessages(false);\n\n                // Try to keep the scroll position.\n                const scrollBottom = scrollHeight - (this.scrollElement?.scrollTop || 0);\n\n                const height = this.infinite?.hostElement.getBoundingClientRect().height || 0;\n                if (this.canLoadMore && infiniteHeight && this.infinite) {\n                    // The height of the infinite is different while spinner is shown. Add that difference.\n                    infiniteHeight = infiniteHeight - height;\n                } else if (!this.canLoadMore) {\n                    // Can't load more, take into account the full height of the infinite loading since it will disappear now.\n                    infiniteHeight = infiniteHeight || height;\n                }\n\n                this.keepScroll(scrollHeight, scrollBottom, infiniteHeight);\n            } catch (error) {\n                this.loadMoreError = true; // Set to prevent infinite calls with infinite-loading.\n                this.pagesLoaded--;\n                CoreDomUtils.showErrorModalDefault(error, 'addon.messages.errorwhileretrievingmessages', true);\n            } finally {\n                infiniteComplete && infiniteComplete();\n            }\n        }\n    }\n\n    /**\n     * Keep scroll position after loading previous messages.\n     */\n    protected keepScroll(oldScrollHeight: number, oldScrollBottom: number, infiniteHeight: number, retries = 0): void {\n        setTimeout(() => {\n            const newScrollHeight = (this.scrollElement?.scrollHeight || 0);\n\n            if (newScrollHeight == oldScrollHeight) {\n                // Height hasn't changed yet. Retry if max retries haven't been reached.\n                if (retries <= 10) {\n                    this.keepScroll(oldScrollHeight, oldScrollBottom, infiniteHeight, retries + 1);\n                }\n\n                return;\n            }\n\n            // Scroll has changed, but maybe it hasn't reached the full height yet.\n            setTimeout(() => {\n                const newScrollHeight = (this.scrollElement?.scrollHeight || 0);\n                const scrollTo = newScrollHeight - oldScrollBottom + infiniteHeight;\n\n                this.content!.scrollToPoint(0, scrollTo, 0);\n            }, 30);\n        }, 30);\n    }\n\n    /**\n     * Scroll bottom when render has finished.\n     *\n     * @param force Whether to force scroll to bottom.\n     */\n    async scrollToBottom(force = false): Promise<void> {\n        // Check if scroll is at bottom. If so, scroll bottom after rendering since there might be something new.\n        if (this.scrollBottom || force) {\n            this.scrollBottom = false;\n\n            // Reset the badge.\n            this.setNewMessagesBadge(0);\n\n            // Leave time for the view to be rendered.\n            await CoreUtils.nextTicks(5);\n\n            if (!this.viewDestroyed && this.content) {\n                this.content.scrollToBottom(0);\n            }\n\n            if (force) {\n                this.initialized = true;\n            }\n        }\n    }\n\n    /**\n     * Scroll to the first new unread message.\n     */\n    scrollToFirstUnreadMessage(): void {\n        if (this.newMessages > 0) {\n            const messages = Array.from(this.hostElement.querySelectorAll<HTMLElement>('.addon-message-not-mine'));\n\n            CoreDom.scrollToElement(messages[messages.length - this.newMessages]);\n        }\n    }\n\n    /**\n     * Sends a message to the server.\n     *\n     * @param text Message text.\n     */\n    async sendMessage(text: string): Promise<void> {\n        this.hideUnreadLabel();\n\n        this.showDelete = false;\n        this.scrollBottom = true;\n        this.setNewMessagesBadge(0);\n\n        const message: AddonMessagesConversationMessageFormatted = {\n            id: -1,\n            pending: true,\n            sending: true,\n            useridfrom: this.currentUserId,\n            smallmessage: text,\n            text: text,\n            timecreated: new Date().getTime(),\n        };\n        message.showDate = this.showDate(message, this.messages[this.messages.length - 1]);\n        this.addMessage(message, false);\n\n        this.messagesBeingSent++;\n\n        // If there is an ongoing fetch, wait for it to finish.\n        // Otherwise, if a message is sent while fetching it could disappear until the next fetch.\n        try {\n            await this.waitForFetch();\n        } finally {\n\n            try {\n                let data: AddonMessagesSendMessageResults;\n                if (this.conversationId) {\n                    data = await AddonMessages.sendMessageToConversation(this.conversation!, text);\n                } else {\n                    data = await AddonMessages.sendMessage(this.userId!, text);\n                }\n\n                this.messagesBeingSent--;\n                let failure = false;\n                if (data.sent) {\n                    try {\n\n                        if (!this.conversationId && data.message && 'conversationid' in data.message) {\n                            // Message sent to a new conversation, try to load the conversation.\n                            await this.getConversation(data.message.conversationid, this.userId);\n                            // Now fetch messages.\n                            try {\n                                await this.fetchMessages();\n                            } finally {\n                                // Start polling messages now that the conversation exists.\n                                this.setPolling();\n                            }\n                        } else {\n                            // Message was sent, fetch messages right now.\n                            await this.fetchMessages();\n                        }\n                    } catch {\n                        failure = true;\n                    }\n                }\n\n                if (failure || !data.sent) {\n                    // Fetch failed or is offline message, mark the message as sent.\n                    // If fetch is successful there's no need to mark it because the fetch will already show the message received.\n                    message.sending = false;\n                    if (data.sent) {\n                        // Message sent to server, not pending anymore.\n                        message.pending = false;\n                    } else if (data.message) {\n                        message.timecreated = data.message.timecreated || 0;\n                    }\n\n                    this.notifyNewMessage();\n                }\n\n            } catch (error) {\n                this.messagesBeingSent--;\n\n                // Only close the keyboard if an error happens.\n                // We want the user to be able to send multiple messages without the keyboard being closed.\n                CoreApp.closeKeyboard();\n\n                CoreDomUtils.showErrorModalDefault(error, 'addon.messages.messagenotsent', true);\n                this.removeMessage(message.hash!);\n            }\n        }\n    }\n\n    /**\n     * Check date should be shown on message list for the current message.\n     * If date has changed from previous to current message it should be shown.\n     *\n     * @param message Current message where to show the date.\n     * @param prevMessage Previous message where to compare the date with.\n     * @return If date has changed and should be shown.\n     */\n    showDate(\n        message: AddonMessagesConversationMessageFormatted,\n        prevMessage?: AddonMessagesConversationMessageFormatted,\n    ): boolean {\n\n        if (!prevMessage) {\n            // First message, show it.\n            return true;\n        }\n\n        // Check if day has changed.\n        return !moment(message.timecreated).isSame(prevMessage.timecreated, 'day');\n    }\n\n    /**\n     * Check if the user info should be displayed for the current message.\n     * User data is only displayed for group conversations if the previous message was from another user.\n     *\n     * @param message Current message where to show the user info.\n     * @param prevMessage Previous message.\n     * @return Whether user data should be shown.\n     */\n    showUserData(\n        message: AddonMessagesConversationMessageFormatted,\n        prevMessage?: AddonMessagesConversationMessageFormatted,\n    ): boolean {\n\n        return this.isGroup && message.useridfrom != this.currentUserId && this.members[(message.useridfrom || 0)] &&\n            (!prevMessage || prevMessage.useridfrom != message.useridfrom || !!message.showDate);\n    }\n\n    /**\n     * Check if a css tail should be shown.\n     *\n     * @param message Current message where to show the user info.\n     * @param nextMessage Next message.\n     * @return Whether user data should be shown.\n     */\n    showTail(\n        message: AddonMessagesConversationMessageFormatted,\n        nextMessage?: AddonMessagesConversationMessageFormatted,\n    ): boolean {\n        return !nextMessage || nextMessage.useridfrom != message.useridfrom || !!nextMessage.showDate;\n    }\n\n    /**\n     * View info. If it's an individual conversation, go to the user profile.\n     * If it's a group conversation, view info about the group.\n     */\n    async viewInfo(): Promise<void> {\n        if (this.isGroup) {\n            // Display the group information.\n            const userId = await CoreDomUtils.openSideModal<number>({\n                component: AddonMessagesConversationInfoComponent,\n                componentProps: {\n                    conversationId: this.conversationId,\n                },\n            });\n\n            if (userId !== undefined) {\n                const splitViewLoaded = CoreNavigator.isCurrentPathInTablet('**/messages/**/discussion');\n\n                // Open user conversation.\n                if (splitViewLoaded) {\n                    // Notify the left pane to load it, this way the right conversation will be highlighted.\n                    CoreEvents.trigger(\n                        AddonMessagesProvider.OPEN_CONVERSATION_EVENT,\n                        { userId },\n                        this.siteId,\n                    );\n                } else {\n                    // Open the discussion in a new view.\n                    CoreNavigator.navigateToSitePath('/messages/discussion', { params: { userId } });\n                }\n            }\n        } else {\n            // Open the user profile.\n            CoreNavigator.navigateToSitePath('/user/profile', { params: { userId: this.userId } });\n        }\n    }\n\n    /**\n     * Change the favourite state of the current conversation.\n     *\n     * @param done Function to call when done.\n     */\n    async changeFavourite(done?: () => void): Promise<void> {\n        if (!this.conversation) {\n            return;\n        }\n\n        this.favouriteIcon = CoreConstants.ICON_LOADING;\n\n        try {\n            await AddonMessages.setFavouriteConversation(this.conversation.id, !this.conversation.isfavourite);\n\n            this.conversation.isfavourite = !this.conversation.isfavourite;\n\n            // Get the conversation data so it's cached. Don't block the user for this.\n            AddonMessages.getConversation(this.conversation.id, undefined, true);\n\n            CoreEvents.trigger(AddonMessagesProvider.UPDATE_CONVERSATION_LIST_EVENT, {\n                conversationId: this.conversation.id,\n                action: 'favourite',\n                value: this.conversation.isfavourite,\n            }, this.siteId);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error changing favourite state.');\n        } finally {\n            this.favouriteIcon = 'fas-star';\n            this.favouriteIconSlash = this.conversation.isfavourite;\n            done && done();\n        }\n    }\n\n    /**\n     * Change the mute state of the current conversation.\n     *\n     * @param done Function to call when done.\n     */\n    async changeMute(done?: () => void): Promise<void> {\n        if (!this.conversation) {\n            return;\n        }\n\n        this.muteIcon = CoreConstants.ICON_LOADING;\n\n        try {\n            await AddonMessages.muteConversation(this.conversation.id, !this.conversation.ismuted);\n            this.conversation.ismuted = !this.conversation.ismuted;\n\n            // Get the conversation data so it's cached. Don't block the user for this.\n            AddonMessages.getConversation(this.conversation.id, undefined, true);\n\n            CoreEvents.trigger(AddonMessagesProvider.UPDATE_CONVERSATION_LIST_EVENT, {\n                conversationId: this.conversation.id,\n                action: 'mute',\n                value: this.conversation.ismuted,\n            }, this.siteId);\n\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error changing muted state.');\n        } finally {\n            this.muteIcon = this.conversation.ismuted ? 'fas-bell' : 'fas-bell-slash';\n            done && done();\n        }\n    }\n\n    /**\n     * Calculate whether there are pending contact requests.\n     */\n    protected setContactRequestInfo(): void {\n        this.requestContactSent = false;\n        this.requestContactReceived = false;\n        if (this.otherMember && !this.otherMember.iscontact) {\n            this.requestContactSent = !!this.otherMember.contactrequests?.some((request) =>\n                request.userid == this.currentUserId && request.requesteduserid == this.otherMember!.id);\n            this.requestContactReceived = !!this.otherMember.contactrequests?.some((request) =>\n                request.userid == this.otherMember!.id && request.requesteduserid == this.currentUserId);\n        }\n    }\n\n    /**\n     * Calculate what to display in the footer.\n     */\n    protected setFooterType(): void {\n        if (!this.otherMember) {\n            // Group conversation or group messaging not available.\n            this.footerType = 'message';\n        } else if (this.otherMember.isblocked) {\n            this.footerType = 'blocked';\n        } else if (this.requestContactReceived) {\n            this.footerType = 'requestReceived';\n        } else if (this.otherMember.canmessage) {\n            this.footerType = 'message';\n        } else if (this.requestContactSent) {\n            this.footerType = 'requestSent';\n        } else if (this.otherMember.requirescontact) {\n            this.footerType = 'requiresContact';\n        } else {\n            this.footerType = 'unable';\n        }\n    }\n\n    /**\n     * Displays a confirmation modal to block the user of the individual conversation.\n     *\n     * @return Promise resolved when user is blocked or dialog is cancelled.\n     */\n    async blockUser(): Promise<void> {\n        if (!this.otherMember) {\n            // Should never happen.\n            throw new CoreError('No member selected to be blocked.');\n        }\n\n        if (this.otherMember.canmessageevenifblocked) {\n            CoreDomUtils.showErrorModal(Translate.instant('addon.messages.cantblockuser', { $a: this.otherMember.fullname }));\n\n            return;\n        }\n\n        const template = Translate.instant('addon.messages.blockuserconfirm', { $a: this.otherMember.fullname });\n        const okText = Translate.instant('addon.messages.blockuser');\n\n        try {\n            await CoreDomUtils.showConfirm(template, undefined, okText);\n            this.blockIcon = CoreConstants.ICON_LOADING;\n\n            const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n            this.showLoadingModal = true;\n\n            try {\n                try {\n                    await AddonMessages.blockContact(this.otherMember.id);\n                } finally {\n                    modal.dismiss();\n                    this.showLoadingModal = false;\n                }\n            } catch (error) {\n                CoreDomUtils.showErrorModalDefault(error, 'core.error', true);\n            } finally {\n                this.blockIcon = this.otherMember.isblocked ? 'fas-user-check' : 'fas-user-lock';\n            }\n        } catch {\n            // User cancelled.\n        }\n    }\n\n    /**\n     * Delete the conversation.\n     *\n     * @param done Function to call when done.\n     */\n    async deleteConversation(done?: () => void): Promise<void> {\n        if (!this.conversation) {\n            return;\n        }\n\n        const confirmMessage = 'addon.messages.' + (this.isSelf ? 'deleteallselfconfirm' : 'deleteallconfirm');\n\n        try {\n            await CoreDomUtils.showDeleteConfirm(confirmMessage);\n            this.deleteIcon = CoreConstants.ICON_LOADING;\n\n            try {\n                try {\n                    await AddonMessages.deleteConversation(this.conversation.id);\n\n                    CoreEvents.trigger(\n                        AddonMessagesProvider.UPDATE_CONVERSATION_LIST_EVENT,\n                        {\n                            conversationId: this.conversation.id,\n                            action: 'delete',\n                        },\n                        this.siteId,\n                    );\n\n                    this.messages = [];\n                } finally {\n                    done && done();\n                }\n            } catch (error) {\n                CoreDomUtils.showErrorModalDefault(error, 'Error deleting conversation.');\n            } finally {\n                this.deleteIcon = 'fas-trash';\n            }\n        } catch {\n            // User cancelled.\n        }\n    }\n\n    /**\n     * Displays a confirmation modal to unblock the user of the individual conversation.\n     *\n     * @return Promise resolved when user is unblocked or dialog is cancelled.\n     */\n    async unblockUser(): Promise<void> {\n        if (!this.otherMember) {\n            // Should never happen.\n            throw new CoreError('No member selected to be unblocked.');\n        }\n\n        const template = Translate.instant('addon.messages.unblockuserconfirm', { $a: this.otherMember.fullname });\n        const okText = Translate.instant('addon.messages.unblockuser');\n\n        try {\n            await CoreDomUtils.showConfirm(template, undefined, okText);\n\n            this.blockIcon = CoreConstants.ICON_LOADING;\n\n            const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n            this.showLoadingModal = true;\n\n            try {\n                try {\n                    await AddonMessages.unblockContact(this.otherMember.id);\n                } finally {\n                    modal.dismiss();\n                    this.showLoadingModal = false;\n                }\n            } catch (error) {\n                CoreDomUtils.showErrorModalDefault(error, 'core.error', true);\n            } finally {\n                this.blockIcon = this.otherMember.isblocked ? 'fas-user-check' : 'fas-user-lock';\n            }\n        } catch {\n            // User cancelled.\n        }\n    }\n\n    /**\n     * Displays a confirmation modal to send a contact request to the other user of the individual conversation.\n     *\n     * @return Promise resolved when the request is sent or the dialog is cancelled.\n     */\n    async createContactRequest(): Promise<void> {\n        if (!this.otherMember) {\n            // Should never happen.\n            throw new CoreError('No member selected to be requested.');\n        }\n\n        const template = Translate.instant('addon.messages.addcontactconfirm', { $a: this.otherMember.fullname });\n        const okText = Translate.instant('core.add');\n\n        try {\n            await CoreDomUtils.showConfirm(template, undefined, okText);\n\n            this.addRemoveIcon = CoreConstants.ICON_LOADING;\n\n            const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n            this.showLoadingModal = true;\n\n            try {\n                try {\n                    await AddonMessages.createContactRequest(this.otherMember.id);\n                } finally {\n                    modal.dismiss();\n                    this.showLoadingModal = false;\n                }\n            } catch (error) {\n                CoreDomUtils.showErrorModalDefault(error, 'core.error', true);\n            } finally {\n                this.addRemoveIcon = 'fas-user-plus';\n            }\n        } catch {\n            // User cancelled.\n        }\n    }\n\n    /**\n     * Confirms the contact request of the other user of the individual conversation.\n     *\n     * @return Promise resolved when the request is confirmed.\n     */\n    async confirmContactRequest(): Promise<void> {\n        if (!this.otherMember) {\n            // Should never happen.\n            throw new CoreError('No member selected to be confirmed.');\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n        this.showLoadingModal = true;\n\n        try {\n            try {\n                await AddonMessages.confirmContactRequest(this.otherMember.id);\n            } finally {\n                modal.dismiss();\n                this.showLoadingModal = false;\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.error', true);\n        }\n    }\n\n    /**\n     * Declines the contact request of the other user of the individual conversation.\n     *\n     * @return Promise resolved when the request is confirmed.\n     */\n    async declineContactRequest(): Promise<void> {\n        if (!this.otherMember) {\n            // Should never happen.\n            throw new CoreError('No member selected to be declined.');\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n        this.showLoadingModal = true;\n\n        try {\n            try {\n                await AddonMessages.declineContactRequest(this.otherMember.id);\n            } finally {\n                modal.dismiss();\n                this.showLoadingModal = false;\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.error', true);\n        }\n    }\n\n    /**\n     * Displays a confirmation modal to remove the other user of the conversation from contacts.\n     *\n     * @return Promise resolved when the request is sent or the dialog is cancelled.\n     */\n    async removeContact(): Promise<void> {\n        if (!this.otherMember) {\n            // Should never happen.\n            throw new CoreError('No member selected to be removed.');\n        }\n\n        const template = Translate.instant('addon.messages.removecontactconfirm', { $a: this.otherMember.fullname });\n        const okText = Translate.instant('core.remove');\n\n        try {\n            await CoreDomUtils.showConfirm(template, undefined, okText);\n\n            this.addRemoveIcon = CoreConstants.ICON_LOADING;\n\n            const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n            this.showLoadingModal = true;\n\n            try {\n                try {\n                    await AddonMessages.removeContact(this.otherMember.id);\n                } finally {\n                    modal.dismiss();\n                    this.showLoadingModal = false;\n                }\n            } catch (error) {\n                CoreDomUtils.showErrorModalDefault(error, 'core.error', true);\n            } finally {\n                this.addRemoveIcon = 'fas-user-plus';\n            }\n        } catch {\n            // User cancelled.\n        }\n\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        // Unset again, just in case.\n        this.unsetPolling();\n        this.syncObserver?.off();\n        this.memberInfoObserver?.off();\n        this.viewDestroyed = true;\n    }\n\n}\n","export default \"/**\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here the different files you should import to use global variables.\\n */\\n/**\\n * Imported ionic string functions for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.functions.string.scss\\n */\\n/**\\n * Imported ionic color functions for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.functions.color.scss\\n */\\n/**\\n * Imported ionic mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.mixins.scss\\n */\\n/**\\n * Imported ionic mixins for SCSS from different components\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/grid/grid.mixins.scss\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/item/item.mixins.scss\\n */\\n/**\\n * App custom mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n */\\n/**\\n * Same as item-push-svg-url but admits flip-rtl\\n */\\n/*\\n * App Custom App variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all custom app variables.\\n */\\n/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all global variables.\\n */\\n/**\\n * Layout Breakpoints\\n *\\n * https://ionicframework.com/docs/layout/grid#default-breakpoints\\n */\\n:host-context(.ios) ion-footer .toolbar:last-child {\\n  padding-bottom: 4px;\\n  min-height: 0;\\n}\\nion-content {\\n  --content-background: var(--background-alternative);\\n  --background: var(--content-background);\\n}\\nion-content::part(scroll) {\\n  padding-bottom: 0 !important;\\n}\\n.addon-messages-discussion-container {\\n  display: flex;\\n  flex-direction: column;\\n  padding-bottom: 16px !important;\\n  background: var(--content-background);\\n}\\n.addon-messages-date {\\n  font-weight: normal;\\n  font-size: 0.9rem;\\n}\\nion-item.addon-message {\\n  --message-background: var(--addon-messages-message-bg);\\n  --message-activated-background: var(--addon-messages-message-activated-bg);\\n  --message-alignment: flex-start;\\n  border: 0;\\n  border-radius: var(--medium-radius);\\n  padding: 0 8px 0 8px;\\n  margin: 8px;\\n  --background: var(--message-background);\\n  background: var(--message-background);\\n  align-self: var(--message-alignment);\\n  width: 90%;\\n  max-width: var(--list-item-max-width);\\n  --min-height: var(--a11y-min-target-size);\\n  position: relative;\\n  transition: width 500ms ease-in-out;\\n  overflow: visible;\\n}\\nion-item.addon-message::part(native) {\\n  --inner-border-width: 0px;\\n  --inner-padding-end: 0px;\\n  padding: 0;\\n  margin: 0;\\n}\\nion-item.addon-message:hover {\\n  filter: drop-shadow(2px 2px 2px rgba(0, 0, 0, 0.3));\\n}\\nion-item.addon-message core-format-text > p:only-child {\\n  display: inline;\\n}\\nion-item.addon-message .addon-message-user {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 0.5rem;\\n  margin-top: 0;\\n  color: var(--ion-text-color);\\n}\\nion-item.addon-message .addon-message-user core-user-avatar {\\n  display: block;\\n  --core-avatar-size: var(--addon-messages-avatar-size);\\n  margin: 0;\\n}\\nion-item.addon-message .addon-message-user div {\\n  font-weight: 500;\\n  flex-grow: 1;\\n  padding-left: 0.5rem;\\n  padding-right: 0.5rem;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\nion-item.addon-message ion-note {\\n  color: var(--addon-messages-message-note-text);\\n  font-size: var(--addon-messages-message-note-font-size);\\n  margin: 0;\\n  padding: 8px 0;\\n  align-self: flex-start;\\n}\\nion-item.addon-message[tappable]:active {\\n  --message-background: var(--message-activated-background);\\n}\\nion-item.addon-message ion-label {\\n  margin: 0;\\n  padding: 8px 0;\\n}\\nion-item.addon-message .addon-message-text {\\n  display: inline-flex;\\n}\\nion-item.addon-message .addon-message-text * {\\n  color: var(--ion-text-color);\\n}\\nion-item.addon-message .tail {\\n  content: \\\"\\\";\\n  width: 0;\\n  height: 0;\\n  border: 0.5rem solid transparent;\\n  position: absolute;\\n  touch-action: none;\\n  bottom: 0;\\n  border-bottom-color: var(--message-background);\\n}\\nion-item.addon-message.addon-message-mine {\\n  --message-background: var(--addon-messages-message-mine-bg);\\n  --message-activated-background: var(--addon-messages-message-mine-activated-bg);\\n  --message-alignment: flex-end;\\n}\\nion-item.addon-message.addon-message-mine .spinner {\\n  float: right;\\n  margin-left: 5px;\\n  margin-right: -3px;\\n  margin-top: 2px;\\n  margin-bottom: -2px;\\n}\\n[dir=rtl] ion-item.addon-message.addon-message-mine .spinner, :host-context([dir=rtl]) ion-item.addon-message.addon-message-mine .spinner {\\n  float: left;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  ion-item.addon-message.addon-message-mine .spinner {\\n    margin-left: unset;\\n    margin-right: unset;\\n    -webkit-margin-start: 5px;\\n    margin-inline-start: 5px;\\n    -webkit-margin-end: -3px;\\n    margin-inline-end: -3px;\\n  }\\n}\\nion-item.addon-message.addon-message-mine .spinner svg {\\n  width: 16px;\\n  height: 16px;\\n}\\nion-item.addon-message.addon-message-mine .tail {\\n  right: -8px;\\n  margin-right: -0.5rem;\\n}\\n[dir=rtl] ion-item.addon-message.addon-message-mine .tail, :host-context([dir=rtl]) ion-item.addon-message.addon-message-mine .tail {\\n  left: unset;\\n  right: unset;\\n  left: -8px;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  ion-item.addon-message.addon-message-mine .tail {\\n    margin-right: unset;\\n    -webkit-margin-end: -0.5rem;\\n    margin-inline-end: -0.5rem;\\n  }\\n}\\nion-item.addon-message.addon-message-not-mine .tail {\\n  left: -8px;\\n  margin-left: -0.5rem;\\n}\\n[dir=rtl] ion-item.addon-message.addon-message-not-mine .tail, :host-context([dir=rtl]) ion-item.addon-message.addon-message-not-mine .tail {\\n  left: unset;\\n  right: unset;\\n  right: -8px;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  ion-item.addon-message.addon-message-not-mine .tail {\\n    margin-left: unset;\\n    -webkit-margin-start: -0.5rem;\\n    margin-inline-start: -0.5rem;\\n  }\\n}\\nion-item.addon-message .addon-messages-delete-button {\\n  min-height: initial;\\n  line-height: initial;\\n  margin-top: 0px;\\n  margin-bottom: 0px;\\n  height: var(--a11y-min-target-size) !important;\\n  align-self: flex-end;\\n}\\nion-item.addon-message .addon-messages-delete-button ion-icon {\\n  font-size: 1.4em;\\n  line-height: initial;\\n  color: var(--danger);\\n}\\nion-item.addon-message.addon-message-no-user {\\n  margin-top: 0px;\\n}\\n/**\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here the different files you should import to use global variables.\\n */\\n/**\\n * Imported ionic string functions for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.functions.string.scss\\n */\\n/**\\n * Imported ionic color functions for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.functions.color.scss\\n */\\n/**\\n * Imported ionic mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.mixins.scss\\n */\\n/**\\n * Imported ionic mixins for SCSS from different components\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/grid/grid.mixins.scss\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/item/item.mixins.scss\\n */\\n/**\\n * App custom mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n */\\n/**\\n * Same as item-push-svg-url but admits flip-rtl\\n */\\n/*\\n * App Custom App variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all custom app variables.\\n */\\n/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all global variables.\\n */\\n/**\\n * Layout Breakpoints\\n *\\n * https://ionicframework.com/docs/layout/grid#default-breakpoints\\n */\\n:host .addon-messages-unreadfrom {\\n  color: var(--primary);\\n  background-color: transparent;\\n  margin-top: 6px;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n:host .addon-messages-unreadfrom ion-icon {\\n  color: var(--primary);\\n  background-color: transparent;\\n}\\n:host .has-fab .scroll-content {\\n  padding-bottom: 0;\\n}\\n:host ion-fab .core-discussion-messages-badge {\\n  position: absolute;\\n  color: var(--addon-messages-discussion-badge-text);\\n  background-color: var(--addon-messages-discussion-badge);\\n  display: block;\\n  right: 0;\\n  top: 0;\\n}\\n:host-context([dir=rtl]) {\\n  left: unset;\\n  right: unset;\\n  left: 0;\\n}\\n:host ion-header ion-toolbar ion-title {\\n  padding: 0;\\n}\\n:host ion-header ion-toolbar ion-title h1 {\\n  display: flex;\\n  align-items: center;\\n  padding: 0;\\n}\\n:host ion-header ion-toolbar ion-title h1 .core-bar-button-image {\\n  margin-right: 6px;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  :host ion-header ion-toolbar ion-title h1 .core-bar-button-image {\\n    margin-right: unset;\\n    -webkit-margin-end: 6px;\\n    margin-inline-end: 6px;\\n  }\\n}\\n:host ion-header ion-toolbar ion-title h1 core-format-text {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  flex-shrink: 1;\\n}\\n:host ion-header ion-toolbar ion-title h1 ion-icon {\\n  margin-left: 6px;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  :host ion-header ion-toolbar ion-title h1 ion-icon {\\n    margin-left: unset;\\n    -webkit-margin-start: 6px;\\n    margin-inline-start: 6px;\\n  }\\n}\\n:host-context(.ios) ion-header ion-toolbar h1 {\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\";","// (C) Copyright 2015 Moodle Pty Ltd.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AddonModForumComponentsModule } from '@addons/mod/forum/components/components.module';\r\nimport { CanLeaveGuard } from '@guards/can-leave';\r\nimport { CoreSharedModule } from '@/core/shared.module';\r\n\r\nimport { AddonModForumDiscussionPage } from './discussion.page';\r\n\r\nconst routes: Routes = [{\r\n    path: '',\r\n    component: AddonModForumDiscussionPage,\r\n    canDeactivate: [CanLeaveGuard],\r\n}];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes),\r\n        CoreSharedModule,\r\n        AddonModForumComponentsModule,\r\n    ],\r\n    declarations: [\r\n        AddonModForumDiscussionPage,\r\n    ],\r\n})\r\nexport class AddonForumDiscussionPageModule {}\r\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { ContextLevel, CoreConstants } from '@/core/constants';\nimport { Component, OnDestroy, ViewChild, OnInit, AfterViewInit, ElementRef, Optional } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreFileUploader } from '@features/fileuploader/services/fileuploader';\nimport { CoreRatingInfo, CoreRatingProvider } from '@features/rating/services/rating';\nimport { CoreRatingOffline } from '@features/rating/services/rating-offline';\nimport { CoreRatingSyncProvider } from '@features/rating/services/rating-sync';\nimport { CoreUser } from '@features/user/services/user';\nimport { CanLeave } from '@guards/can-leave';\nimport { IonContent, IonRefresher } from '@ionic/angular';\nimport { CoreApp } from '@services/app';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreScreen } from '@services/screen';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { Network, NgZone, Translate } from '@singletons';\nimport { CoreArray } from '@singletons/array';\nimport { CoreDom } from '@singletons/dom';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { Subscription } from 'rxjs';\nimport { AddonModForumDiscussionsSource } from '../../classes/forum-discussions-source';\nimport { AddonModForumDiscussionsSwipeManager } from '../../classes/forum-discussions-swipe-manager';\nimport {\n    AddonModForum,\n    AddonModForumAccessInformation,\n    AddonModForumData,\n    AddonModForumDiscussion,\n    AddonModForumPost,\n    AddonModForumProvider,\n    AddonModForumPostFormData,\n    AddonModForumChangeDiscussionData,\n    AddonModForumReplyDiscussionData,\n} from '../../services/forum';\nimport { AddonModForumHelper } from '../../services/forum-helper';\nimport { AddonModForumOffline } from '../../services/forum-offline';\nimport { AddonModForumSync, AddonModForumSyncProvider } from '../../services/forum-sync';\n\ntype SortType = 'flat-newest' | 'flat-oldest' | 'nested';\n\ntype Post = AddonModForumPost & { children?: Post[] };\n\n/**\n * Page that displays a forum discussion.\n */\n@Component({\n    selector: 'page-addon-mod-forum-discussion',\n    templateUrl: 'discussion.html',\n    styleUrls: ['discussion.scss'],\n})\nexport class AddonModForumDiscussionPage implements OnInit, AfterViewInit, OnDestroy, CanLeave {\n\n    @ViewChild(IonContent) content!: IonContent;\n\n    courseId?: number;\n    discussionId!: number;\n    forum: Partial<AddonModForumData> = {};\n    accessInfo: AddonModForumAccessInformation = {};\n    discussion?: AddonModForumDiscussion;\n    discussions?: AddonModForumDiscussionDiscussionsSwipeManager;\n    startingPost?: Post;\n    posts!: Post[];\n    discussionLoaded = false;\n    postSubjects!: { [id: string]: string };\n    isOnline!: boolean;\n    postHasOffline!: boolean;\n    sort: SortType = 'nested';\n    trackPosts!: boolean;\n    formData: AddonModForumSharedPostFormData = {\n        replyingTo: 0,\n        isEditing: false,\n        subject: '',\n        message: null,\n        files: [],\n        isprivatereply: false,\n    };\n\n    originalData: Omit<AddonModForumPostFormData, 'id'> = {\n        subject: null,\n        message: null,\n        files: [],\n        isprivatereply: false,\n    };\n\n    refreshIcon = CoreConstants.ICON_LOADING;\n    syncIcon = CoreConstants.ICON_LOADING;\n    discussionStr = '';\n    component = AddonModForumProvider.COMPONENT;\n    cmId?: number;\n    canPin = false;\n    availabilityMessage: string | null = null;\n    leavingPage = false;\n\n    protected forumId?: number;\n    protected postId?: number;\n    protected parent?: number;\n    protected onlineObserver?: Subscription;\n    protected syncObserver?: CoreEventObserver;\n    protected syncManualObserver?: CoreEventObserver;\n\n    ratingInfo?: CoreRatingInfo;\n    hasOfflineRatings = false;\n    protected ratingOfflineObserver?: CoreEventObserver;\n    protected ratingSyncObserver?: CoreEventObserver;\n    protected changeDiscObserver?: CoreEventObserver;\n\n    constructor(\n        @Optional() protected splitView: CoreSplitViewComponent,\n        protected elementRef: ElementRef,\n        protected route: ActivatedRoute,\n    ) {}\n\n    get isMobile(): boolean {\n        return CoreScreen.isMobile;\n    }\n\n    async ngOnInit(): Promise<void> {\n        try {\n            const routeData = this.route.snapshot.data;\n            this.courseId = CoreNavigator.getRouteNumberParam('courseId');\n            this.cmId = CoreNavigator.getRouteNumberParam('cmId');\n            this.forumId = CoreNavigator.getRouteNumberParam('forumId');\n            this.discussion = CoreNavigator.getRouteParam<AddonModForumDiscussion>('discussion');\n            this.discussionId = this.discussion\n                ? this.discussion.discussion\n                : CoreNavigator.getRequiredRouteNumberParam('discussionId');\n            this.trackPosts = CoreNavigator.getRouteBooleanParam('trackPosts') || false;\n            this.postId = CoreNavigator.getRouteNumberParam('postId');\n            this.parent = CoreNavigator.getRouteNumberParam('parent');\n\n            if (this.courseId && this.cmId && (routeData.swipeEnabled ?? true)) {\n                this.discussions = new AddonModForumDiscussionDiscussionsSwipeManager(\n                    CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(\n                        AddonModForumDiscussionsSource,\n                        [this.courseId, this.cmId, routeData.discussionsPathPrefix ?? ''],\n                    ),\n                );\n\n                await this.discussions.start();\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            this.goBack();\n\n            return;\n        }\n\n        this.isOnline = CoreApp.isOnline();\n        this.onlineObserver = Network.onChange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            NgZone.run(() => {\n                this.isOnline = CoreApp.isOnline();\n            });\n        });\n\n        this.discussionStr = Translate.instant('addon.mod_forum.discussion');\n    }\n\n    /**\n     * View loaded.\n     */\n    async ngAfterViewInit(): Promise<void> {\n        this.sort = this.parent\n            ? 'nested' // Force nested order.\n            : await this.getUserSort();\n\n        await this.fetchPosts(true, false, true);\n\n        const scrollTo = this.postId || this.parent;\n        if (scrollTo) {\n            // Scroll to the post.\n            CoreDom.scrollToElement(\n                this.elementRef.nativeElement,\n                '#addon-mod_forum-post-' + scrollTo,\n            );\n        }\n    }\n\n    /**\n     * User entered the page that contains the component.\n     */\n    async ionViewDidEnter(): Promise<void> {\n        if (this.syncObserver) {\n            // Already setup.\n            return;\n        }\n\n        // The discussion object was not passed as parameter.\n        if (!this.discussion) {\n            await this.loadDiscussion(this.discussionId, this.forumId, this.cmId);\n        }\n\n        const discussion = this.discussion;\n\n        // Refresh data if this discussion is synchronized automatically.\n        this.syncObserver = CoreEvents.on(AddonModForumSyncProvider.AUTO_SYNCED, data => {\n            if (data.forumId == this.forumId && this.discussionId == data.discussionId\n                    && data.userId == CoreSites.getCurrentSiteUserId()) {\n                // Refresh the data.\n                this.discussionLoaded = false;\n                this.refreshPosts();\n            }\n        }, CoreSites.getCurrentSiteId());\n\n        // Refresh data if this forum discussion is synchronized from discussions list.\n        this.syncManualObserver = CoreEvents.on(AddonModForumSyncProvider.MANUAL_SYNCED, data => {\n            if (data.source != 'discussion' && data.forumId == this.forumId &&\n                    data.userId == CoreSites.getCurrentSiteUserId()) {\n                // Refresh the data.\n                this.discussionLoaded = false;\n                this.refreshPosts();\n            }\n        }, CoreSites.getCurrentSiteId());\n\n        // Invalidate discussion list if it was not read.\n        if (this.forumId && discussion && discussion.numunread > 0) {\n            AddonModForum.invalidateDiscussionsList(this.forumId);\n        }\n\n        // Listen for offline ratings saved and synced.\n        this.ratingOfflineObserver = CoreEvents.on(CoreRatingProvider.RATING_SAVED_EVENT, (data) => {\n            if (data.component == 'mod_forum' && data.ratingArea == 'post' && data.contextLevel == ContextLevel.MODULE &&\n                    data.instanceId == this.cmId && data.itemSetId == this.discussionId) {\n                this.hasOfflineRatings = true;\n            }\n        });\n\n        this.ratingSyncObserver = CoreEvents.on(CoreRatingSyncProvider.SYNCED_EVENT, async (data) => {\n            if (data.component == 'mod_forum' && data.ratingArea == 'post' && data.contextLevel == ContextLevel.MODULE &&\n                    data.instanceId == this.cmId && data.itemSetId == this.discussionId) {\n                this.hasOfflineRatings = false;\n            }\n        });\n\n        this.changeDiscObserver = CoreEvents.on(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data => {\n            if (discussion && this.forumId && (this.forumId === data.forumId || data.cmId === this.cmId)) {\n                AddonModForum.invalidateDiscussionsList(this.forumId).finally(() => {\n                    if (data.locked !== undefined) {\n                        discussion.locked = data.locked;\n                    }\n                    if (data.pinned !== undefined) {\n                        discussion.pinned = data.pinned;\n                    }\n                    if (data.starred !== undefined) {\n                        discussion.starred = data.starred;\n                    }\n\n                    if (data.deleted !== undefined && data.deleted) {\n                        if (!data.post?.parentid) {\n                            this.goBack();\n                        } else {\n                            this.discussionLoaded = false;\n                            this.refreshPosts();\n                        }\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @return Resolved if we can leave it, rejected if not.\n     */\n    async canLeave(): Promise<boolean> {\n        if (AddonModForumHelper.hasPostDataChanged(this.formData, this.originalData)) {\n            // Show confirmation if some data has been modified.\n            await CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\n        }\n\n        // Delete the local files from the tmp folder.\n        CoreFileUploader.clearTmpFiles(this.formData.files);\n\n        this.leavingPage = true;\n\n        return true;\n    }\n\n    /**\n     * Helper function to go back.\n     */\n    protected goBack(): void {\n        if (this.leavingPage) {\n            return;\n        }\n\n        if (this.splitView?.outletActivated) {\n            CoreNavigator.navigate('../');\n        } else {\n            CoreNavigator.back();\n        }\n    }\n\n    /**\n     * Runs when the page is about to leave and no longer be the active page.\n     */\n    ionViewWillLeave(): void {\n        this.syncObserver && this.syncObserver.off();\n        this.syncManualObserver && this.syncManualObserver.off();\n        this.ratingOfflineObserver && this.ratingOfflineObserver.off();\n        this.ratingSyncObserver && this.ratingSyncObserver.off();\n        this.changeDiscObserver && this.changeDiscObserver.off();\n        delete this.syncObserver;\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.onlineObserver && this.onlineObserver.unsubscribe();\n        this.discussions && this.discussions.destroy();\n    }\n\n    /**\n     * Get sort type configured by the current user.\n     *\n     * @return Promise resolved with the sort type.\n     */\n    protected async getUserSort(): Promise<SortType> {\n        try {\n            const value = await CoreSites.getRequiredCurrentSite().getLocalSiteConfig<SortType>('AddonModForumDiscussionSort');\n\n            return value;\n        } catch (error) {\n            try {\n                const value = await CoreUser.getUserPreference('forum_displaymode');\n\n                switch (Number(value)) {\n                    case 1:\n                        return 'flat-oldest';\n                    case -1:\n                        return 'flat-newest';\n                    case 3:\n                        return 'nested';\n                    case 2: // Threaded not implemented.\n                    default:\n                        // Not set, use default sort.\n                        // @TODO add fallback to $CFG->forum_displaymode.\n                }\n            } catch (error) {\n                // Ignore errors.\n            }\n        }\n\n        return 'flat-oldest';\n    }\n\n    /**\n     * Convenience function to get the forum.\n     *\n     * @return Promise resolved with the forum.\n     */\n    protected fetchForum(): Promise<AddonModForumData> {\n        if (this.courseId && this.cmId) {\n            return AddonModForum.getForum(this.courseId, this.cmId);\n        }\n\n        if (this.courseId && this.forumId) {\n            return AddonModForum.getForumById(this.courseId, this.forumId);\n        }\n\n        throw new Error('Cannot get the forum');\n    }\n\n    /**\n     * Convenience function to get the posts.\n     *\n     * @param sync Whether to try to synchronize the discussion.\n     * @param showErrors Whether to show errors in a modal.\n     * @param forceMarkAsRead Whether to mark all posts as read.\n     * @return Promise resolved when done.\n     */\n    protected async fetchPosts(sync?: boolean, showErrors?: boolean, forceMarkAsRead?: boolean): Promise<void> {\n        let onlinePosts: AddonModForumPost[] = [];\n        const offlineReplies: AddonModForumPost[] = [];\n        let hasUnreadPosts = false;\n\n        try {\n            if (sync) {\n                // Try to synchronize the forum.\n                await CoreUtils.ignoreErrors(this.syncDiscussion(!!showErrors));\n            }\n\n            const response = await AddonModForum.getDiscussionPosts(this.discussionId, { cmId: this.cmId });\n            const replies = await AddonModForumOffline.getDiscussionReplies(this.discussionId);\n            this.ratingInfo = response.ratinginfo;\n\n            onlinePosts = response.posts;\n            this.courseId = response.courseid || this.courseId;\n            this.forumId = response.forumid || this.forumId;\n\n            // Check if there are responses stored in offline.\n            this.postHasOffline = !!replies.length;\n            const convertPromises: Promise<void>[] = [];\n\n            // Index posts to allow quick access. Also check unread field.\n            const onlinePostsMap: Record<string, AddonModForumPost> = {};\n            onlinePosts.forEach((post) => {\n                onlinePostsMap[post.id] = post;\n                hasUnreadPosts = hasUnreadPosts || !!post.unread;\n            });\n\n            replies.forEach((offlineReply) => {\n                // If we don't have forumId and courseId, get it from the post.\n                if (!this.forumId) {\n                    this.forumId = offlineReply.forumid;\n                }\n                if (!this.courseId) {\n                    this.courseId = offlineReply.courseid;\n                }\n\n                convertPromises.push(\n                    AddonModForumHelper.instance\n                        .convertOfflineReplyToOnline(offlineReply)\n                        .then(async reply => {\n                            offlineReplies.push(reply);\n\n                            // Disable reply of the parent. Reply in offline to the same post is not allowed, edit instead.\n                            reply.parentid && (onlinePostsMap[reply.parentid].capabilities.reply = false);\n\n                            return;\n                        }),\n                );\n            });\n\n            await Promise.all(convertPromises);\n\n            // Convert back to array.\n            onlinePosts = CoreUtils.objectToArray(onlinePostsMap);\n\n            let posts = offlineReplies.concat(onlinePosts);\n\n            this.startingPost = AddonModForum.extractStartingPost(posts);\n\n            // If sort type is nested, normal sorting is disabled and nested posts will be displayed.\n            if (this.sort == 'nested') {\n                // Sort first by creation date to make format tree work.\n                AddonModForum.sortDiscussionPosts(posts, 'ASC');\n\n                const rootId = this.startingPost ? this.startingPost.id : (this.discussion ? this.discussion.id : 0);\n                posts = CoreUtils.formatTree(posts, 'parentid', 'id', rootId);\n            } else {\n                // Set default reply subject.\n                const direction = this.sort == 'flat-newest' ? 'DESC' : 'ASC';\n                AddonModForum.sortDiscussionPosts(posts, direction);\n            }\n\n            try {\n                // Now try to get the forum.\n                const forum = await this.fetchForum();\n                // \"forum.istracked\" is more reliable than \"trackPosts\".\n                if (forum.istracked !== undefined) {\n                    this.trackPosts = forum.istracked;\n                }\n\n                this.forumId = forum.id;\n                this.cmId = forum.cmid;\n                this.courseId = forum.course;\n                this.forum = forum;\n                this.availabilityMessage = AddonModForumHelper.getAvailabilityMessage(forum);\n\n                const promises: Promise<void>[] = [];\n\n                promises.push(\n                    AddonModForum.instance\n                        .getAccessInformation(this.forumId, { cmId: this.cmId })\n                        .then(async accessInfo => {\n                            this.accessInfo = accessInfo;\n\n                            // Disallow replying if cut-off date is reached and the user has not the capability to override it.\n                            // Just in case the posts were fetched from WS when the cut-off date was not reached but it is now.\n                            if (AddonModForumHelper.isCutoffDateReached(forum) && !accessInfo.cancanoverridecutoff) {\n                                posts.forEach((post) => {\n                                    post.capabilities.reply = false;\n                                });\n                            }\n\n                            return;\n                        }),\n                );\n\n                // The discussion object was not passed as parameter and there is no starting post.\n                if (!this.discussion) {\n                    promises.push(this.loadDiscussion(this.discussionId, this.forumId, this.cmId));\n                }\n\n                await Promise.all(promises);\n            } catch (error) {\n                // Ignore errors.\n            }\n\n            if (!this.discussion && !this.startingPost) {\n                // The discussion object was not passed as parameter and there is no starting post. Should not happen.\n                throw new Error('Invalid forum discussion.');\n            }\n\n            if (this.startingPost && this.startingPost.author && this.forum.type == 'single') {\n                // Hide author and groups for first post and type single.\n                delete this.startingPost.author.fullname;\n                delete this.startingPost.author.groups;\n            }\n\n            this.posts = posts;\n            this.postSubjects = this.getAllPosts().reduce(\n                (postSubjects, post) => {\n                    postSubjects[post.id] = post.subject;\n\n                    return postSubjects;\n                },\n                this.startingPost\n                    ? { [this.startingPost.id]: this.startingPost.subject }\n                    : {},\n            );\n\n            if (AddonModForum.isSetPinStateAvailableForSite() && this.forumId) {\n                // Use the canAddDiscussion WS to check if the user can pin discussions.\n                try {\n                    const response = await AddonModForum.canAddDiscussionToAll(this.forumId, { cmId: this.cmId });\n\n                    this.canPin = !!response.canpindiscussions;\n                } catch (error) {\n                    this.canPin = false;\n                }\n            } else {\n                this.canPin = false;\n            }\n\n            this.hasOfflineRatings =\n                await CoreRatingOffline.hasRatings('mod_forum', 'post', ContextLevel.MODULE, this.cmId, this.discussionId);\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n        } finally {\n            this.discussionLoaded = true;\n            this.refreshIcon = CoreConstants.ICON_REFRESH;\n            this.syncIcon = CoreConstants.ICON_SYNC;\n\n            if (forceMarkAsRead || (hasUnreadPosts && this.trackPosts)) {\n                // Add log in Moodle and mark unread posts as readed.\n                AddonModForum.logDiscussionView(this.discussionId, this.forumId || -1, this.forum.name).catch(() => {\n                    // Ignore errors.\n                }).finally(() => {\n                    if (!this.courseId || !this.cmId) {\n                        return;\n                    }\n\n                    // Trigger mark read posts.\n                    CoreEvents.trigger(AddonModForumProvider.MARK_READ_EVENT, {\n                        courseId: this.courseId,\n                        moduleId: this.cmId,\n                    }, CoreSites.getCurrentSiteId());\n                });\n            }\n        }\n    }\n\n    /**\n     * Convenience function to load discussion.\n     *\n     * @param discussionId Discussion ID.\n     * @param forumId Forum ID.\n     * @param cmId Forum cmid.\n     * @return Promise resolved when done.\n     */\n    protected async loadDiscussion(discussionId: number, forumId?: number, cmId?: number): Promise<void> {\n        // Fetch the discussion if not passed as parameter.\n        if (this.discussion || !forumId || ! cmId) {\n            return;\n        }\n\n        this.discussion = await AddonModForumHelper.getDiscussionById(forumId, cmId, discussionId);\n        this.discussionId = this.discussion.discussion;\n    }\n\n    /**\n     * Tries to synchronize the posts discussion.\n     *\n     * @param showErrors Whether to show errors in a modal.\n     * @return Promise resolved when done.\n     */\n    protected async syncDiscussion(showErrors: boolean): Promise<void> {\n        const promises: Promise<void>[] = [];\n\n        promises.push(\n            AddonModForumSync.instance\n                .syncDiscussionReplies(this.discussionId)\n                .then((result) => {\n                    if (result.warnings && result.warnings.length) {\n                        CoreDomUtils.showErrorModal(result.warnings[0]);\n                    }\n\n                    if (result && result.updated && this.forumId) {\n                        // Sync successful, send event.\n                        CoreEvents.trigger(AddonModForumSyncProvider.MANUAL_SYNCED, {\n                            forumId: this.forumId,\n                            userId: CoreSites.getCurrentSiteUserId(),\n                            source: 'discussion',\n                        }, CoreSites.getCurrentSiteId());\n                    }\n\n                    return;\n                }),\n        );\n\n        promises.push(\n            AddonModForumSync.instance\n                .syncRatings(this.cmId, this.discussionId)\n                .then((result) => {\n                    if (result.warnings && result.warnings.length) {\n                        CoreDomUtils.showErrorModal(result.warnings[0]);\n                    }\n\n                    return;\n                }),\n        );\n\n        try {\n            await Promise.all(promises);\n        } catch (error) {\n            if (showErrors) {\n                CoreDomUtils.showErrorModalDefault(error, 'core.errorsync', true);\n            }\n\n            throw new Error('Failed syncing discussion');\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher.\n     * @param done Function to call when done.\n     * @param showErrors If show errors to the user of hide them.\n     * @return Promise resolved when done.\n     */\n    async doRefresh(refresher?: IonRefresher | null, done?: () => void, showErrors: boolean = false): Promise<void> {\n        if (this.discussionLoaded) {\n            await this.refreshPosts(true, showErrors).finally(() => {\n                refresher?.complete();\n                done && done();\n            });\n        }\n    }\n\n    /**\n     * Refresh posts.\n     *\n     * @param sync Whether to try to synchronize the discussion.\n     * @param showErrors Whether to show errors in a modal.\n     * @return Promise resolved when done.\n     */\n    async refreshPosts(sync?: boolean, showErrors?: boolean): Promise<void> {\n        this.content.scrollToTop();\n        this.refreshIcon = CoreConstants.ICON_LOADING;\n        this.syncIcon = CoreConstants.ICON_LOADING;\n\n        const promises: Promise<void>[] = [];\n\n        this.courseId && promises.push(AddonModForum.invalidateForumData(this.courseId));\n        promises.push(AddonModForum.invalidateDiscussionPosts(this.discussionId, this.forumId));\n        this.forumId && promises.push(AddonModForum.invalidateAccessInformation(this.forumId));\n        this.forumId && promises.push(AddonModForum.invalidateCanAddDiscussion(this.forumId));\n\n        await CoreUtils.ignoreErrors(CoreUtils.allPromises(promises));\n\n        await this.fetchPosts(sync, showErrors);\n    }\n\n    /**\n     * Function to change posts sorting\n     *\n     * @param type Sort type.\n     * @return Promised resolved when done.\n     */\n    changeSort(type: SortType): Promise<void> {\n        this.discussionLoaded = false;\n        this.sort = type;\n        CoreSites.getRequiredCurrentSite().setLocalSiteConfig('AddonModForumDiscussionSort', this.sort);\n        this.content.scrollToTop();\n\n        return this.fetchPosts();\n    }\n\n    /**\n     * Lock or unlock the discussion.\n     *\n     * @param locked True to lock the discussion, false to unlock.\n     */\n    async setLockState(locked: boolean): Promise<void> {\n        if (!this.discussion || !this.forumId || !this.cmId) {\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            const response = await AddonModForum.setLockState(this.forumId, this.discussionId, locked);\n            this.discussion.locked = response.locked;\n\n            const data: AddonModForumChangeDiscussionData = {\n                forumId: this.forumId,\n                discussionId: this.discussionId,\n                cmId: this.cmId,\n                locked: this.discussion.locked,\n            };\n            CoreEvents.trigger(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\n\n            CoreDomUtils.showToast('addon.mod_forum.lockupdated', true);\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Pin or unpin the discussion.\n     *\n     * @param pinned True to pin the discussion, false to unpin it.\n     */\n    async setPinState(pinned: boolean): Promise<void> {\n        if (!this.discussion || !this.forumId || !this.cmId) {\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            await AddonModForum.setPinState(this.discussionId, pinned);\n\n            this.discussion.pinned = pinned;\n\n            const data: AddonModForumChangeDiscussionData = {\n                forumId: this.forumId,\n                discussionId: this.discussionId,\n                cmId: this.cmId,\n                pinned: this.discussion.pinned,\n            };\n            CoreEvents.trigger(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\n\n            CoreDomUtils.showToast('addon.mod_forum.pinupdated', true);\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Star or unstar the discussion.\n     *\n     * @param starred True to star the discussion, false to unstar it.\n     */\n    async toggleFavouriteState(starred: boolean): Promise<void> {\n        if (!this.discussion || !this.forumId || !this.cmId) {\n            return;\n        }\n\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            await AddonModForum.toggleFavouriteState(this.discussionId, starred);\n\n            this.discussion.starred = starred;\n\n            const data: AddonModForumChangeDiscussionData = {\n                forumId: this.forumId,\n                discussionId: this.discussionId,\n                cmId: this.cmId,\n                starred: this.discussion.starred,\n            };\n            CoreEvents.trigger(AddonModForumProvider.CHANGE_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\n\n            CoreDomUtils.showToast('addon.mod_forum.favouriteupdated', true);\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * New post added.\n     */\n    postListChanged(): void {\n        if (!this.forumId || !this.cmId) {\n            return;\n        }\n\n        // Trigger an event to notify a new reply.\n        const data: AddonModForumReplyDiscussionData = {\n            forumId: this.forumId,\n            discussionId: this.discussionId,\n            cmId: this.cmId,\n        };\n        CoreEvents.trigger(AddonModForumProvider.REPLY_DISCUSSION_EVENT, data, CoreSites.getCurrentSiteId());\n\n        this.discussionLoaded = false;\n        this.refreshPosts().finally(() => {\n            this.discussionLoaded = true;\n        });\n    }\n\n    /**\n     * Get all the posts contained in the discussion.\n     *\n     * @return Array containing all the posts of the discussion.\n     */\n    protected getAllPosts(): Post[] {\n        const allPosts = this.posts.map(post => this.flattenPostHierarchy(post));\n\n        return CoreArray.flatten(allPosts);\n    }\n\n    /**\n     * Flatten a post's hierarchy into an array.\n     *\n     * @param parent Parent post.\n     * @return Array containing all the posts within the hierarchy (including the parent).\n     */\n    protected flattenPostHierarchy(parent: Post): Post[] {\n        const posts = [parent];\n        const children = parent.children || [];\n\n        for (const child of children) {\n            posts.push(...this.flattenPostHierarchy(child));\n        }\n\n        return posts;\n    }\n\n}\n\n/**\n * Reply data shared by post.\n */\nexport type AddonModForumSharedPostFormData = Omit<AddonModForumPostFormData, 'id'> & {\n    id?: number; // ID when editing an online reply.\n    syncId?: string; // Sync ID if some post has blocked synchronization.\n};\n\n/**\n * Helper to manage swiping within a collection of discussions.\n */\nclass AddonModForumDiscussionDiscussionsSwipeManager extends AddonModForumDiscussionsSwipeManager {\n\n    /**\n     * @inheritdoc\n     */\n    protected getSelectedItemPathFromRoute(route: ActivatedRouteSnapshot): string | null {\n        return this.getSource().DISCUSSIONS_PATH_PREFIX + route.params.discussionId;\n    }\n\n}\n","export default \":host .addon-forum-reply-button .label {\\n  margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hZGRvbnMvbW9kL2ZvcnVtL3BhZ2VzL2Rpc2N1c3Npb24vZGlzY3Vzc2lvbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVJO0VBQ0ksU0FBQTtBQURSIiwiZmlsZSI6InNyYy9hZGRvbnMvbW9kL2ZvcnVtL3BhZ2VzL2Rpc2N1c3Npb24vZGlzY3Vzc2lvbi5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG5cclxuICAgIC5hZGRvbi1mb3J1bS1yZXBseS1idXR0b24gLmxhYmVsIHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ== */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { ActivatedRoute, ActivatedRouteSnapshot, UrlSegment } from '@angular/router';\n\nimport { CoreNavigator } from '@services/navigator';\n\nimport { CoreRoutedItemsManager } from './routed-items-manager';\nimport { CoreRoutedItemsManagerSource } from './routed-items-manager-source';\n\n/**\n * Helper class to manage the state and routing of a swipeable page.\n */\nexport class CoreSwipeNavigationItemsManager<\n    Item = unknown,\n    Source extends CoreRoutedItemsManagerSource<Item> = CoreRoutedItemsManagerSource<Item>\n>\n    extends CoreRoutedItemsManager<Item, Source> {\n\n    /**\n     * Process page started operations.\n     */\n    async start(): Promise<void> {\n        this.updateSelectedItem();\n    }\n\n    /**\n     * Navigate to the next item.\n     */\n    async navigateToNextItem(): Promise<void> {\n        await this.navigateToItemBy(1, 'forward');\n    }\n\n    /**\n     * Navigate to the previous item.\n     */\n    async navigateToPreviousItem(): Promise<void> {\n        await this.navigateToItemBy(-1, 'back');\n    }\n\n    /**\n     * Has a next item.\n     */\n    async hasNextItem(): Promise<boolean> {\n        const item = await this.getItemBy(1);\n\n        return !!item;\n    }\n\n    /**\n     * Has a previous item.\n     */\n    async hasPreviousItem(): Promise<boolean> {\n        const item = await this.getItemBy(-1);\n\n        return !!item;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected getCurrentPageRoute(): ActivatedRoute | null {\n        return CoreNavigator.getCurrentRoute();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    protected getSelectedItemPathFromRoute(route: ActivatedRouteSnapshot): string | null {\n        const segments: UrlSegment[] = [];\n\n        while (route) {\n            segments.push(...route.url);\n\n            if (!route.firstChild) {\n                break;\n            }\n\n            route = route.firstChild;\n        }\n\n        return segments.map(segment => segment.path).join('/').replace(/\\/+/, '/').trim() || null;\n    }\n\n    /**\n     * Navigate to an item by an offset.\n     *\n     * @param delta Index offset.\n     * @param animationDirection Animation direction.\n     */\n    protected async navigateToItemBy(delta: number, animationDirection: 'forward' | 'back'): Promise<void> {\n        const item = await this.getItemBy(delta);\n\n        if (!item) {\n            return;\n        }\n\n        await this.navigateToItem(item, { animationDirection, replace: true });\n    }\n\n    /**\n     * Get item by an offset.\n     *\n     * @param delta Index offset.\n     */\n    protected async getItemBy(delta: number): Promise<Item | null> {\n        const items = this.getSource().getItems();\n        const selectedIndex = (this.selectedItem && items?.indexOf(this.selectedItem)) ?? -1;\n\n        if (selectedIndex === -1 || items === null) {\n            return null;\n        }\n\n        const deltaStep = delta > 0 ? 1 : -1;\n        let nextIndex = selectedIndex;\n        let deltaMoved = 0;\n\n        while (deltaMoved !== delta) {\n            nextIndex += deltaStep;\n\n            if (nextIndex < 0 || nextIndex >= items.length) {\n                break;\n            }\n\n            if (this.skipItemInSwipe(items[nextIndex])) {\n                continue;\n            }\n\n            deltaMoved += deltaStep;\n        }\n\n        if (deltaMoved === delta) {\n            return items[nextIndex];\n        }\n\n        if (!this.getSource().isCompleted()) {\n            await this.getSource().load();\n\n            return this.getItemBy(delta);\n        }\n\n        return null;\n    }\n\n    /**\n     * Check if an item should be skipped during swipe navigation.\n     *\n     * @param item Item.\n     * @returns Whether to skip this item during swipe navigation.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    protected skipItemInSwipe(item: Item): boolean {\n        return false;\n    }\n\n}\n"],"sourceRoot":"webpack:///"}